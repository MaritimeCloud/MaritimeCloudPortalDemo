{"version":3,"file":"0.chunk.js","sources":["webpack:///./src/app/backend-api/identity-registry/autogen/model/Organization.ts","webpack:///./src/app/pages/org-service-registry/designs/components/design-details/design-details.component.ts","webpack:///./src/app/pages/org-service-registry/designs/components/design-details/design-details.html","webpack:///./src/app/pages/org-service-registry/designs/components/design-list/design-list.component.ts","webpack:///./src/app/pages/org-service-registry/designs/components/design-list/design-list.html","webpack:///./src/app/pages/org-service-registry/designs/components/design-new/design-new.component.ts","webpack:///./src/app/pages/org-service-registry/designs/components/design-new/design-new.html","webpack:///./src/app/pages/org-service-registry/designs/designs.component.ts","webpack:///./src/app/pages/org-service-registry/designs/designs.module.ts","webpack:///./src/app/pages/org-service-registry/designs/designs.routing.ts","webpack:///./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.component.ts","webpack:///./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.html","webpack:///./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.component.ts","webpack:///./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.html","webpack:///./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.component.ts","webpack:///./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.html","webpack:///./src/app/pages/org-service-registry/instances/instances.component.ts","webpack:///./src/app/pages/org-service-registry/instances/instances.module.ts","webpack:///./src/app/pages/org-service-registry/instances/instances.routing.ts","webpack:///./src/app/pages/org-service-registry/org-service-registry.component.ts","webpack:///./src/app/pages/org-service-registry/org-service-registry.module.ts","webpack:///./src/app/pages/org-service-registry/org-service-registry.routing.ts","webpack:///./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.component.ts","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.html","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.component.ts","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.html","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.component.ts","webpack:///./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.html","webpack:///./src/app/pages/org-service-registry/specifications/specifications.component.ts","webpack:///./src/app/pages/org-service-registry/specifications/specifications.module.ts","webpack:///./src/app/pages/org-service-registry/specifications/specifications.routing.ts","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.component.ts","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.html","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.scss","webpack:///./src/app/pages/shared/components/designs-table/designs-table.component.ts","webpack:///./src/app/pages/shared/components/designs-table/designs-table.html","webpack:///./src/app/pages/shared/components/instances-table/instances-table.component.ts","webpack:///./src/app/pages/shared/components/instances-table/instances-table.html","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.component.ts","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.html","webpack:///./src/app/pages/shared/services/organization-view-model.service.ts","webpack:///./src/app/pages/shared/shared.module.ts"],"sourcesContent":["/**\r\n * Maritime Cloud Identity Registry API\r\n * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.\r\n *\r\n * OpenAPI spec version: 0.0.1\r\n * Contact: info@maritimecloud.net\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n'use strict';\r\nimport * as models from './models';\r\n\r\nexport interface Organization {\r\n    \r\n\r\n    address?: string;\r\n\r\n    /**\r\n     * Cannot be created/updated by editing in the model. Use the dedicate create and revoke calls.\r\n     */\r\n    certificates?: Array<models.Certificate>;\r\n\r\n    country?: string;\r\n\r\n    createdAt?: Date;\r\n\r\n    email?: string;\r\n\r\n    identityProviderAttributes?: Array<models.IdentityProviderAttribute>;\r\n\r\n    /**\r\n     * The Maritime Resource Name\r\n     */\r\n    mrn?: string;\r\n\r\n    /**\r\n     * The name of the organization\r\n     */\r\n    name?: string;\r\n\r\n    updatedAt?: Date;\r\n\r\n    url?: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/backend-api/identity-registry/autogen/model/Organization.ts","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {FileHelperService} from \"../../../../../shared/file-helper.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {Specification} from \"../../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {SpecificationsService} from \"../../../../../backend-api/service-registry/services/specifications.service\";\r\nimport {Instance} from \"../../../../../backend-api/service-registry/autogen/model/Instance\";\r\nimport {InstancesService} from \"../../../../../backend-api/service-registry/services/instances.service\";\r\nimport {AuthService} from \"../../../../../authentication/services/auth.service\";\r\nimport {SrViewModelService} from \"../../../shared/services/sr-view-model.service\";\r\n\r\n@Component({\r\n  selector: 'design-details',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./design-details.html'),\r\n  styles: []\r\n})\r\nexport class DesignDetailsComponent {\r\n  public design: Design;\r\n  public specifications: Array<Specification>;\r\n  public instances: Array<Instance>;\r\n  public title:string;\r\n  public labelValues:Array<LabelValueModel>;\r\n  public isLoadingInstances: boolean;\r\n  public isLoadingDesign: boolean;\r\n  public onCreate: Function;\r\n  public onGotoSpec: Function;\r\n  public onGotoInstance: Function;\r\n\r\n  constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, private viewModelService: SrViewModelService, private navigationHelperService: NavigationHelperService, private instancesService: InstancesService, private specificationsService: SpecificationsService, private notifications: MCNotificationsService, private designsService: DesignsService, private fileHelperService: FileHelperService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onCreate = this.createInstance.bind(this);\r\n    this.onGotoSpec = this.gotoSpecification.bind(this);\r\n    this.onGotoInstance = this.gotoInstance.bind(this);\r\n    this.isLoadingDesign = true;\r\n    this.isLoadingInstances = true;\r\n    this.title = 'Loading ...';\r\n    this.loadDesign();\r\n  }\r\n\r\n  public downloadXml() {\r\n    this.fileHelperService.downloadXml(this.design.designAsXml);\r\n  }\r\n\r\n  public downloadDoc() {\r\n    this.fileHelperService.downloadDoc(this.design.designAsDoc);\r\n  }\r\n\r\n  private loadDesign() {\r\n    let designId = this.route.snapshot.params['id'];\r\n    let version = this.route.snapshot.queryParams['designVersion'];\r\n    this.designsService.getDesign(designId, version).subscribe(\r\n      design => {\r\n        this.title = design.name;\r\n        this.design = design;\r\n        this.loadSpecifications();\r\n        this.loadInstances();\r\n      },\r\n      err => {\r\n        // TODO: make this as a general component\r\n        if (err.status == 404) {\r\n          this.router.navigate(['/error404'], {relativeTo: this.route, replaceUrl: true })\r\n        }\r\n        this.title = 'Error while loading';\r\n        this.isLoadingDesign = false;\r\n        this.isLoadingInstances = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get design', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadInstances() {\r\n    this.instancesService.getInstancesForDesign(this.design.designId, this.design.version).subscribe(\r\n      instances => {\r\n        this.instances = instances;\r\n        this.isLoadingInstances = false;\r\n      },\r\n      err => {\r\n        this.isLoadingInstances = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get instances', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public delete() {\r\n    this.designsService.deleteDesign(this.design).subscribe(\r\n      () => {\r\n        this.navigationHelperService.navigateToOrgDesign('', '');\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to delete design', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    // TODO ;-)\r\n    return this.authService.authState.user === 'rmj';\r\n  }\r\n\r\n\r\n  // TODO this should be deleted and taken directly from the design-model when service registry has proper data. from design.specifications\r\n\r\n  private loadSpecifications() {\r\n    this.specificationsService.getSpecificationsForDesign(this.design).subscribe(\r\n      specifications => {\r\n        this.specifications = specifications;\r\n        this.labelValues = this.viewModelService.generateLabelValuesForDesign(this.design);\r\n        this.generateLabelValuesForSpecification();\r\n        this.isLoadingDesign = false;\r\n      },\r\n      err => {\r\n        this.isLoadingDesign = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get specifications', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private generateLabelValuesForSpecification() {\r\n    if (this.specifications && this.specifications.length > 0) {\r\n      let plur = (this.specifications.length > 1 ? 's' : '');\r\n      var label = 'Implemented specification' + plur;\r\n      this.specifications.forEach((specification) => {\r\n        this.labelValues.push({label: label, valueHtml: specification.name + \" - \" + specification.version, linkFunction: this.onGotoSpec, linkValue: [specification.specificationId,specification.version]});\r\n        label = \"\";\r\n      });\r\n    }\r\n  }\r\n\r\n  private createInstance() {\r\n    this.navigationHelperService.navigateToCreateInstance(this.design.designId, this.design.version);\r\n  }\r\n\r\n  private gotoSpecification(linkValue: any) {\r\n    try {\r\n      this.navigationHelperService.navigateToOrgSpecification(linkValue[0], linkValue[1]);\r\n    } catch ( error ) {\r\n      this.notifications.generateNotification('Error', 'Error when trying to go to specification', MCNotificationType.Error, error);\r\n    }\r\n  }\r\n\r\n  private gotoInstance(index:number) {\r\n    this.navigationHelperService.navigateToOrgInstance(this.instances[index].instanceId, this.instances[index].version);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/components/design-details/design-details.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{title}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <mc-label-value-table [isLoading]=\\\"isLoadingDesign\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n      <ul *ngIf=\\\"design && !isLoadingDesign\\\" class=\\\"btn-list clearfix\\\">\\r\\n        <li *ngIf=\\\"design.designAsDoc\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadDoc()\\\">Download document</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"design.designAsXml\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadXml()\\\">Download XML</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isAdmin()\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"delete()\\\">Delete Design</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      <h5>Instances that implements this Design</h5>\\r\\n      <instances-table [instances]=\\\"instances\\\" [isLoading]=\\\"isLoadingInstances\\\" [onRowClick]=\\\"onGotoInstance\\\"></instances-table>\\r\\n      <mc-create-button *ngIf=\\\"!isLoadingInstances\\\" title=\\\"Register new Instance\\\" [onClick]=\\\"onCreate\\\" ></mc-create-button>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/designs/components/design-details/design-details.html\n// module id = ./src/app/pages/org-service-registry/designs/components/design-details/design-details.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\n\r\n@Component({\r\n  selector: 'design-list',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./design-list.html'),\r\n  styles: []\r\n})\r\nexport class DesignListComponent implements OnInit {\r\n  public organization: Organization;\r\n  public designs: Array<Design>;\r\n  public isLoading: boolean;\r\n  public onGotoDesign: Function;\r\n\tpublic cardTitle:string;\r\n  constructor(private route: ActivatedRoute, private router: Router, private notifications: MCNotificationsService, private orgService: OrganizationsService, private designsService: DesignsService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n\t  this.cardTitle = 'Loading ...';\r\n    this.onGotoDesign = this.gotoDesign.bind(this);\r\n\r\n    this.isLoading = true;\r\n    this.loadMyOrganization();\r\n    this.loadDesigns();\r\n  }\r\n\r\n  private loadDesigns() {\r\n    this.designsService.getDesignsForMyOrg().subscribe(\r\n      designs => {\r\n        this.designs = designs;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get designs', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n\t      //this.cardTitle = 'Designs for ' + organization.name;\r\n\t      this.cardTitle = 'All Designs';\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private gotoDesign(index:number) {\r\n    this.router.navigate([this.designs[index].designId], {queryParams: { designVersion: this.designs[index].version}, relativeTo: this.route })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/components/design-list/design-list.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{cardTitle}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <designs-table [designs]=\\\"designs\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onGotoDesign\\\"></designs-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/designs/components/design-list/design-list.html\n// module id = ./src/app/pages/org-service-registry/designs/components/design-list/design-list.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../../shared/mc-notifications.service\";\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {FileUploadType} from \"../../../../../theme/components/mcFileUploader/mcFileUploader.component\";\r\nimport {Doc} from \"../../../../../backend-api/service-registry/autogen/model/Doc\";\r\nimport {Xml} from \"../../../../../backend-api/service-registry/autogen/model/Xml\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {XmlParserService} from \"../../../../../shared/xml-parser.service\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {Specification} from \"../../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {SpecificationsService} from \"../../../../../backend-api/service-registry/services/specifications.service\";\r\nimport {LabelValueModel} from \"../../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {SrViewModelService} from \"../../../shared/services/sr-view-model.service\";\r\n\r\n@Component({\r\n  selector: 'design-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./design-new.html'),\r\n  styles: []\r\n})\r\nexport class DesignNewComponent implements OnInit {\r\n  public organization: Organization;\r\n  public labelValues:Array<LabelValueModel>;\r\n  public captionXml = 'Upload Design Xml file';\r\n  public captionDoc = 'Upload Design Document file';\r\n  public fileTypeXml = FileUploadType.Xml;\r\n  public fileTypeDoc = FileUploadType.Doc;\r\n  public requiredTextXml = 'You need to upload Xml file';\r\n  public isFormValid = false;\r\n  public isLoading = true;\r\n\r\n  public isRegistering = false;\r\n  public registerTitle = \"Register Design\";\r\n  public registerButtonClass = \"btn btn-danger btn-raised\";\r\n  public onRegister: Function;\r\n\r\n  private specification:Specification;\r\n  private xml:Xml;\r\n  private doc:Doc;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private xmlParserService: XmlParserService, private viewModelService: SrViewModelService, private navigationService: NavigationHelperService, private notifications: MCNotificationsService, private designsService: DesignsService, private orgService: OrganizationsService, private specificationsService: SpecificationsService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRegister = this.register.bind(this);\r\n    this.isRegistering = false;\r\n    this.isLoading = true;\r\n    this.loadMyOrganization();\r\n    this.loadSpecification();\r\n  }\r\n\r\n  public calculateFormValid() {\r\n    this.isFormValid = this.xml != null;\r\n  }\r\n\r\n  public onUploadDoc(file: Doc) {\r\n    this.doc = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public onUploadXml(file: Xml) {\r\n    this.xml = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationService.cancelCreateDesign();\r\n  }\r\n\r\n  public register() {\r\n    this.isRegistering = true;\r\n    try {\r\n      var design:Design = {};\r\n      design.designAsXml = this.xml;\r\n      design.designAsDoc = this.doc;\r\n      design.name = this.xmlParserService.getValueFromField('name', this.xml);\r\n      design.description = this.xmlParserService.getValueFromField('description', this.xml);\r\n      design.designId = this.xmlParserService.getValueFromField('id', this.xml);\r\n      design.status = this.xmlParserService.getValueFromField('status', this.xml);\r\n      design.organizationId = this.organization.mrn;\r\n      design.version = this.xmlParserService.getValueFromField('version', this.xml);\r\n      design.specifications = [this.specification];\r\n      this.createDesign(design);\r\n    } catch ( error ) {\r\n      this.isRegistering = false;\r\n      this.notifications.generateNotification('Error in XML', error.message, MCNotificationType.Error, error);\r\n    }\r\n  }\r\n\r\n  private createDesign(design:Design) {\r\n    this.designsService.createDesign(design).subscribe(\r\n      design => {\r\n        this.navigationService.navigateToOrgDesign(design.designId, design.version);\r\n        this.isRegistering = false;\r\n      },\r\n      err => {\r\n        this.isRegistering = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to create design', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n        this.calculateFormValid();\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadSpecification() {\r\n    let specificationId = this.activatedRoute.snapshot.queryParams['specificationId'];\r\n    let version = this.activatedRoute.snapshot.queryParams['specificationVersion'];\r\n    this.specificationsService.getSpecification(specificationId, version).subscribe(\r\n      specification => {\r\n        this.specification = specification;\r\n        this.labelValues = this.viewModelService.generateLabelValuesForSpecification(this.specification);\r\n        this.calculateFormValid();\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get specification', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/components/design-new/design-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Register new Design for {{organization.name}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <h5 *ngIf=\\\"specification\\\">Registering a design for this specification</h5>\\r\\n      <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      <div *ngIf=\\\"specification\\\">\\r\\n        <form>\\r\\n          <mc-file-uploader [caption]=\\\"captionXml\\\" [fileUploadType]=\\\"fileTypeXml\\\" [requiredText]=\\\"requiredTextXml\\\" (onUpload)=\\\"onUploadXml($event)\\\"></mc-file-uploader>\\r\\n          <mc-file-uploader [caption]=\\\"captionDoc\\\" [fileUploadType]=\\\"fileTypeDoc\\\" (onUpload)=\\\"onUploadDoc($event)\\\"></mc-file-uploader>\\r\\n          <ul class=\\\"btn-list clearfix\\\">\\r\\n            <li>\\r\\n              <mc-loading-button [class]=\\\"registerButtonClass\\\" [disabled]=\\\"!isFormValid\\\" [isLoading]=\\\"isRegistering\\\" [title]=\\\"registerTitle\\\" [onClick]=\\\"onRegister\\\" ></mc-loading-button>\\r\\n            </li>\\r\\n            <li>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!specification && !isLoading\\\">No data</div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/designs/components/design-new/design-new.html\n// module id = ./src/app/pages/org-service-registry/designs/components/design-new/design-new.html\n// module chunks = 0","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'designs',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class DesignsComponent {\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/designs.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\n\r\nimport { routing }       from './designs.routing';\r\nimport {NgaModule} from \"../../../theme/nga.module\";\r\nimport {DesignsComponent} from \"./designs.component\";\r\nimport {DesignListComponent} from \"./components/design-list/design-list.component\";\r\nimport {DesignDetailsComponent} from \"./components/design-details/design-details.component\";\r\nimport {SharedModule} from \"../../shared/shared.module\";\r\nimport {DesignNewComponent} from \"./components/design-new/design-new.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule,\r\n    SharedModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    DesignsComponent,\r\n    DesignListComponent,\r\n    DesignDetailsComponent,\r\n    DesignNewComponent\r\n  ]\r\n})\r\nexport default class DesignsModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/designs.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\nimport {DesignsComponent} from \"./designs.component\";\r\nimport {DesignListComponent} from \"./components/design-list/design-list.component\";\r\nimport {DesignDetailsComponent} from \"./components/design-details/design-details.component\";\r\nimport {DesignNewComponent} from \"./components/design-new/design-new.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nexport const designRoutes: Routes = [\r\n  {\r\n    path: 'designs',\r\n    component: DesignsComponent,\r\n    data:{breadcrumb: 'Designs'},\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: DesignListComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: DesignNewComponent,\r\n        data:{breadcrumb: 'Register'}\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: DesignDetailsComponent,\r\n        data:{breadcrumb: 'Details'}\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(designRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/designs/designs.routing.ts","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {FileHelperService} from \"../../../../../shared/file-helper.service\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {Instance} from \"../../../../../backend-api/service-registry/autogen/model/Instance\";\r\nimport {InstancesService} from \"../../../../../backend-api/service-registry/services/instances.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {SrViewModelService} from \"../../../shared/services/sr-view-model.service\";\r\nimport {AuthService} from \"../../../../../authentication/services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'instance-details',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instance-details.html'),\r\n  styles: []\r\n})\r\nexport class InstanceDetailsComponent {\r\n  public instance: Instance;\r\n  public designs: Array<Design>;\r\n  public title:string;\r\n  public labelValues:Array<LabelValueModel>;\r\n  public isLoadingDesigns: boolean;\r\n  public isLoadingInstance: boolean;\r\n  public onGotoDesign: Function;\r\n\r\n  constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, private viewModelService: SrViewModelService, private navigationHelperService: NavigationHelperService, private instancesService: InstancesService, private notifications: MCNotificationsService, private designsService: DesignsService, private fileHelperService: FileHelperService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onGotoDesign = this.gotoDesign.bind(this);\r\n    this.isLoadingInstance = true;\r\n    this.title = 'Loading ...';\r\n    this.loadInstance();\r\n  }\r\n\r\n  public downloadXml() {\r\n    this.fileHelperService.downloadXml(this.instance.instanceAsXml);\r\n  }\r\n\r\n  public downloadDoc() {\r\n    this.fileHelperService.downloadDoc(this.instance.instanceAsDoc);\r\n  }\r\n\r\n  public delete() {\r\n    this.instancesService.deleteInstance(this.instance).subscribe(\r\n      () => {\r\n        this.navigationHelperService.navigateToOrgInstance('', '');\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to delete instance', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    // TODO :\r\n    return this.authService.authState.user === 'rmj';\r\n  }\r\n\r\n  private loadInstance() {\r\n    let instanceId = this.route.snapshot.params['id'];\r\n    let version = this.route.snapshot.queryParams['instanceVersion'];\r\n    this.instancesService.getInstance(instanceId, version).subscribe(\r\n      instance => {\r\n        this.title = instance.name;\r\n        this.instance = instance;\r\n        this.loadDesigns();\r\n      },\r\n      err => {\r\n        // TODO: make this as a general component\r\n        if (err.status == 404) {\r\n          this.router.navigate(['/error404'], {relativeTo: this.route, replaceUrl: true })\r\n        }\r\n        this.title = 'Error while loading';\r\n        this.isLoadingInstance = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get instance', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  // TODO this should be deleted and taken directly from the instance-model when service registry has proper data. from instance.designs\r\n  private loadDesigns() {\r\n    this.designsService.getDesignsForInstance(this.instance).subscribe(\r\n      designs => {\r\n        this.designs = designs;\r\n        this.labelValues = this.viewModelService.generateLabelValuesForInstance(this.instance);\r\n        this.generateLabelValuesForDesigns();\r\n        this.isLoadingInstance = false;\r\n      },\r\n      err => {\r\n        this.isLoadingInstance = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get designs', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private generateLabelValuesForDesigns() {\r\n    if (this.designs && this.designs.length > 0) {\r\n      let plur = (this.designs.length > 1 ? 's' : '');\r\n      var label = 'Implemented design' + plur;\r\n      this.designs.forEach((design) => {\r\n        this.labelValues.push({label: label, valueHtml: design.name + \" - \" + design.version, linkFunction: this.onGotoDesign, linkValue: [design.designId, design.version]});\r\n        label = \"\";\r\n      });\r\n    }\r\n  }\r\n\r\n  private gotoDesign(linkValue:any\r\n  ) {\r\n    try {\r\n      this.navigationHelperService.navigateToOrgDesign(linkValue[0], linkValue[1]);\r\n    } catch ( error ) {\r\n      this.notifications.generateNotification('Error', 'Error when trying to go to design', MCNotificationType.Error, error);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{title}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <mc-label-value-table [isLoading]=\\\"isLoadingInstance\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n      <ul *ngIf=\\\"instance && !isLoadingInstance\\\" class=\\\"btn-list clearfix\\\">\\r\\n        <li *ngIf=\\\"instance.instanceAsDoc\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadDoc()\\\">Download document</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"instance.instanceAsXml\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadXml()\\\">Download XML</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isAdmin()\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"delete()\\\">Delete Instance</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.html\n// module id = ./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {Instance} from \"../../../../../backend-api/service-registry/autogen/model/Instance\";\r\nimport {InstancesService} from \"../../../../../backend-api/service-registry/services/instances.service\";\r\n\r\n@Component({\r\n  selector: 'instance-list',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instance-list.html'),\r\n  styles: []\r\n})\r\nexport class InstanceListComponent implements OnInit {\r\n  public organization: Organization;\r\n  public instances: Array<Instance>;\r\n  public isLoading: boolean;\r\n  public onGotoInstance: Function;\r\n\tpublic cardTitle:string;\r\n  constructor(private route: ActivatedRoute, private router: Router, private notifications: MCNotificationsService, private orgService: OrganizationsService, private instancesService: InstancesService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n\t  this.cardTitle = 'Loading ...';\r\n    this.onGotoInstance = this.gotoInstance.bind(this);\r\n\r\n    this.isLoading = true;\r\n    this.loadMyOrganization();\r\n    this.loadInstances();\r\n  }\r\n\r\n  private loadInstances() {\r\n    this.instancesService.getInstancesForMyOrg().subscribe(\r\n      instances => {\r\n        this.instances = instances;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get instances', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n\t      //this.cardTitle = 'Instances for ' + organization.name;\r\n\t      this.cardTitle = 'All Instances';\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private gotoInstance(index:number) {\r\n    this.router.navigate([this.instances[index].instanceId], {queryParams: { instanceVersion: this.instances[index].version}, relativeTo: this.route })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{cardTitle}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <instances-table [instances]=\\\"instances\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onGotoInstance\\\"></instances-table>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.html\n// module id = ./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../../shared/mc-notifications.service\";\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {FileUploadType} from \"../../../../../theme/components/mcFileUploader/mcFileUploader.component\";\r\nimport {Doc} from \"../../../../../backend-api/service-registry/autogen/model/Doc\";\r\nimport {Xml} from \"../../../../../backend-api/service-registry/autogen/model/Xml\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {XmlParserService} from \"../../../../../shared/xml-parser.service\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {LabelValueModel} from \"../../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {SrViewModelService} from \"../../../shared/services/sr-view-model.service\";\r\nimport {InstancesService} from \"../../../../../backend-api/service-registry/services/instances.service\";\r\nimport {Instance} from \"../../../../../backend-api/service-registry/autogen/model/Instance\";\r\nimport {IdServicesService} from \"../../../../../backend-api/identity-registry/services/id-services.service\";\r\nimport {Service} from \"../../../../../backend-api/identity-registry/autogen/model/Service\";\r\n\r\n@Component({\r\n  selector: 'instance-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instance-new.html'),\r\n  styles: []\r\n})\r\nexport class InstanceNewComponent implements OnInit {\r\n  public organization: Organization;\r\n  public labelValues:Array<LabelValueModel>;\r\n  public captionXml = 'Upload Instance Xml file';\r\n  public captionDoc = 'Upload Instance Document file';\r\n  public fileTypeXml = FileUploadType.Xml;\r\n  public fileTypeDoc = FileUploadType.Doc;\r\n  public requiredTextXml = 'You need to upload Xml file';\r\n  public isFormValid = false;\r\n  public isLoading = true;\r\n\r\n  public isRegistering = false;\r\n  public registerTitle = \"Register Instance\";\r\n  public registerButtonClass = \"btn btn-danger btn-raised\";\r\n  public onRegister: Function;\r\n\r\n  private design:Design;\r\n  private xml:Xml;\r\n  private doc:Doc;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, private xmlParserService: XmlParserService, private viewModelService: SrViewModelService, private navigationService: NavigationHelperService, private notifications: MCNotificationsService, private designsService: DesignsService, private orgService: OrganizationsService, private instancesService: InstancesService, private idServicesService: IdServicesService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRegister = this.register.bind(this);\r\n    this.isRegistering = false;\r\n    this.isLoading = true;\r\n    this.loadMyOrganization();\r\n    this.loadDesign();\r\n  }\r\n\r\n  public calculateFormValid() {\r\n    this.isFormValid = this.xml != null;\r\n  }\r\n\r\n  public onUploadDoc(file: Doc) {\r\n    this.doc = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public onUploadXml(file: Xml) {\r\n    this.xml = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationService.cancelCreateInstance();\r\n  }\r\n\r\n  public register() {\r\n    this.isRegistering = true;\r\n    try {\r\n      var instance:Instance = {};\r\n      instance.instanceAsXml = this.xml;\r\n      instance.instanceAsDoc = this.doc;\r\n      instance.name = this.xmlParserService.getValueFromField('name', this.xml);\r\n      instance.description = this.xmlParserService.getValueFromField('description', this.xml);\r\n      instance.instanceId = this.xmlParserService.getValueFromField('id', this.xml);\r\n      instance.status = this.xmlParserService.getValueFromField('status', this.xml);\r\n      instance.keywords = this.xmlParserService.getValueFromField('keywords', this.xml);\r\n      instance.organizationId = this.organization.mrn;\r\n      instance.version = this.xmlParserService.getValueFromField('version', this.xml);\r\n      instance.designs = [this.design];\r\n      this.createInstance(instance);\r\n    } catch ( error ) {\r\n      this.isRegistering = false;\r\n      this.notifications.generateNotification('Error in XML', error.message, MCNotificationType.Error, error);\r\n    }\r\n  }\r\n\r\n  private createInstance(instance:Instance) {\r\n    this.instancesService.createInstance(instance).subscribe(\r\n      instanceCreated => {\r\n        this.createIdService(instanceCreated);\r\n        this.isRegistering = false;\r\n      },\r\n      err => {\r\n        this.isRegistering = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to create instance', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private createIdService(instance:Instance) {\r\n    // TODO mere snak nødvendigt før det er på plads\r\n    this.navigationService.navigateToOrgInstance(instance.instanceId, instance.version);\r\n    /*\r\n    let idService:Service = {};\r\n\r\n    this.idServicesService.createIdService(idService).subscribe(\r\n      service => {\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to create service instance in Identity Registry', MCNotificationType.Error, err);\r\n      },\r\n      () => {\r\n        this.navigationService.navigateToOrgInstance(instance.instanceId);\r\n      }\r\n    );\r\n    */\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n        this.calculateFormValid();\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDesign() {\r\n    let designId = this.activatedRoute.snapshot.queryParams['designId'];\r\n    let version = this.activatedRoute.snapshot.queryParams['designVersion'];\r\n    this.designsService.getDesign(designId, version).subscribe(\r\n      design => {\r\n        this.design = design;\r\n        this.labelValues = this.viewModelService.generateLabelValuesForDesign(this.design);\r\n        this.calculateFormValid();\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get design', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Register new Instance for {{organization.name}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <h5 *ngIf=\\\"design\\\">Registering an instance for this design</h5>\\r\\n      <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      <div *ngIf=\\\"design\\\">\\r\\n        <form>\\r\\n          <mc-file-uploader [caption]=\\\"captionXml\\\" [fileUploadType]=\\\"fileTypeXml\\\" [requiredText]=\\\"requiredTextXml\\\" (onUpload)=\\\"onUploadXml($event)\\\"></mc-file-uploader>\\r\\n          <mc-file-uploader [caption]=\\\"captionDoc\\\" [fileUploadType]=\\\"fileTypeDoc\\\" (onUpload)=\\\"onUploadDoc($event)\\\"></mc-file-uploader>\\r\\n          <ul class=\\\"btn-list clearfix\\\">\\r\\n            <li>\\r\\n              <mc-loading-button [class]=\\\"registerButtonClass\\\" [disabled]=\\\"!isFormValid\\\" [isLoading]=\\\"isRegistering\\\" [title]=\\\"registerTitle\\\" [onClick]=\\\"onRegister\\\" ></mc-loading-button>\\r\\n            </li>\\r\\n            <li>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!design && !isLoading\\\">No data</div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.html\n// module id = ./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.html\n// module chunks = 0","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'instancess',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class InstancesComponent {\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/instances.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\n\r\nimport { routing }       from './instances.routing';\r\nimport {NgaModule} from \"../../../theme/nga.module\";\r\nimport {SharedModule} from \"../../shared/shared.module\";\r\nimport {InstancesComponent} from \"./instances.component\";\r\nimport {InstanceListComponent} from \"./components/instance-list/instance-list.component\";\r\nimport {InstanceDetailsComponent} from \"./components/instance-details/instance-details.component\";\r\nimport {InstanceNewComponent} from \"./components/instance-new/instance-new.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule,\r\n    SharedModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    InstancesComponent,\r\n    InstanceListComponent,\r\n    InstanceDetailsComponent,\r\n    InstanceNewComponent\r\n  ]\r\n})\r\nexport default class InstancesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/instances.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\nimport {InstancesComponent} from \"./instances.component\";\r\nimport {InstanceListComponent} from \"./components/instance-list/instance-list.component\";\r\nimport {InstanceDetailsComponent} from \"./components/instance-details/instance-details.component\";\r\nimport {InstanceNewComponent} from \"./components/instance-new/instance-new.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'instances',\r\n    component: InstancesComponent,\r\n    data:{breadcrumb: 'Instances'},\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: InstanceListComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: InstanceNewComponent,\r\n        data:{breadcrumb: 'Register'}\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: InstanceDetailsComponent,\r\n        data:{breadcrumb: 'Details'}\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/instances/instances.routing.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'org-service-registry',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class OrgServiceRegistryComponent {\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/org-service-registry.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { NgaModule } from '../../theme/nga.module';\r\n\r\nimport { routing }       from './org-service-registry.routing';\r\nimport { OrgServiceRegistryComponent } from './org-service-registry.component';\r\nimport SpecificationsModule from \"./specifications/specifications.module\";\r\nimport DesignsModule from \"./designs/designs.module\";\r\nimport InstancesModule from \"./instances/instances.module\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule,\r\n    SpecificationsModule,\r\n    DesignsModule,\r\n    InstancesModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    OrgServiceRegistryComponent\r\n  ]\r\n})\r\nexport default class OrgServiceRegistryModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/org-service-registry.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\n\r\nimport { OrgServiceRegistryComponent } from './org-service-registry.component';\r\nimport {SpecificationsComponent} from \"./specifications/specifications.component\";\r\nimport {DesignsComponent} from \"./designs/designs.component\";\r\nimport {InstancesComponent} from \"./instances/instances.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrgServiceRegistryComponent,\r\n    children: [\r\n      { path: 'specifications', component: SpecificationsComponent },\r\n      { path: 'designs', component: DesignsComponent },\r\n      { path: 'instances', component: InstancesComponent }\r\n\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/org-service-registry.routing.ts","import {Injectable, OnInit} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Injectable()\r\nexport class SrViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public generateLabelValuesForSpecification(specification:Specification):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (specification) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: specification.specificationId});\r\n      labelValues.push({label: 'Name', valueHtml: specification.name});\r\n      labelValues.push({label: 'Version', valueHtml: specification.version});\r\n      labelValues.push({label: 'Status', valueHtml: specification.status});\r\n      labelValues.push({label: 'Description', valueHtml: specification.description});\r\n    }\r\n    return labelValues\r\n  }\r\n\r\n  public generateLabelValuesForDesign(design:Design):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (design) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: design.designId});\r\n      labelValues.push({label: 'Name', valueHtml: design.name});\r\n      labelValues.push({label: 'Version', valueHtml: design.version});\r\n      labelValues.push({label: 'Status', valueHtml: design.status});\r\n      labelValues.push({label: 'Description', valueHtml: design.description});\r\n    }\r\n    return labelValues;\r\n  }\r\n\r\n  public generateLabelValuesForInstance(instance:Instance):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (instance) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: instance.instanceId});\r\n      labelValues.push({label: 'Name', valueHtml: instance.name});\r\n      labelValues.push({label: 'Version', valueHtml: instance.version});\r\n      labelValues.push({label: 'Status', valueHtml: instance.status});\r\n      labelValues.push({label: 'Description', valueHtml: instance.description});\r\n      labelValues.push({label: 'Service endpoint', valueHtml: instance.endpointUri});\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {Specification} from \"../../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {LabelValueModel} from \"../../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {SpecificationsService} from \"../../../../../backend-api/service-registry/services/specifications.service\";\r\nimport {FileHelperService} from \"../../../../../shared/file-helper.service\";\r\nimport {Design} from \"../../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {DesignsService} from \"../../../../../backend-api/service-registry/services/designs.service\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {InstancesService} from \"../../../../../backend-api/service-registry/services/instances.service\";\r\nimport {Instance} from \"../../../../../backend-api/service-registry/autogen/model/Instance\";\r\nimport {SrViewModelService} from \"../../../shared/services/sr-view-model.service\";\r\nimport {AuthService} from \"../../../../../authentication/services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'specification-details',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specification-details.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationDetailsComponent {\r\n  public specification: Specification;\r\n  public designs: Array<Design>;\r\n  public instances: Array<Instance>;\r\n  public title:string;\r\n  public labelValues:Array<LabelValueModel>;\r\n  public isLoadingSpecification: boolean;\r\n  public isLoadingDesigns: boolean;\r\n  public isLoadingInstances: boolean;\r\n  public onCreate: Function;\r\n  public onGotoDesign: Function;\r\n  public onGotoInstance: Function;\r\n\r\n  constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, private viewModelService: SrViewModelService, private navigationHelperService: NavigationHelperService, private instancesService: InstancesService, private notifications: MCNotificationsService, private specificationsService: SpecificationsService, private designsService: DesignsService, private fileHelperService: FileHelperService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onCreate = this.createDesign.bind(this);\r\n    this.onGotoDesign = this.gotoDesign.bind(this);\r\n    this.onGotoInstance = this.gotoInstance.bind(this);\r\n\r\n    this.isLoadingSpecification = true;\r\n    this.isLoadingDesigns = true;\r\n    this.isLoadingInstances = true;\r\n    this.title = 'Loading ...';\r\n    let specificationId = this.route.snapshot.params['id'];\r\n    let version = this.route.snapshot.queryParams['specificationVersion'];\r\n    this.loadSpecification(specificationId, version);\r\n  }\r\n\r\n  public downloadXml() {\r\n    this.fileHelperService.downloadXml(this.specification.specAsXml);\r\n  }\r\n\r\n  public downloadDoc() {\r\n    this.fileHelperService.downloadDoc(this.specification.specAsDoc);\r\n  }\r\n\r\n  public delete() {\r\n    this.specificationsService.deleteSpecification(this.specification).subscribe(\r\n      () => {\r\n        this.navigationHelperService.navigateToOrgSpecification('', '');\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to delete specification', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private gotoDesign(index:number) {\r\n    this.navigationHelperService.navigateToOrgDesign(this.designs[index].designId, this.designs[index].version);\r\n  }\r\n\r\n  private loadSpecification(specificationId:string, version:string) {\r\n    this.specificationsService.getSpecification(specificationId, version).subscribe(\r\n      specification => {\r\n        this.title = specification.name;\r\n        this.specification = specification;\r\n        this.labelValues = this.viewModelService.generateLabelValuesForSpecification(this.specification);\r\n        this.isLoadingSpecification = false;\r\n        this.loadDesigns();\r\n        this.loadInstances();\r\n      },\r\n      err => {\r\n        // TODO: make this as a general component\r\n        if (err.status == 404) {\r\n          this.router.navigate(['/error404'], {relativeTo: this.route, replaceUrl: true })\r\n        }\r\n        this.title = 'Error while loading';\r\n        this.isLoadingSpecification = false;\r\n        this.isLoadingDesigns = false;\r\n        this.isLoadingInstances = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get specification', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    // TODO ;-)\r\n    return this.authService.authState.user === 'rmj';\r\n  }\r\n\r\n\r\n  private loadInstances() {\r\n    this.instancesService.getInstancesForSpecification(this.specification.specificationId, this.specification.version).subscribe(\r\n      instances => {\r\n        this.instances = instances;\r\n        this.isLoadingInstances = false;\r\n      },\r\n      err => {\r\n        this.isLoadingInstances = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get instances', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadDesigns() {\r\n    this.designsService.getDesignsForSpecification(this.specification.specificationId, this.specification.version).subscribe(\r\n      designs => {\r\n        this.designs = designs;\r\n        this.isLoadingDesigns = false;\r\n      },\r\n      err => {\r\n        this.isLoadingDesigns = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get designs', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private createDesign() {\r\n    this.navigationHelperService.navigateToCreateDesign(this.specification.specificationId, this.specification.version);\r\n  }\r\n\r\n  private gotoInstance(index:number) {\r\n    this.navigationHelperService.navigateToOrgInstance(this.instances[index].instanceId, this.instances[index].version);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{title}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <mc-label-value-table [isLoading]=\\\"isLoadingSpecification\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n      <ul *ngIf=\\\"specification && !isLoadingSpecification\\\" class=\\\"btn-list clearfix\\\">\\r\\n        <li *ngIf=\\\"specification.specAsDoc\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadDoc()\\\">Download document</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"specification.specAsXml\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadXml()\\\">Download XML</button>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"isAdmin()\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"delete()\\\">Delete Specification</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      <h5>Designs that implements this Specification</h5>\\r\\n      <designs-table [designs]=\\\"designs\\\" [isLoading]=\\\"isLoadingDesigns\\\" [onRowClick]=\\\"onGotoDesign\\\"></designs-table>\\r\\n      <mc-create-button *ngIf=\\\"!isLoadingDesigns\\\" title=\\\"Register new Design\\\" [onClick]=\\\"onCreate\\\"></mc-create-button>\\r\\n\\r\\n      <!-- Doesn't work atm.\\r\\n      <div class=\\\"separator\\\"></div>\\r\\n\\r\\n      <h5>Instances that implements this Specification</h5>\\r\\n      <instances-table [instances]=\\\"instances\\\" [isLoading]=\\\"isLoadingInstances\\\" [onRowClick]=\\\"onGotoInstance\\\"></instances-table>\\r\\n      -->\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.html\n// module id = ./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../../shared/mc-notifications.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {SpecificationsService} from \"../../../../../backend-api/service-registry/services/specifications.service\";\r\nimport {Specification} from \"../../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {Router, ActivatedRoute} from \"@angular/router\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\n\r\n@Component({\r\n  selector: 'specification-list',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specification-list.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationListComponent implements OnInit {\r\n  public organization: Organization;\r\n  public specifications: Array<Specification>;\r\n  public isLoading: boolean;\r\n  public onCreate: Function;\r\n  public onGotoSpec: Function;\r\n\tpublic cardTitle:string;\r\n  constructor(private navigationService: NavigationHelperService, private route: ActivatedRoute, private router: Router, private notifications: MCNotificationsService, private orgService: OrganizationsService, private specificationsService: SpecificationsService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n\t  this.cardTitle = 'Loading ...';\r\n    this.onCreate = this.createSpecification.bind(this);\r\n    this.onGotoSpec = this.gotoSpecification.bind(this);\r\n\r\n    this.isLoading = true;\r\n\r\n    this.loadMyOrganization();\r\n    this.loadSpecifications();\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n\t      // TODO: change when filtering on organization\r\n\t      //this.cardTitle = 'Specifications for ' + organization.name;\r\n\t      this.cardTitle = 'All Specifications';\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadSpecifications() {\r\n    this.specificationsService.getSpecificationsForMyOrg().subscribe(\r\n      specifications => {\r\n        this.specifications = specifications;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to get specifications', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private createSpecification() {\r\n    this.navigationService.navigateToCreateSpecification();\r\n  }\r\n\r\n  private gotoSpecification(index:number) {\r\n    this.router.navigate([this.specifications[index].specificationId], {queryParams: { specificationVersion: this.specifications[index].version}, relativeTo: this.route })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{cardTitle}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <specifications-table [specifications]=\\\"specifications\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onGotoSpec\\\"></specifications-table>\\r\\n      <mc-create-button *ngIf=\\\"!isLoading\\\" title=\\\"Register new Specification\\\" [onClick]=\\\"onCreate\\\" ></mc-create-button>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.html\n// module id = ./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.html\n// module chunks = 0","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {SpecificationsService} from \"../../../../../backend-api/service-registry/services/specifications.service\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../../shared/mc-notifications.service\";\r\nimport {OrganizationsService} from \"../../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {Organization} from \"../../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {FileUploadType} from \"../../../../../theme/components/mcFileUploader/mcFileUploader.component\";\r\nimport {Doc} from \"../../../../../backend-api/service-registry/autogen/model/Doc\";\r\nimport {Xml} from \"../../../../../backend-api/service-registry/autogen/model/Xml\";\r\nimport {NavigationHelperService} from \"../../../../../shared/navigation-helper.service\";\r\nimport {Specification} from \"../../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {XmlParserService} from \"../../../../../shared/xml-parser.service\";\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'specification-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specification-new.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationNewComponent implements OnInit {\r\n  public organization: Organization;\r\n  public captionXml = 'Upload Specification Xml file';\r\n  public captionDoc = 'Upload Specification Document file';\r\n  public fileTypeXml = FileUploadType.Xml;\r\n  public fileTypeDoc = FileUploadType.Doc;\r\n  public requiredTextXml = 'You need to upload Xml file';\r\n  public isFormValid = false;\r\n  public isLoading = true;\r\n\r\n  public isRegistering = false;\r\n  public registerTitle = \"Register Specification\";\r\n  public registerButtonClass = \"btn btn-danger btn-raised\";\r\n  public onRegister: Function;\r\n\r\n  private xml:Xml;\r\n  private doc:Doc;\r\n\r\n  constructor(private xmlParserService: XmlParserService, private navigationService: NavigationHelperService, private notifications: MCNotificationsService, private specificationsService: SpecificationsService, private orgService: OrganizationsService) {\r\n    this.organization = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRegister = this.register.bind(this);\r\n    this.isRegistering = false;\r\n    this.loadMyOrganization();\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public calculateFormValid() {\r\n    this.isFormValid = this.xml != null;\r\n  }\r\n\r\n  public onUploadDoc(file: Doc) {\r\n    this.doc = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public onUploadXml(file: Xml) {\r\n    this.xml = file;\r\n    this.calculateFormValid();\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationService.cancelCreateSpecification();\r\n  }\r\n  public register() {\r\n    this.isRegistering = true;\r\n    try {\r\n      var specification:Specification = {};\r\n      specification.specAsXml = _.cloneDeep(this.xml);\r\n      specification.specAsDoc = this.doc;\r\n      specification.name = this.xmlParserService.getValueFromField('name', this.xml);\r\n      specification.description = this.xmlParserService.getValueFromField('description', this.xml);\r\n      specification.specificationId = this.xmlParserService.getValueFromField('id', this.xml);\r\n      specification.keywords = this.xmlParserService.getValueFromField('keywords', this.xml);\r\n      specification.status = this.xmlParserService.getValueFromField('status', this.xml);\r\n      specification.organizationId = this.organization.mrn;\r\n      specification.version = this.xmlParserService.getValueFromField('version', this.xml);\r\n      this.createSpecification(specification);\r\n    } catch ( error ) {\r\n      this.isRegistering = false;\r\n      this.notifications.generateNotification('Error in XML', error.message, MCNotificationType.Error, error);\r\n    }\r\n  }\r\n\r\n  private createSpecification(specification:Specification) {\r\n    this.specificationsService.createSpecification(specification).subscribe(\r\n      specification => {\r\n        this.isRegistering = false;\r\n        this.navigationService.navigateToOrgSpecification(specification.specificationId, specification.version);\r\n      },\r\n      err => {\r\n        this.isRegistering = false;\r\n        this.notifications.generateNotification('Error', 'Error when trying to create specification', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadMyOrganization() {\r\n    this.isLoading = true;\r\n    this.orgService.getMyOrganization().subscribe(\r\n      organization => {\r\n        this.organization = organization;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error);\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Register new Specification for {{organization.name}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <div *ngIf=\\\"organization.mrn\\\">\\r\\n        <form>\\r\\n          <mc-file-uploader [caption]=\\\"captionXml\\\" [fileUploadType]=\\\"fileTypeXml\\\" [requiredText]=\\\"requiredTextXml\\\" (onUpload)=\\\"onUploadXml($event)\\\"></mc-file-uploader>\\r\\n          <mc-file-uploader [caption]=\\\"captionDoc\\\" [fileUploadType]=\\\"fileTypeDoc\\\" (onUpload)=\\\"onUploadDoc($event)\\\"></mc-file-uploader>\\r\\n          <ul class=\\\"btn-list clearfix\\\">\\r\\n            <li>\\r\\n              <mc-loading-button [class]=\\\"registerButtonClass\\\" [disabled]=\\\"!isFormValid\\\" [isLoading]=\\\"isRegistering\\\" [title]=\\\"registerTitle\\\" [onClick]=\\\"onRegister\\\" ></mc-loading-button>\\r\\n            </li>\\r\\n            <li>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </form>\\r\\n      </div>\\r\\n      <sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!organization.mrn && !isLoading\\\">No data</div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.html\n// module id = ./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.html\n// module chunks = 0","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'specifications',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class SpecificationsComponent {\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/specifications.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\n\r\nimport { routing }       from './specifications.routing';\r\nimport {SpecificationsComponent} from \"./specifications.component\";\r\nimport {SpecificationListComponent} from \"./components/specification-list/specification-list.component\";\r\nimport {SpecificationDetailsComponent} from \"./components/specification-details/specification-details.component\";\r\nimport {NgaModule} from \"../../../theme/nga.module\";\r\nimport {SharedModule} from \"../../shared/shared.module\";\r\nimport {SpecificationNewComponent} from \"./components/specification-new/specification-new.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule,\r\n    SharedModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    SpecificationsComponent,\r\n    SpecificationDetailsComponent,\r\n    SpecificationListComponent,\r\n    SpecificationNewComponent\r\n  ]\r\n})\r\nexport default class SpecificationsModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/specifications.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\nimport {SpecificationsComponent} from \"./specifications.component\";\r\nimport {SpecificationListComponent} from \"./components/specification-list/specification-list.component\";\r\nimport {SpecificationDetailsComponent} from \"./components/specification-details/specification-details.component\";\r\nimport {SpecificationNewComponent} from \"./components/specification-new/specification-new.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n  {\r\n    path: 'specifications',\r\n    component: SpecificationsComponent,\r\n    data:{breadcrumb: 'Specifications'},\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: SpecificationListComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: SpecificationNewComponent,\r\n        data:{breadcrumb: 'Register'}\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: SpecificationDetailsComponent,\r\n        data:{breadcrumb: 'Details'}\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/specifications/specifications.routing.ts","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../shared/mc-notifications.service\";\r\nimport {NavigationHelperService, queryKeys} from \"../../../../shared/navigation-helper.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CertificateEntityType} from \"../../services/certificate-helper.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificatesService} from \"../../../../backend-api/identity-registry/services/certificates.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'certificate-issue-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificate-issue-new.html'),\r\n  styles: []\r\n})\r\nexport class CertificateIssueNewComponent implements OnInit {\r\n  public entityType: CertificateEntityType;\r\n  public entityMrn: string;\r\n  public entityTitle: string;\r\n  public isLoading: boolean;\r\n  public pemCertificate: PemCertificate;\r\n\r\n  public labelValues:Array<LabelValueModel>;\r\n\r\n  constructor(private fileHelper: FileHelperService, private certificateService: CertificatesService, private route:ActivatedRoute, private navigationHelper: NavigationHelperService, private notificationService: MCNotificationsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = false;\r\n    let entityType = this.route.snapshot.queryParams[queryKeys.ENTITY_TYPE];\r\n    let entityMrn = this.route.snapshot.queryParams[queryKeys.ENTITY_MRN];\r\n    let entityTitle= this.route.snapshot.queryParams[queryKeys.ENTITY_TITLE];\r\n    if (entityType == null || !entityMrn || !entityTitle) {\r\n      this.notificationService.generateNotification(\"Error\", \"Unresolved state when trying to issue new certificate\", MCNotificationType.Error);\r\n      this.navigationHelper.takeMeHome();\r\n    }\r\n    this.entityMrn = entityMrn;\r\n    this.entityTitle = entityTitle;\r\n    this.entityType = +entityType; // +-conversion from string to int\r\n    this.generateLabelValues();\r\n  }\r\n\r\n  public zipAndDownload() {\r\n    this.fileHelper.downloadPemCertificate(this.pemCertificate, this.entityTitle);\r\n  }\r\n\r\n  public issueNew() {\r\n    this.isLoading = true;\r\n    this.certificateService.issueNewCertificate(this.entityType, this.entityMrn).subscribe(\r\n      pemCertificate => {\r\n        this.pemCertificate = pemCertificate;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notificationService.generateNotification('Error', 'Error when trying to issue new certificate', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationHelper.cancelNavigateCertificates();\r\n  }\r\n\r\n  private generateLabelValues() {\r\n    this.labelValues = [];\r\n    this.labelValues.push({label: 'Name', valueHtml: this.entityTitle});\r\n    this.labelValues.push({label: 'MRN', valueHtml: this.entityMrn});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Issue new certificate\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <!-- Before issue -->\\r\\n      <div *ngIf=\\\"entityType != null && !pemCertificate && !isLoading\\\">\\r\\n        <h5>Issuing a new certificate for:</h5>\\r\\n        <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n        <ul *ngIf=\\\"entityType != null\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"issueNew()\\\">Issue Certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n\\r\\n      <!-- After issue and success -->\\r\\n      <div *ngIf=\\\"pemCertificate\\\">\\r\\n        Certificate issued with success\\r\\n        <ul *ngIf=\\\"entityType != null\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"zipAndDownload()\\\">Download certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">OK</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module id = ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, HostListener, OnChanges} from '@angular/core';\r\nimport {Certificate} from \"../../../../backend-api/identity-registry/autogen/model/Certificate\";\r\nimport {CertificateEntityType, CertificateHelperService} from \"../../services/certificate-helper.service\";\r\nimport {layoutSizes, DATE_FORMAT} from \"../../../../theme/theme.constants\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificateViewModel} from \"../../view-models/CertificateViewModel\";\r\nimport {NavigationHelperService} from \"../../../../shared/navigation-helper.service\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../shared/mc-notifications.service\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\n\r\n@Component({\r\n  selector: 'certificates-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificates-table.html'),\r\n  styles: [require('./certificates-table.scss')]\r\n})\r\nexport class CertificatesTableComponent implements OnChanges{\r\n  @Input() certificates: Array<Certificate>;\r\n  @Input() certificateEntityType: CertificateEntityType;\r\n  @Input() entityMrn: string;\r\n  @Input() isLoading: boolean;\r\n  @Input() certificateTitle: string;\r\n\r\n  public newCertificateTitle = \"Issue new Certificate\";\r\n  public certificateViewModels: Array<CertificateViewModel>;\r\n  public dateFormat = DATE_FORMAT;\r\n  public tableClass:string;\r\n  public onIssueCertificate: Function;\r\n\r\n  constructor(private fileHelper: FileHelperService, private navigationHelper: NavigationHelperService, private authService:AuthService, private certificateHelperService: CertificateHelperService, private notificationService: MCNotificationsService) {\r\n    this.calculateTableClass();\r\n    this.onIssueCertificate = this.issueCertificate.bind(this);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.certificates) {\r\n      this.certificateViewModels = this.certificateHelperService.convertCertificatesToViewModels(this.certificates);\r\n      this.sortCertificates();\r\n    }\r\n  }\r\n\r\n  public hasData():boolean {\r\n\t  return this.certificateViewModels && this.certificateViewModels.length > 0;\r\n  }\r\n\r\n  private sortCertificates() {\r\n    // We are sorting with longest due date on top\r\n    this.certificateViewModels.sort((obj1: CertificateViewModel, obj2: CertificateViewModel) => {\r\n      var obj1Time:number;\r\n      var obj2Time:number;\r\n      // Why is this needed??? for some reason sometimes the obj.end is a number and not a Date???\r\n      if (typeof obj1.end === \"Date\") {\r\n        obj1Time = obj1.end.getTime();\r\n      } else {\r\n        obj1Time = obj1.end;\r\n      }\r\n      if (typeof obj2.end === \"Date\") {\r\n        obj2Time = obj2.end.getTime();\r\n      } else {\r\n        obj2Time = obj2.end;\r\n      }\r\n\r\n      if (obj1.revoked && obj2.revoked) {\r\n        return obj2Time - obj1Time;\r\n      }\r\n      if (obj1.revoked) {\r\n        return 1;\r\n      }\r\n      if (obj2.revoked) {\r\n        return -1;\r\n      }\r\n      return obj2Time - obj1Time;\r\n    });\r\n  }\r\n\r\n  public issueCertificate() {\r\n    this.navigationHelper.navigateToIssueNewCertificate(this.certificateEntityType, this.entityMrn, this.certificateTitle);\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    return this.authService.authState.isAdmin();\r\n  }\r\n\r\n  public revoke(certificate:Certificate) {\r\n    this.notificationService.generateNotification('Not Implemented', 'Revoke coming soon', MCNotificationType.Info);\r\n  }\r\n\r\n  public download(certificate:Certificate) {\r\n    let pemCertificate:PemCertificate = {certificate:certificate.certificate};\r\n    this.fileHelper.downloadPemCertificate(pemCertificate, this.certificateTitle);\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    this.calculateTableClass();\r\n  }\r\n\r\n  private calculateTableClass():void {\r\n    this.tableClass = (this.isWindowToSmall()?'certificate-table-short':'certificate-table');\r\n  }\r\n\r\n  private isWindowToSmall():boolean {\r\n    return window.innerWidth <= layoutSizes.resWidthCollapseSidebar;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificates-table/certificates-table.component.ts","module.exports = \"<div *ngIf=\\\"!isLoading && hasData()\\\">\\r\\n  <table class=\\\"table table-bordered {{tableClass}}\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"black-muted-bg\\\">\\r\\n        <th class=\\\"\\\">Certificate</th>\\r\\n        <th class=\\\"nowrap\\\">Valid from</th>\\r\\n        <th class=\\\"nowrap\\\">Valid to</th>\\r\\n        <th class=\\\"table-buttons\\\"></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let certificate of certificateViewModels; let i = index\\\">\\r\\n        <td class=\\\"\\\">{{'Certificate for ' + certificateTitle | truncate:50}}</td>\\r\\n        <td class=\\\"nowrap\\\">{{certificate.start | date:dateFormat}}</td>\\r\\n        <td class=\\\"nowrap\\\">{{certificate.end | date:dateFormat}}</td>\\r\\n        <td *ngIf=\\\"!certificate.revoked\\\" class=\\\"table-buttons\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised btn-sm\\\" (click)=\\\"download(certificate)\\\">Download certificate</button>\\r\\n          <button type=\\\"button\\\" *ngIf=\\\"isAdmin()\\\" class=\\\"btn btn-danger btn-raised btn-sm\\\" (click)=\\\"revoke(certificate)\\\">Revoke certificate</button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"certificate.revoked\\\" class=\\\"table-buttons\\\">\\r\\n          <span class=\\\"red-text\\\">Revoked ({{certificate.revokeReasonText}})</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n<div class=\\\"no-data\\\" *ngIf=\\\"!hasData() && !isLoading\\\">No data</div>\\r\\n<div *ngIf=\\\"!isLoading\\\">\\r\\n  <mc-create-button [title]=\\\"newCertificateTitle\\\" [onClick]=\\\"onIssueCertificate\\\"></mc-create-button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module chunks = 0 1 2 3","module.exports = \".table-buttons {\\n  width: 100%; }\\n  .table-buttons button {\\n    margin: 5px !important; }\\n\\n.certificate-table td {\\n  vertical-align: middle; }\\n\\n.certificate-table td:first-child {\\n  white-space: nowrap; }\\n\\n.certificate-table-short td {\\n  vertical-align: middle; }\\n\\n.certificate-table-short td:first-child {\\n  min-width: 200px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'designs-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./designs-table.html'),\r\n  styles: []\r\n})\r\nexport class DesignsTableComponent implements OnChanges {\r\n  @Input() designs: Array<Design>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.designs) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let design of this.designs) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:design.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/designs-table/designs-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/designs-table/designs-table.html\n// module id = ./src/app/pages/shared/components/designs-table/designs-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Component({\r\n  selector: 'instances-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instances-table.html'),\r\n  styles: []\r\n})\r\nexport class InstancesTableComponent implements OnChanges {\r\n  @Input() instances: Array<Instance>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.instances) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let instance of this.instances) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:instance.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/instances-table/instances-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/instances-table/instances-table.html\n// module id = ./src/app/pages/shared/components/instances-table/instances-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Organization} from \"../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {OrganizationViewModelService} from \"../../services/organization-view-model.service\";\r\n\r\n@Component({\r\n  selector: 'organization-details-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./organization-details-table.html'),\r\n  styles: []\r\n})\r\nexport class OrganizationDetailsTableComponent implements OnChanges {\r\n  private labelValues:Array<LabelValueModel>;\r\n  @Input() isLoading:boolean;\r\n  @Input() organization: Organization;\r\n  constructor(private orgViewModelService: OrganizationViewModelService) {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.organization) {\r\n      this.labelValues = this.orgViewModelService.generateLabelValuesForOrganization(this.organization);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts","module.exports = \"<mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module id = ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'specifications-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specifications-table.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationsTableComponent implements OnChanges {\r\n  @Input() specifications: Array<Specification>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.specifications) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let specification of this.specifications) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:specification.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/specifications-table/specifications-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module id = ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module chunks = 0 1 2 3","import {Injectable, OnInit} from '@angular/core';\r\nimport {Organization} from \"../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {LabelValueModel} from \"../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\n\r\n@Injectable()\r\nexport class OrganizationViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  public generateLabelValuesForOrganization(organization:Organization):Array<LabelValueModel>  {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (organization) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: organization.mrn});\r\n      labelValues.push({label: 'Address', valueHtml: organization.address});\r\n      labelValues.push({label: 'Country', valueHtml: organization.country});\r\n      if (organization.email) {\r\n        labelValues.push({label: 'Email', valueHtml: \"<a href='mailto:\" + organization.email + \"'>\" + organization.email + \"</a>\"});\r\n      }\r\n      if (organization.url) {\r\n        labelValues.push({label: 'Website', valueHtml: \"<a href='\" + organization.url + \"' target='_blank'>\" + organization.url + \"</a>\"});\r\n      }\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/services/organization-view-model.service.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport {DesignsTableComponent} from \"./components/designs-table/designs-table.component\";\r\nimport {SpecificationsTableComponent} from \"./components/specifications-table/specifications-table.component\";\r\nimport {NgaModule} from \"../../theme/nga.module\";\r\nimport {InstancesTableComponent} from \"./components/instances-table/instances-table.component\";\r\nimport {SrViewModelService} from \"../org-service-registry/shared/services/sr-view-model.service\";\r\nimport {CertificatesTableComponent} from \"./components/certificates-table/certificates-table.component\";\r\nimport {CertificateHelperService} from \"./services/certificate-helper.service\";\r\nimport {OrganizationDetailsTableComponent} from \"./components/organizaton-details-table/organization-details-table.component\";\r\nimport {OrganizationViewModelService} from \"./services/organization-view-model.service\";\r\nimport {CertificateIssueNewComponent} from \"./components/certificate-issue-new/certificate-issue-new.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule\r\n  ],\r\n  declarations: [\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    OrganizationDetailsTableComponent,\r\n    CertificateIssueNewComponent\r\n  ],\r\n  exports: [\r\n    OrganizationDetailsTableComponent,\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    CertificateIssueNewComponent\r\n  ],\r\n  providers: [\r\n    SrViewModelService,\r\n    CertificateHelperService,\r\n    OrganizationViewModelService\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/shared.module.ts"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;;;;;;;;;;ACxvIA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAmIA;;AAAA;AAlIA;;;;;;;;ACrBA;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AASA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AArDA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAkDA;;AAAA;AAjDA;;;;;;;;ACdA;;;;;;;;;ACAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAQA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AApHA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAgHA;;AAAA;AA/GA;;;;;;;;ACvBA;;;;;;;;;ACAA;AAMA;AACA;AACA;AANA;AAAA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;AACA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AC/BA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAQA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAzGA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAqGA;;AAAA;AApGA;;;;;;;;ACnBA;;;;;;;;;ACAA;AACA;AACA;AAEA;AAEA;AAQA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AArDA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAkDA;;AAAA;AAjDA;;;;;;;;ACdA;;;;;;;;;ACAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AASA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAxIA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAoIA;;AAAA;AAnIA;;;;;;;;ACzBA;;;;;;;;;ACAA;AAMA;AACA;AACA;AANA;AAAA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;AACA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AC/BA;AAMA;AACA;AACA;AANA;AAAA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;ACNA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAgBA;AAAA;AACA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;AACA;;;;;;;;;;ACzBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;ACrBA;AAOA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;;AAAA;AAgDA;AAAA;AA/CA;;;;;;;;;;ACPA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAQA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA1HA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsHA;;AAAA;AArHA;;;;;;;;ACrBA;;;;;;;;;ACAA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA7DA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA0DA;;AAAA;AAzDA;;;;;;;;ACfA;;;;;;;;;ACAA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AAQA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAjGA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA6FA;;AAAA;AA5FA;;;;;;;;ACnBA;;;;;;;;;ACAA;AAMA;AACA;AACA;AANA;AAAA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AAAA;AACA;AAfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;AACA;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAGA;AAGA;AASA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3DA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuDA;;AAAA;AAtDA;;;;;;;;AClBA;;;;;;;;;ACAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AASA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAtFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAuEA;AAAA;;;;AAAA;AAlFA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyFA;;AAAA;AAxFA;;;;;;;;ACjBA;;;;;;;ACAA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAEA;AACA;AAQA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAaA;;AAAA;AAZA;;;;;;;;ACXA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AAwBA;AAAA;AAvBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;AAAA;AACA;AA5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;;;;;","sourceRoot":""}