webpackJsonpac__name_([1],{

/***/ "./src/app/backend-api/identity-registry/autogen/model/Organization.ts":
/***/ function(module, exports) {

"use strict";
/**
 * Maritime Cloud Identity Registry API
 * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@maritimecloud.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';


/***/ },

/***/ "./src/app/backend-api/identity-registry/autogen/model/VesselAttribute.ts":
/***/ function(module, exports) {

"use strict";
/**
 * Maritime Cloud Identity Registry API
 * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@maritimecloud.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
'use strict';
var VesselAttribute;
(function (VesselAttribute) {
    (function (AttributeNameEnum) {
        AttributeNameEnum[AttributeNameEnum["imo_number"] = 'imo-number'] = "imo_number";
        AttributeNameEnum[AttributeNameEnum["mmsi_number"] = 'mmsi-number'] = "mmsi_number";
        AttributeNameEnum[AttributeNameEnum["callsign"] = 'callsign'] = "callsign";
        AttributeNameEnum[AttributeNameEnum["flagstate"] = 'flagstate'] = "flagstate";
        AttributeNameEnum[AttributeNameEnum["ais_class"] = 'ais-class'] = "ais_class";
        AttributeNameEnum[AttributeNameEnum["port_of_register"] = 'port-of-register'] = "port_of_register";
    })(VesselAttribute.AttributeNameEnum || (VesselAttribute.AttributeNameEnum = {}));
    var AttributeNameEnum = VesselAttribute.AttributeNameEnum;
})(VesselAttribute = exports.VesselAttribute || (exports.VesselAttribute = {}));


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-details/device-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var devices_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/devices.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var DeviceDetailsComponent = (function () {
    function DeviceDetailsComponent(route, devicesService, notifications) {
        this.route = route;
        this.devicesService = devicesService;
        this.notifications = notifications;
    }
    DeviceDetailsComponent.prototype.ngOnInit = function () {
        this.entityType = certificate_helper_service_1.CertificateEntityType.Device;
        this.loadVessel();
    };
    DeviceDetailsComponent.prototype.loadVessel = function () {
        var _this = this;
        this.isLoading = true;
        var mrn = this.route.snapshot.params['id'];
        this.devicesService.getDevice(mrn).subscribe(function (device) {
            _this.device = device;
            _this.title = device.name;
            _this.isLoading = false;
            _this.generateLabelValues();
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get the device', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DeviceDetailsComponent.prototype.generateLabelValues = function () {
        this.labelValues = [];
        if (this.device) {
            this.labelValues.push({ label: 'MRN', valueHtml: this.device.mrn });
            this.labelValues.push({ label: 'Name', valueHtml: this.device.name });
            this.labelValues.push({ label: 'Permissions', valueHtml: this.device.permissions });
        }
    };
    DeviceDetailsComponent = __decorate([
        core_1.Component({
            selector: 'device-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-details/device-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof devices_service_1.DevicesService !== 'undefined' && devices_service_1.DevicesService) === 'function' && _b) || Object, (typeof (_c = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _c) || Object])
    ], DeviceDetailsComponent);
    return DeviceDetailsComponent;
    var _a, _b, _c;
}());
exports.DeviceDetailsComponent = DeviceDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-details/device-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n    </ba-card>\r\n\r\n    <div *ngIf=\"device\">\r\n      <ba-card title=\"Certificates for {{title}}\" baCardClass=\"with-scroll table-panel\">\r\n        <certificates-table [entityMrn]=\"device.mrn\" [isLoading]=\"isLoading\" [certificateTitle]=\"title\" [certificateEntityType]=\"entityType\" [certificates]=\"device.certificates\"></certificates-table>\r\n      </ba-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-list/device-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var devices_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/devices.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var DeviceListComponent = (function () {
    function DeviceListComponent(authService, router, route, devicesService, orgService, notifications) {
        this.authService = authService;
        this.router = router;
        this.route = route;
        this.devicesService = devicesService;
        this.orgService = orgService;
        this.notifications = notifications;
        this.KEY_NEW = 'KEY_NEW_DEVICE';
        this.organization = {};
    }
    DeviceListComponent.prototype.ngOnInit = function () {
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadDevices();
    };
    DeviceListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DeviceListComponent.prototype.loadDevices = function () {
        var _this = this;
        this.devicesService.getDevices().subscribe(function (devices) {
            _this.devices = devices;
            _this.isLoading = false;
            _this.generateEntityImageList();
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get devices', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DeviceListComponent.prototype.gotoDetails = function (entityModel) {
        if (entityModel.entityId === this.KEY_NEW) {
            this.gotoCreate();
        }
        else {
            this.router.navigate([entityModel.entityId], { relativeTo: this.route });
        }
    };
    DeviceListComponent.prototype.gotoCreate = function () {
        this.router.navigate(['register'], { relativeTo: this.route });
    };
    DeviceListComponent.prototype.generateEntityImageList = function () {
        var _this = this;
        this.entityImageList = [];
        if (this.devices) {
            var imageSrc_1 = 'assets/img/no_device.svg';
            this.devices.forEach(function (device) {
                _this.entityImageList.push({ imageSource: imageSrc_1, entityId: device.mrn, title: device.name });
            });
        }
        if (this.authService.authState.isAdmin()) {
            this.entityImageList.push({ imageSource: '', entityId: this.KEY_NEW, title: 'Register new Device', isAdd: true });
        }
    };
    DeviceListComponent = __decorate([
        core_1.Component({
            selector: 'device-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-list/device-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof devices_service_1.DevicesService !== 'undefined' && devices_service_1.DevicesService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _f) || Object])
    ], DeviceListComponent);
    return DeviceListComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.DeviceListComponent = DeviceListComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-list/device-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Devices for {{organization.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-entity-image-list [isLoading]=\"isLoading\" [entityImageList]=\"entityImageList\" (onClick)=\"gotoDetails($event)\"></mc-entity-image-list>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-new/device-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var DeviceNewComponent = (function () {
    function DeviceNewComponent(activatedRoute, navigationService, notifications, orgService) {
        this.activatedRoute = activatedRoute;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.orgService = orgService;
        this.isFormValid = false;
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Device";
        this.registerButtonClass = "btn btn-danger btn-raised";
        this.organization = {};
    }
    DeviceNewComponent.prototype.ngOnInit = function () {
        this.onRegister = this.register.bind(this);
        this.isRegistering = false;
        this.isLoading = true;
        this.loadMyOrganization();
    };
    DeviceNewComponent.prototype.calculateFormValid = function () {
        this.isFormValid = false;
    };
    DeviceNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateDevice();
    };
    DeviceNewComponent.prototype.register = function () {
        this.isRegistering = true;
        var device = {};
        this.createDevice(device);
    };
    DeviceNewComponent.prototype.createDevice = function (device) {
        this.notifications.generateNotification('Not Implemented', 'Register coming soon', mc_notifications_service_1.MCNotificationType.Info);
        /*
         this.designsService.createDesign(design).subscribe(
           design => {
             this.navigationService.navigateToOrgDesign(design.designId, design.version);
             this.isRegistering = false;
           },
           err => {
             this.isRegistering = false;
             this.notifications.generateNotification('Error', 'Error when trying to create design', MCNotificationType.Error, err);
           }
         );
         */
    };
    DeviceNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            _this.calculateFormValid();
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DeviceNewComponent = __decorate([
        core_1.Component({
            selector: 'device-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-new/device-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _b) || Object, (typeof (_c = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _c) || Object, (typeof (_d = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _d) || Object])
    ], DeviceNewComponent);
    return DeviceNewComponent;
    var _a, _b, _c, _d;
}());
exports.DeviceNewComponent = DeviceNewComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/components/device-new/device-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Device for {{organization.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <div *ngIf=\"!isLoading\">\r\n        Not implemented yet. Coming soon\r\n        <ul class=\"btn-list clearfix\">\r\n          <li>\r\n            <mc-loading-button [class]=\"registerButtonClass\" [disabled]=\"!isFormValid\" [isLoading]=\"isRegistering\" [title]=\"registerTitle\" [onClick]=\"onRegister\" ></mc-loading-button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/devices.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var DevicesComponent = (function () {
    function DevicesComponent() {
    }
    DevicesComponent = __decorate([
        core_1.Component({
            selector: 'devices',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], DevicesComponent);
    return DevicesComponent;
}());
exports.DevicesComponent = DevicesComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/devices.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var devices_routing_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/devices.routing.ts");
var devices_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/devices.component.ts");
var device_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-list/device-list.component.ts");
var device_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-details/device-details.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var device_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-new/device-new.component.ts");
var DevicesModule = (function () {
    function DevicesModule() {
    }
    DevicesModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                shared_module_1.SharedModule,
                devices_routing_1.routing
            ],
            declarations: [
                devices_component_1.DevicesComponent,
                device_details_component_1.DeviceDetailsComponent,
                device_list_component_1.DeviceListComponent,
                device_new_component_1.DeviceNewComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], DevicesModule);
    return DevicesModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DevicesModule;


/***/ },

/***/ "./src/app/pages/org-identity-registry/devices/devices.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var devices_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/devices.component.ts");
var device_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-list/device-list.component.ts");
var device_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-details/device-details.component.ts");
var device_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/components/device-new/device-new.component.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: 'devices',
        component: devices_component_1.DevicesComponent,
        data: { breadcrumb: 'Devices' },
        children: [
            {
                path: '',
                component: device_list_component_1.DeviceListComponent
            },
            {
                path: 'issuecert',
                component: certificate_issue_new_component_1.CertificateIssueNewComponent,
                data: { breadcrumb: 'New Certificate' },
                children: []
            },
            {
                path: 'register',
                component: device_new_component_1.DeviceNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: ':id',
                component: device_details_component_1.DeviceDetailsComponent,
                data: { breadcrumb: 'Details' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-identity-registry/org-identity-registry.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var OrgIdentityRegistryComponent = (function () {
    function OrgIdentityRegistryComponent() {
    }
    OrgIdentityRegistryComponent = __decorate([
        core_1.Component({
            selector: 'org-identity-registry',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], OrgIdentityRegistryComponent);
    return OrgIdentityRegistryComponent;
}());
exports.OrgIdentityRegistryComponent = OrgIdentityRegistryComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/org-identity-registry.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var org_identity_registry_routing_1 = __webpack_require__("./src/app/pages/org-identity-registry/org-identity-registry.routing.ts");
var org_identity_registry_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/org-identity-registry.component.ts");
var vessels_module_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/vessels.module.ts");
var devices_module_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/devices.module.ts");
var OrgIdentityRegistryModule = (function () {
    function OrgIdentityRegistryModule() {
    }
    OrgIdentityRegistryModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                vessels_module_1.default,
                devices_module_1.default,
                org_identity_registry_routing_1.routing
            ],
            declarations: [
                org_identity_registry_component_1.OrgIdentityRegistryComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], OrgIdentityRegistryModule);
    return OrgIdentityRegistryModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = OrgIdentityRegistryModule;


/***/ },

/***/ "./src/app/pages/org-identity-registry/org-identity-registry.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var org_identity_registry_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/org-identity-registry.component.ts");
var vessels_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/vessels.component.ts");
var devices_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/devices/devices.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: '',
        component: org_identity_registry_component_1.OrgIdentityRegistryComponent,
        children: [
            { path: 'devices', component: devices_component_1.DevicesComponent },
            { path: 'vessels', component: vessels_component_1.VesselsComponent }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-details/vessel-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var vessels_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/vessels.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var VesselViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/view-models/VesselViewModel.ts");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var VesselDetailsComponent = (function () {
    function VesselDetailsComponent(route, vesselsService, notifications) {
        this.route = route;
        this.vesselsService = vesselsService;
        this.notifications = notifications;
    }
    VesselDetailsComponent.prototype.ngOnInit = function () {
        this.entityType = certificate_helper_service_1.CertificateEntityType.Vessel;
        this.loadVessel();
    };
    VesselDetailsComponent.prototype.loadVessel = function () {
        var _this = this;
        this.isLoading = true;
        var mrn = this.route.snapshot.params['id'];
        this.vesselsService.getVessel(mrn).subscribe(function (vessel) {
            _this.vessel = vessel;
            _this.vesselViewModel = new VesselViewModel_1.VesselViewModel(vessel);
            _this.title = vessel.name;
            _this.isLoading = false;
            _this.generateLabelValues();
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get the vessel', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    VesselDetailsComponent.prototype.generateLabelValues = function () {
        var _this = this;
        this.labelValues = [];
        if (this.vesselViewModel) {
            this.labelValues.push({ label: 'MRN', valueHtml: this.vesselViewModel.getVessel().mrn });
            this.labelValues.push({ label: 'Name', valueHtml: this.vesselViewModel.getVessel().name });
            this.labelValues.push({ label: 'Permissions', valueHtml: this.vesselViewModel.getVessel().permissions });
            var attributeViewModels = this.vesselViewModel.getAttributeViewModels();
            attributeViewModels.forEach(function (attributeViewModel) {
                _this.labelValues.push({ label: attributeViewModel.attributeNameText, valueHtml: attributeViewModel.attributeValue });
            });
        }
    };
    VesselDetailsComponent = __decorate([
        core_1.Component({
            selector: 'vessel-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-details/vessel-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof vessels_service_1.VesselsService !== 'undefined' && vessels_service_1.VesselsService) === 'function' && _b) || Object, (typeof (_c = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _c) || Object])
    ], VesselDetailsComponent);
    return VesselDetailsComponent;
    var _a, _b, _c;
}());
exports.VesselDetailsComponent = VesselDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-details/vessel-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n    </ba-card>\r\n\r\n    <div *ngIf=\"vessel\">\r\n        <ba-card title=\"Certificates for {{title}}\" baCardClass=\"with-scroll table-panel\">\r\n            <certificates-table [entityMrn]=\"vessel.mrn\" [isLoading]=\"isLoading\" [certificateTitle]=\"title\" [certificateEntityType]=\"entityType\" [certificates]=\"vessel.certificates\"></certificates-table>\r\n        </ba-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-list/vessel-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var vessels_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/vessels.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var VesselListComponent = (function () {
    function VesselListComponent(authService, router, route, vesselsService, orgService, notifications) {
        this.authService = authService;
        this.router = router;
        this.route = route;
        this.vesselsService = vesselsService;
        this.orgService = orgService;
        this.notifications = notifications;
        this.KEY_NEW = 'KEY_NEW_VESSEL';
        this.organization = {};
    }
    VesselListComponent.prototype.ngOnInit = function () {
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadVessels();
    };
    VesselListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    VesselListComponent.prototype.loadVessels = function () {
        var _this = this;
        this.vesselsService.getVessels().subscribe(function (vessels) {
            _this.vessels = vessels;
            _this.isLoading = false;
            _this.generateEntityImageList();
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get vessels', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    VesselListComponent.prototype.gotoDetails = function (entityModel) {
        if (entityModel.entityId === this.KEY_NEW) {
            this.gotoCreate();
        }
        else {
            this.router.navigate([entityModel.entityId], { relativeTo: this.route });
        }
    };
    VesselListComponent.prototype.gotoCreate = function () {
        this.router.navigate(['register'], { relativeTo: this.route });
    };
    VesselListComponent.prototype.generateEntityImageList = function () {
        var _this = this;
        this.entityImageList = [];
        if (this.vessels) {
            var imageSrc_1 = 'assets/img/no_ship.png';
            this.vessels.forEach(function (vessel) {
                _this.entityImageList.push({ imageSource: imageSrc_1, entityId: vessel.mrn, title: vessel.name });
            });
        }
        if (this.authService.authState.isAdmin()) {
            this.entityImageList.push({ imageSource: '', entityId: this.KEY_NEW, title: 'Register new Vessel', isAdd: true });
        }
    };
    VesselListComponent = __decorate([
        core_1.Component({
            selector: 'vessel-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-list/vessel-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof vessels_service_1.VesselsService !== 'undefined' && vessels_service_1.VesselsService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _f) || Object])
    ], VesselListComponent);
    return VesselListComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.VesselListComponent = VesselListComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-list/vessel-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Vessels for {{organization.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-entity-image-list [isLoading]=\"isLoading\" [entityImageList]=\"entityImageList\" (onClick)=\"gotoDetails($event)\"></mc-entity-image-list>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-new/vessel-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/index.js");
var VesselViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/view-models/VesselViewModel.ts");
var VesselAttribute_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/VesselAttribute.ts");
var AttributeNameEnum = VesselAttribute_1.VesselAttribute.AttributeNameEnum;
var vessels_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/vessels.service.ts");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var VesselNewComponent = (function () {
    function VesselNewComponent(formBuilder, activatedRoute, navigationService, notifications, orgService, vesselsService, mrnHelper) {
        this.formBuilder = formBuilder;
        this.activatedRoute = activatedRoute;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.orgService = orgService;
        this.vesselsService = vesselsService;
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Vessel";
        this.registerButtonClass = "btn btn-danger btn-raised"; //TODO den skal bare væk sammen med buttons
        this.organization = {};
        this.mrnMask = mrnHelper.mrnMaskForVessel();
        this.mrnPattern = mrnHelper.mrnPattern();
        this.mrnPatternError = mrnHelper.mrnPatternError();
        this.mrn = this.mrnMask;
    }
    VesselNewComponent.prototype.ngOnInit = function () {
        this.onRegister = this.register.bind(this);
        this.isRegistering = false;
        this.isLoading = true;
        this.loadMyOrganization();
    };
    VesselNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateVessel();
    };
    VesselNewComponent.prototype.register = function () {
        this.isRegistering = true;
        var vessel = {};
        vessel.mrn = this.mrn;
        vessel.name = this.registerForm.value.name;
        vessel.permissions = this.registerForm.value.permissions;
        var formAttributes = this.registerForm.value.attributes;
        var vesselAttributes = [];
        Object.getOwnPropertyNames(formAttributes).forEach(function (propertyName) {
            if (formAttributes[propertyName] && formAttributes[propertyName].length > 0) {
                vesselAttributes.push({ attributeName: AttributeNameEnum[propertyName], attributeValue: formAttributes[propertyName] });
            }
        });
        vessel.attributes = vesselAttributes;
        this.createVessel(vessel);
    };
    VesselNewComponent.prototype.createVessel = function (vessel) {
        var _this = this;
        this.vesselsService.createVessel(vessel).subscribe(function (vessel) {
            _this.navigationService.navigateToVessel(vessel.mrn);
            _this.isRegistering = false;
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create vessel', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    VesselNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            _this.generateForm();
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    VesselNewComponent.prototype.generateMRN = function (idValue) {
        var valueNoSpaces = idValue.split(' ').join('').toLowerCase();
        this.mrn = this.mrnMask + valueNoSpaces;
        this.registerForm.patchValue({ mrn: this.mrn });
    };
    VesselNewComponent.prototype.generateForm = function () {
        var _this = this;
        this.registerForm = this.formBuilder.group({});
        this.formControlModels = [];
        var formControlModel = { formGroup: this.registerForm, elementId: 'mrn', inputType: 'text', labelName: 'MRN', placeholder: '', isDisabled: true };
        var formControl = new forms_1.FormControl(this.mrn, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'vesselId', inputType: 'text', labelName: 'Vessel ID', placeholder: 'Vessel ID is required', validator: forms_1.Validators.required, pattern: this.mrnPattern, errorText: this.mrnPatternError };
        formControl = new forms_1.FormControl('', formControlModel.validator);
        formControl.valueChanges.subscribe(function (param) { return _this.generateMRN(param); });
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'name', inputType: 'text', labelName: 'Name', placeholder: 'Name is required', validator: forms_1.Validators.required };
        formControl = new forms_1.FormControl('', formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'permissions', inputType: 'text', labelName: 'Permissions', placeholder: '' };
        formControl = new forms_1.FormControl('', formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        this.generateAttributesGroup();
    };
    VesselNewComponent.prototype.generateAttributesGroup = function () {
        var _this = this;
        var attributesGroup = this.formBuilder.group({});
        this.registerForm.addControl('attributes', attributesGroup);
        var vesselAttributes = VesselViewModel_1.VesselViewModel.getAllPossibleVesselAttributes();
        vesselAttributes.forEach(function (vesselAttribute) {
            var formControlModel = { formGroup: attributesGroup, elementId: AttributeNameEnum[vesselAttribute.attributeName], inputType: 'text', labelName: vesselAttribute.attributeNameText, placeholder: '' };
            var formControl = new forms_1.FormControl('', formControlModel.validator);
            attributesGroup.addControl(formControlModel.elementId, formControl);
            _this.formControlModels.push(formControlModel);
        });
    };
    VesselNewComponent = __decorate([
        core_1.Component({
            selector: 'vessel-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-new/vessel-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _c) || Object, (typeof (_d = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof vessels_service_1.VesselsService !== 'undefined' && vessels_service_1.VesselsService) === 'function' && _f) || Object, (typeof (_g = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _g) || Object])
    ], VesselNewComponent);
    return VesselNewComponent;
    var _a, _b, _c, _d, _e, _f, _g;
}());
exports.VesselNewComponent = VesselNewComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/components/vessel-new/vessel-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Vessel for {{organization.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <div *ngIf=\"!isLoading\">\r\n        <form [formGroup]=\"registerForm\">\r\n          <div *ngFor=\"let formControlModel of formControlModels\">\r\n            <mc-form-control [formControlModel]=\"formControlModel\"></mc-form-control>\r\n          </div>\r\n          <ul class=\"btn-list clearfix\">\r\n            <li>\r\n              <mc-loading-button [class]=\"registerButtonClass\" [disabled]=\"registerForm.invalid\" [isLoading]=\"isRegistering\" [title]=\"registerTitle\" [onClick]=\"onRegister\" ></mc-loading-button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n      <sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/vessels.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var VesselsComponent = (function () {
    function VesselsComponent() {
    }
    VesselsComponent = __decorate([
        core_1.Component({
            selector: 'vessels',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], VesselsComponent);
    return VesselsComponent;
}());
exports.VesselsComponent = VesselsComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/vessels.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var vessels_routing_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/vessels.routing.ts");
var vessels_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/vessels.component.ts");
var vessel_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-list/vessel-list.component.ts");
var vessel_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-details/vessel-details.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var vessel_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-new/vessel-new.component.ts");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/index.js");
var VesselsModule = (function () {
    function VesselsModule() {
    }
    VesselsModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                forms_1.FormsModule,
                forms_1.ReactiveFormsModule,
                shared_module_1.SharedModule,
                vessels_routing_1.routing
            ],
            declarations: [
                vessels_component_1.VesselsComponent,
                vessel_details_component_1.VesselDetailsComponent,
                vessel_list_component_1.VesselListComponent,
                vessel_new_component_1.VesselNewComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], VesselsModule);
    return VesselsModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = VesselsModule;


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/vessels.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var vessels_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/vessels.component.ts");
var vessel_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-list/vessel-list.component.ts");
var vessel_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-details/vessel-details.component.ts");
var vessel_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/vessels/components/vessel-new/vessel-new.component.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: 'vessels',
        component: vessels_component_1.VesselsComponent,
        data: { breadcrumb: 'Vessels' },
        children: [
            {
                path: '',
                component: vessel_list_component_1.VesselListComponent
            },
            {
                path: 'issuecert',
                component: certificate_issue_new_component_1.CertificateIssueNewComponent,
                data: { breadcrumb: 'New Certificate' },
                children: []
            },
            {
                path: 'register',
                component: vessel_new_component_1.VesselNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: ':id',
                component: vessel_details_component_1.VesselDetailsComponent,
                data: { breadcrumb: 'Details' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-identity-registry/vessels/view-models/VesselViewModel.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var VesselAttribute_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/VesselAttribute.ts");
var AttributeNameEnum = VesselAttribute_1.VesselAttribute.AttributeNameEnum;
var enums_helper_1 = __webpack_require__("./src/app/shared/enums-helper.ts");
// TODO maybe this should just be a helper.service instead. Or mayby just static methods if no objects is needed
var VesselViewModel = (function () {
    function VesselViewModel(vessel) {
        this.vessel = vessel;
        this.generateAttributes();
    }
    VesselViewModel.getAllPossibleVesselAttributes = function () {
        var attributes = [];
        var attributeKeysAndValues = enums_helper_1.EnumsHelper.getKeysAndValuesFromEnum(AttributeNameEnum);
        attributeKeysAndValues.forEach(function (enumKeyAndValue) {
            var vesselAttribute = {};
            vesselAttribute.attributeName = enumKeyAndValue.value;
            vesselAttribute.attributeNameText = VesselViewModel.getTextForVesselAttributeNameEnum(enumKeyAndValue.value);
            attributes.push(vesselAttribute);
        });
        return attributes;
    };
    VesselViewModel.convertVesselsToViewModels = function (vessels) {
        var viewModels = [];
        if (vessels) {
            vessels.forEach(function (vessel) {
                viewModels.push(new VesselViewModel(vessel));
            });
        }
        return viewModels;
    };
    VesselViewModel.prototype.getVessel = function () {
        return this.vessel;
    };
    VesselViewModel.prototype.getAttributeViewModels = function () {
        return this.attributes;
    };
    VesselViewModel.prototype.generateAttributes = function () {
        var _this = this;
        this.attributes = [];
        if (this.vessel.attributes) {
            this.vessel.attributes.forEach(function (attribute) {
                _this.attributes.push(_this.attributeViewModelFromAttribute(attribute));
            });
        }
    };
    VesselViewModel.prototype.attributeViewModelFromAttribute = function (attribute) {
        var attributeViewModel = attribute;
        attributeViewModel.attributeNameText = VesselViewModel.getTextForVesselAttributeNameEnum(attribute.attributeName);
        return attributeViewModel;
    };
    VesselViewModel.getTextForVesselAttributeNameEnum = function (vesselAttributeEnum) {
        var text = '';
        switch (vesselAttributeEnum) {
            case AttributeNameEnum.ais_class: {
                text = 'AIS class';
                break;
            }
            case AttributeNameEnum.callsign: {
                text = 'Call sign';
                break;
            }
            case AttributeNameEnum.flagstate: {
                text = 'Flag state';
                break;
            }
            case AttributeNameEnum.imo_number: {
                text = 'IMO number';
                break;
            }
            case AttributeNameEnum.mmsi_number: {
                text = 'MMSI number';
                break;
            }
            case AttributeNameEnum.port_of_register: {
                text = 'Port of register';
                break;
            }
            default: {
                text = AttributeNameEnum[vesselAttributeEnum];
                if (!text) {
                    text = '' + vesselAttributeEnum;
                }
            }
        }
        return text;
    };
    return VesselViewModel;
}());
exports.VesselViewModel = VesselViewModel;


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SrViewModelService = (function () {
    function SrViewModelService() {
    }
    SrViewModelService.prototype.ngOnInit = function () {
    };
    SrViewModelService.prototype.generateLabelValuesForSpecification = function (specification) {
        var labelValues = undefined;
        if (specification) {
            labelValues = [];
            labelValues.push({ label: 'ID', valueHtml: specification.specificationId });
            labelValues.push({ label: 'Name', valueHtml: specification.name });
            labelValues.push({ label: 'Version', valueHtml: specification.version });
            labelValues.push({ label: 'Status', valueHtml: specification.status });
            labelValues.push({ label: 'Description', valueHtml: specification.description });
        }
        return labelValues;
    };
    SrViewModelService.prototype.generateLabelValuesForDesign = function (design) {
        var labelValues = undefined;
        if (design) {
            labelValues = [];
            labelValues.push({ label: 'ID', valueHtml: design.designId });
            labelValues.push({ label: 'Name', valueHtml: design.name });
            labelValues.push({ label: 'Version', valueHtml: design.version });
            labelValues.push({ label: 'Status', valueHtml: design.status });
            labelValues.push({ label: 'Description', valueHtml: design.description });
        }
        return labelValues;
    };
    SrViewModelService.prototype.generateLabelValuesForInstance = function (instance) {
        var labelValues = undefined;
        if (instance) {
            labelValues = [];
            labelValues.push({ label: 'ID', valueHtml: instance.instanceId });
            labelValues.push({ label: 'Name', valueHtml: instance.name });
            labelValues.push({ label: 'Version', valueHtml: instance.version });
            labelValues.push({ label: 'Status', valueHtml: instance.status });
            labelValues.push({ label: 'Description', valueHtml: instance.description });
            labelValues.push({ label: 'Service endpoint', valueHtml: instance.endpointUri });
        }
        return labelValues;
    };
    SrViewModelService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], SrViewModelService);
    return SrViewModelService;
}());
exports.SrViewModelService = SrViewModelService;


/***/ },

/***/ "./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var certificates_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/certificates.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var CertificateIssueNewComponent = (function () {
    function CertificateIssueNewComponent(fileHelper, certificateService, route, navigationHelper, notificationService) {
        this.fileHelper = fileHelper;
        this.certificateService = certificateService;
        this.route = route;
        this.navigationHelper = navigationHelper;
        this.notificationService = notificationService;
    }
    CertificateIssueNewComponent.prototype.ngOnInit = function () {
        this.isLoading = false;
        var entityType = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_TYPE];
        var entityMrn = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_MRN];
        var entityTitle = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_TITLE];
        if (entityType == null || !entityMrn || !entityTitle) {
            this.notificationService.generateNotification("Error", "Unresolved state when trying to issue new certificate", mc_notifications_service_1.MCNotificationType.Error);
            this.navigationHelper.takeMeHome();
        }
        this.entityMrn = entityMrn;
        this.entityTitle = entityTitle;
        this.entityType = +entityType; // +-conversion from string to int
        this.generateLabelValues();
    };
    CertificateIssueNewComponent.prototype.zipAndDownload = function () {
        this.fileHelper.downloadPemCertificate(this.pemCertificate, this.entityTitle);
    };
    CertificateIssueNewComponent.prototype.issueNew = function () {
        var _this = this;
        this.isLoading = true;
        this.certificateService.issueNewCertificate(this.entityType, this.entityMrn).subscribe(function (pemCertificate) {
            _this.pemCertificate = pemCertificate;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notificationService.generateNotification('Error', 'Error when trying to issue new certificate', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    CertificateIssueNewComponent.prototype.cancel = function () {
        this.navigationHelper.cancelNavigateCertificates();
    };
    CertificateIssueNewComponent.prototype.generateLabelValues = function () {
        this.labelValues = [];
        this.labelValues.push({ label: 'Name', valueHtml: this.entityTitle });
        this.labelValues.push({ label: 'MRN', valueHtml: this.entityMrn });
    };
    CertificateIssueNewComponent = __decorate([
        core_1.Component({
            selector: 'certificate-issue-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _a) || Object, (typeof (_b = typeof certificates_service_1.CertificatesService !== 'undefined' && certificates_service_1.CertificatesService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _d) || Object, (typeof (_e = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _e) || Object])
    ], CertificateIssueNewComponent);
    return CertificateIssueNewComponent;
    var _a, _b, _c, _d, _e;
}());
exports.CertificateIssueNewComponent = CertificateIssueNewComponent;


/***/ },

/***/ "./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Issue new certificate\" baCardClass=\"with-scroll table-panel\">\r\n      <!-- Before issue -->\r\n      <div *ngIf=\"entityType != null && !pemCertificate && !isLoading\">\r\n        <h5>Issuing a new certificate for:</h5>\r\n        <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n        <ul *ngIf=\"entityType != null\" class=\"btn-list clearfix\">\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"issueNew()\">Issue Certificate</button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n\r\n      <!-- After issue and success -->\r\n      <div *ngIf=\"pemCertificate\">\r\n        Certificate issued with success\r\n        <ul *ngIf=\"entityType != null\" class=\"btn-list clearfix\">\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"zipAndDownload()\">Download certificate</button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">OK</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var theme_constants_1 = __webpack_require__("./src/app/theme/theme.constants.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var CertificatesTableComponent = (function () {
    function CertificatesTableComponent(fileHelper, navigationHelper, authService, certificateHelperService, notificationService) {
        this.fileHelper = fileHelper;
        this.navigationHelper = navigationHelper;
        this.authService = authService;
        this.certificateHelperService = certificateHelperService;
        this.notificationService = notificationService;
        this.newCertificateTitle = "Issue new Certificate";
        this.dateFormat = theme_constants_1.DATE_FORMAT;
        this.calculateTableClass();
        this.onIssueCertificate = this.issueCertificate.bind(this);
    }
    CertificatesTableComponent.prototype.ngOnChanges = function () {
        if (this.certificates) {
            this.certificateViewModels = this.certificateHelperService.convertCertificatesToViewModels(this.certificates);
            this.sortCertificates();
        }
    };
    CertificatesTableComponent.prototype.hasData = function () {
        return this.certificateViewModels && this.certificateViewModels.length > 0;
    };
    CertificatesTableComponent.prototype.sortCertificates = function () {
        // We are sorting with longest due date on top
        this.certificateViewModels.sort(function (obj1, obj2) {
            var obj1Time;
            var obj2Time;
            // Why is this needed??? for some reason sometimes the obj.end is a number and not a Date???
            if (typeof obj1.end === "Date") {
                obj1Time = obj1.end.getTime();
            }
            else {
                obj1Time = obj1.end;
            }
            if (typeof obj2.end === "Date") {
                obj2Time = obj2.end.getTime();
            }
            else {
                obj2Time = obj2.end;
            }
            if (obj1.revoked && obj2.revoked) {
                return obj2Time - obj1Time;
            }
            if (obj1.revoked) {
                return 1;
            }
            if (obj2.revoked) {
                return -1;
            }
            return obj2Time - obj1Time;
        });
    };
    CertificatesTableComponent.prototype.issueCertificate = function () {
        this.navigationHelper.navigateToIssueNewCertificate(this.certificateEntityType, this.entityMrn, this.certificateTitle);
    };
    CertificatesTableComponent.prototype.isAdmin = function () {
        return this.authService.authState.isAdmin();
    };
    CertificatesTableComponent.prototype.revoke = function (certificate) {
        this.notificationService.generateNotification('Not Implemented', 'Revoke coming soon', mc_notifications_service_1.MCNotificationType.Info);
    };
    CertificatesTableComponent.prototype.download = function (certificate) {
        var pemCertificate = { certificate: certificate.certificate };
        this.fileHelper.downloadPemCertificate(pemCertificate, this.certificateTitle);
    };
    CertificatesTableComponent.prototype.onWindowResize = function () {
        this.calculateTableClass();
    };
    CertificatesTableComponent.prototype.calculateTableClass = function () {
        this.tableClass = (this.isWindowToSmall() ? 'certificate-table-short' : 'certificate-table');
    };
    CertificatesTableComponent.prototype.isWindowToSmall = function () {
        return window.innerWidth <= theme_constants_1.layoutSizes.resWidthCollapseSidebar;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], CertificatesTableComponent.prototype, "certificates", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', (typeof (_a = typeof certificate_helper_service_1.CertificateEntityType !== 'undefined' && certificate_helper_service_1.CertificateEntityType) === 'function' && _a) || Object)
    ], CertificatesTableComponent.prototype, "certificateEntityType", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], CertificatesTableComponent.prototype, "entityMrn", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], CertificatesTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], CertificatesTableComponent.prototype, "certificateTitle", void 0);
    __decorate([
        core_1.HostListener('window:resize'), 
        __metadata('design:type', Function), 
        __metadata('design:paramtypes', []), 
        __metadata('design:returntype', void 0)
    ], CertificatesTableComponent.prototype, "onWindowResize", null);
    CertificatesTableComponent = __decorate([
        core_1.Component({
            selector: 'certificates-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.html"),
            styles: [__webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.scss")]
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _b) || Object, (typeof (_c = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _c) || Object, (typeof (_d = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _d) || Object, (typeof (_e = typeof certificate_helper_service_1.CertificateHelperService !== 'undefined' && certificate_helper_service_1.CertificateHelperService) === 'function' && _e) || Object, (typeof (_f = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _f) || Object])
    ], CertificatesTableComponent);
    return CertificatesTableComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.CertificatesTableComponent = CertificatesTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.html":
/***/ function(module, exports) {

module.exports = "<div *ngIf=\"!isLoading && hasData()\">\r\n  <table class=\"table table-bordered {{tableClass}}\">\r\n    <thead>\r\n      <tr class=\"black-muted-bg\">\r\n        <th class=\"\">Certificate</th>\r\n        <th class=\"nowrap\">Valid from</th>\r\n        <th class=\"nowrap\">Valid to</th>\r\n        <th class=\"table-buttons\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let certificate of certificateViewModels; let i = index\">\r\n        <td class=\"\">{{'Certificate for ' + certificateTitle | truncate:50}}</td>\r\n        <td class=\"nowrap\">{{certificate.start | date:dateFormat}}</td>\r\n        <td class=\"nowrap\">{{certificate.end | date:dateFormat}}</td>\r\n        <td *ngIf=\"!certificate.revoked\" class=\"table-buttons\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised btn-sm\" (click)=\"download(certificate)\">Download certificate</button>\r\n          <button type=\"button\" *ngIf=\"isAdmin()\" class=\"btn btn-danger btn-raised btn-sm\" (click)=\"revoke(certificate)\">Revoke certificate</button>\r\n        </td>\r\n        <td *ngIf=\"certificate.revoked\" class=\"table-buttons\">\r\n          <span class=\"red-text\">Revoked ({{certificate.revokeReasonText}})</span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n<div class=\"no-data\" *ngIf=\"!hasData() && !isLoading\">No data</div>\r\n<div *ngIf=\"!isLoading\">\r\n  <mc-create-button [title]=\"newCertificateTitle\" [onClick]=\"onIssueCertificate\"></mc-create-button>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.scss":
/***/ function(module, exports) {

module.exports = ".table-buttons {\n  width: 100%; }\n  .table-buttons button {\n    margin: 5px !important; }\n\n.certificate-table td {\n  vertical-align: middle; }\n\n.certificate-table td:first-child {\n  white-space: nowrap; }\n\n.certificate-table-short td {\n  vertical-align: middle; }\n\n.certificate-table-short td:first-child {\n  min-width: 200px; }\n"

/***/ },

/***/ "./src/app/pages/shared/components/designs-table/designs-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var DesignsTableComponent = (function () {
    function DesignsTableComponent() {
    }
    DesignsTableComponent.prototype.ngOnInit = function () {
    };
    DesignsTableComponent.prototype.ngOnChanges = function () {
        if (this.designs) {
            this.generateHeadersAndRows();
        }
    };
    DesignsTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.designs; _i < _a.length; _i++) {
            var design = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: design.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], DesignsTableComponent.prototype, "designs", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], DesignsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], DesignsTableComponent.prototype, "onRowClick", void 0);
    DesignsTableComponent = __decorate([
        core_1.Component({
            selector: 'designs-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/designs-table/designs-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], DesignsTableComponent);
    return DesignsTableComponent;
}());
exports.DesignsTableComponent = DesignsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/designs-table/designs-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/instances-table/instances-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var InstancesTableComponent = (function () {
    function InstancesTableComponent() {
    }
    InstancesTableComponent.prototype.ngOnInit = function () {
    };
    InstancesTableComponent.prototype.ngOnChanges = function () {
        if (this.instances) {
            this.generateHeadersAndRows();
        }
    };
    InstancesTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.instances; _i < _a.length; _i++) {
            var instance = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: instance.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], InstancesTableComponent.prototype, "instances", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], InstancesTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], InstancesTableComponent.prototype, "onRowClick", void 0);
    InstancesTableComponent = __decorate([
        core_1.Component({
            selector: 'instances-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/instances-table/instances-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], InstancesTableComponent);
    return InstancesTableComponent;
}());
exports.InstancesTableComponent = InstancesTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/instances-table/instances-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var Organization_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/Organization.ts");
var organization_view_model_service_1 = __webpack_require__("./src/app/pages/shared/services/organization-view-model.service.ts");
var OrganizationDetailsTableComponent = (function () {
    function OrganizationDetailsTableComponent(orgViewModelService) {
        this.orgViewModelService = orgViewModelService;
    }
    OrganizationDetailsTableComponent.prototype.ngOnChanges = function () {
        if (this.organization) {
            this.labelValues = this.orgViewModelService.generateLabelValuesForOrganization(this.organization);
        }
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], OrganizationDetailsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', (typeof (_a = typeof Organization_1.Organization !== 'undefined' && Organization_1.Organization) === 'function' && _a) || Object)
    ], OrganizationDetailsTableComponent.prototype, "organization", void 0);
    OrganizationDetailsTableComponent = __decorate([
        core_1.Component({
            selector: 'organization-details-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof organization_view_model_service_1.OrganizationViewModelService !== 'undefined' && organization_view_model_service_1.OrganizationViewModelService) === 'function' && _b) || Object])
    ], OrganizationDetailsTableComponent);
    return OrganizationDetailsTableComponent;
    var _a, _b;
}());
exports.OrganizationDetailsTableComponent = OrganizationDetailsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html":
/***/ function(module, exports) {

module.exports = "<mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/specifications-table/specifications-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SpecificationsTableComponent = (function () {
    function SpecificationsTableComponent() {
    }
    SpecificationsTableComponent.prototype.ngOnInit = function () {
    };
    SpecificationsTableComponent.prototype.ngOnChanges = function () {
        if (this.specifications) {
            this.generateHeadersAndRows();
        }
    };
    SpecificationsTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.specifications; _i < _a.length; _i++) {
            var specification = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: specification.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], SpecificationsTableComponent.prototype, "specifications", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], SpecificationsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], SpecificationsTableComponent.prototype, "onRowClick", void 0);
    SpecificationsTableComponent = __decorate([
        core_1.Component({
            selector: 'specifications-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/specifications-table/specifications-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], SpecificationsTableComponent);
    return SpecificationsTableComponent;
}());
exports.SpecificationsTableComponent = SpecificationsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/specifications-table/specifications-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/services/organization-view-model.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var OrganizationViewModelService = (function () {
    function OrganizationViewModelService() {
    }
    OrganizationViewModelService.prototype.ngOnInit = function () {
    };
    OrganizationViewModelService.prototype.generateLabelValuesForOrganization = function (organization) {
        var labelValues = undefined;
        if (organization) {
            labelValues = [];
            labelValues.push({ label: 'MRN', valueHtml: organization.mrn });
            labelValues.push({ label: 'Address', valueHtml: organization.address });
            labelValues.push({ label: 'Country', valueHtml: organization.country });
            if (organization.email) {
                labelValues.push({ label: 'Email', valueHtml: "<a href='mailto:" + organization.email + "'>" + organization.email + "</a>" });
            }
            if (organization.url) {
                labelValues.push({ label: 'Website', valueHtml: "<a href='" + organization.url + "' target='_blank'>" + organization.url + "</a>" });
            }
        }
        return labelValues;
    };
    OrganizationViewModelService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], OrganizationViewModelService);
    return OrganizationViewModelService;
}());
exports.OrganizationViewModelService = OrganizationViewModelService;


/***/ },

/***/ "./src/app/pages/shared/shared.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var designs_table_component_1 = __webpack_require__("./src/app/pages/shared/components/designs-table/designs-table.component.ts");
var specifications_table_component_1 = __webpack_require__("./src/app/pages/shared/components/specifications-table/specifications-table.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var instances_table_component_1 = __webpack_require__("./src/app/pages/shared/components/instances-table/instances-table.component.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var certificates_table_component_1 = __webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.component.ts");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var organization_details_table_component_1 = __webpack_require__("./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts");
var organization_view_model_service_1 = __webpack_require__("./src/app/pages/shared/services/organization-view-model.service.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
var SharedModule = (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule
            ],
            declarations: [
                designs_table_component_1.DesignsTableComponent,
                instances_table_component_1.InstancesTableComponent,
                specifications_table_component_1.SpecificationsTableComponent,
                certificates_table_component_1.CertificatesTableComponent,
                organization_details_table_component_1.OrganizationDetailsTableComponent,
                certificate_issue_new_component_1.CertificateIssueNewComponent
            ],
            exports: [
                organization_details_table_component_1.OrganizationDetailsTableComponent,
                designs_table_component_1.DesignsTableComponent,
                instances_table_component_1.InstancesTableComponent,
                specifications_table_component_1.SpecificationsTableComponent,
                certificates_table_component_1.CertificatesTableComponent,
                certificate_issue_new_component_1.CertificateIssueNewComponent
            ],
            providers: [
                sr_view_model_service_1.SrViewModelService,
                certificate_helper_service_1.CertificateHelperService,
                organization_view_model_service_1.OrganizationViewModelService
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SharedModule);
    return SharedModule;
}());
exports.SharedModule = SharedModule;


/***/ },

/***/ "./src/app/shared/enums-helper.ts":
/***/ function(module, exports) {

"use strict";
"use strict";
var EnumsHelper = (function () {
    function EnumsHelper() {
    }
    EnumsHelper.getKeysAndValuesFromEnum = function (myEnum) {
        var enumKeysAndValues = [];
        var keysAndValues = [];
        for (var enumValue in myEnum) {
            var enumsKeysAndValuesLength = keysAndValues.length;
            if (enumsKeysAndValuesLength === 0) {
                keysAndValues.push([enumValue, myEnum[enumValue]]);
                enumKeysAndValues.push({ key: enumValue, value: myEnum[enumValue] });
            }
            else {
                if (keysAndValues[enumsKeysAndValuesLength - 1][1] !== enumValue) {
                    keysAndValues.push([enumValue, myEnum[enumValue]]);
                    enumKeysAndValues.push({ key: enumValue, value: myEnum[enumValue] });
                }
            }
        }
        return enumKeysAndValues;
    };
    return EnumsHelper;
}());
exports.EnumsHelper = EnumsHelper;


/***/ }

});
//# sourceMappingURL=1.map