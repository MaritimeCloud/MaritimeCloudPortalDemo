{"version":3,"file":"3.chunk.js","sources":["webpack:///./src/app/backend-api/identity-registry/autogen/model/Organization.ts?2cd9**","webpack:///./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts?ef3a**","webpack:///./src/app/pages/organizations/organizations.component.ts","webpack:///./src/app/pages/organizations/organizations.module.ts","webpack:///./src/app/pages/organizations/organizations.routing.ts","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts?53b6**","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html?9ab8**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.component.ts?5f5d**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.html?947c**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.scss?89ae**","webpack:///./src/app/pages/shared/components/designs-table/designs-table.component.ts?7abc**","webpack:///./src/app/pages/shared/components/designs-table/designs-table.html?4ed3**","webpack:///./src/app/pages/shared/components/instances-table/instances-table.component.ts?6cf2**","webpack:///./src/app/pages/shared/components/instances-table/instances-table.html?c375**","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts?e2c8**","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html?0ef1**","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.component.ts?d0a3**","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.html?334b**","webpack:///./src/app/pages/shared/services/organization-view-model.service.ts?e7fe**","webpack:///./src/app/pages/shared/shared.module.ts?b542**"],"sourcesContent":["/**\r\n * Maritime Cloud Identity Registry API\r\n * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.\r\n *\r\n * OpenAPI spec version: 0.0.1\r\n * Contact: info@maritimecloud.net\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n'use strict';\r\nimport * as models from './models';\r\n\r\nexport interface Organization {\r\n    \r\n\r\n    address?: string;\r\n\r\n    /**\r\n     * Cannot be created/updated by editing in the model. Use the dedicate create and revoke calls.\r\n     */\r\n    certificates?: Array<models.Certificate>;\r\n\r\n    country?: string;\r\n\r\n    createdAt?: Date;\r\n\r\n    email?: string;\r\n\r\n    identityProviderAttributes?: Array<models.IdentityProviderAttribute>;\r\n\r\n    /**\r\n     * The Maritime Resource Name\r\n     */\r\n    mrn?: string;\r\n\r\n    /**\r\n     * The name of the organization\r\n     */\r\n    name?: string;\r\n\r\n    updatedAt?: Date;\r\n\r\n    url?: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/backend-api/identity-registry/autogen/model/Organization.ts","import {Injectable, OnInit} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Injectable()\r\nexport class SrViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public generateLabelValuesForSpecification(specification:Specification):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (specification) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: specification.specificationId});\r\n      labelValues.push({label: 'Name', valueHtml: specification.name});\r\n      labelValues.push({label: 'Version', valueHtml: specification.version});\r\n      labelValues.push({label: 'Status', valueHtml: specification.status});\r\n      labelValues.push({label: 'Description', valueHtml: specification.description});\r\n    }\r\n    return labelValues\r\n  }\r\n\r\n  public generateLabelValuesForDesign(design:Design):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (design) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: design.designId});\r\n      labelValues.push({label: 'Name', valueHtml: design.name});\r\n      labelValues.push({label: 'Version', valueHtml: design.version});\r\n      labelValues.push({label: 'Status', valueHtml: design.status});\r\n      labelValues.push({label: 'Description', valueHtml: design.description});\r\n    }\r\n    return labelValues;\r\n  }\r\n\r\n  public generateLabelValuesForInstance(instance:Instance):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (instance) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'ID', valueHtml: instance.instanceId});\r\n      labelValues.push({label: 'Name', valueHtml: instance.name});\r\n      labelValues.push({label: 'Version', valueHtml: instance.version});\r\n      labelValues.push({label: 'Status', valueHtml: instance.status});\r\n      labelValues.push({label: 'Description', valueHtml: instance.description});\r\n      labelValues.push({label: 'Service endpoint', valueHtml: instance.endpointUri});\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'organizations',\r\n  template: '<router-outlet></router-outlet>'\r\n})\r\nexport class OrganizationsComponent{\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { OrganizationsComponent } from './organizations.component';\r\nimport { routing }       from './organizations.routing';\r\nimport {SharedModule} from \"../shared/shared.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgaModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    OrganizationsComponent\r\n  ]\r\n})\r\nexport default class OrganizationsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\nimport {OrganizationsComponent} from \"./organizations.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrganizationsComponent,\r\n    data:{breadcrumb: 'Organizations'},\r\n    children: [\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.routing.ts","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../shared/mc-notifications.service\";\r\nimport {NavigationHelperService, queryKeys} from \"../../../../shared/navigation-helper.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CertificateEntityType} from \"../../services/certificate-helper.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificatesService} from \"../../../../backend-api/identity-registry/services/certificates.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'certificate-issue-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificate-issue-new.html'),\r\n  styles: []\r\n})\r\nexport class CertificateIssueNewComponent implements OnInit {\r\n  public entityType: CertificateEntityType;\r\n  public entityMrn: string;\r\n  public entityTitle: string;\r\n  public isLoading: boolean;\r\n  public pemCertificate: PemCertificate;\r\n\r\n  public labelValues:Array<LabelValueModel>;\r\n\r\n  constructor(private fileHelper: FileHelperService, private certificateService: CertificatesService, private route:ActivatedRoute, private navigationHelper: NavigationHelperService, private notificationService: MCNotificationsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = false;\r\n    let entityType = this.route.snapshot.queryParams[queryKeys.ENTITY_TYPE];\r\n    let entityMrn = this.route.snapshot.queryParams[queryKeys.ENTITY_MRN];\r\n    let entityTitle= this.route.snapshot.queryParams[queryKeys.ENTITY_TITLE];\r\n    if (!entityType || !entityMrn || !entityTitle) {\r\n      this.notificationService.generateNotification(\"Error\", \"Unresolved state when trying to issue new certificate\", MCNotificationType.Error);\r\n      this.navigationHelper.takeMeHome();\r\n    }\r\n    this.entityMrn = entityMrn;\r\n    this.entityTitle = entityTitle;\r\n    this.entityType = +entityType; // +-conversion from string to int\r\n    this.generateLabelValues();\r\n  }\r\n\r\n  public zipAndDownload() {\r\n    this.fileHelper.downloadPemCertificate(this.pemCertificate, this.entityTitle);\r\n  }\r\n\r\n  public issueNew() {\r\n    this.isLoading = true;\r\n    this.certificateService.issueNewCertificate(this.entityType, this.entityMrn).subscribe(\r\n      pemCertificate => {\r\n        this.pemCertificate = pemCertificate;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notificationService.generateNotification('Error', 'Error when trying to issue new certificate', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationHelper.cancelNavigateCertificates();\r\n  }\r\n\r\n  private generateLabelValues() {\r\n    this.labelValues = [];\r\n    this.labelValues.push({label: 'Name', valueHtml: this.entityTitle});\r\n    this.labelValues.push({label: 'MRN', valueHtml: this.entityMrn});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Issue new certificate\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <!-- Before issue -->\\r\\n      <div *ngIf=\\\"entityType && !pemCertificate && !isLoading\\\">\\r\\n        <h5>Issuing a new certificate for:</h5>\\r\\n        <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n        <ul *ngIf=\\\"entityType\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"issueNew()\\\">Issue Certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n\\r\\n      <!-- After issue and success -->\\r\\n      <div *ngIf=\\\"pemCertificate\\\">\\r\\n        Certificate issued with success\\r\\n        <ul *ngIf=\\\"entityType\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"zipAndDownload()\\\">Download certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">OK</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module id = ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, HostListener, OnChanges} from '@angular/core';\r\nimport {Certificate} from \"../../../../backend-api/identity-registry/autogen/model/Certificate\";\r\nimport {CertificateEntityType, CertificateHelperService} from \"../../services/certificate-helper.service\";\r\nimport {layoutSizes, DATE_FORMAT} from \"../../../../theme/theme.constants\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificateViewModel} from \"../../view-models/CertificateViewModel\";\r\nimport {NavigationHelperService} from \"../../../../shared/navigation-helper.service\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../shared/mc-notifications.service\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\n\r\n@Component({\r\n  selector: 'certificates-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificates-table.html'),\r\n  styles: [require('./certificates-table.scss')]\r\n})\r\nexport class CertificatesTableComponent implements OnChanges{\r\n  @Input() certificates: Array<Certificate>;\r\n  @Input() certificateEntityType: CertificateEntityType;\r\n  @Input() entityMrn: string;\r\n  @Input() isLoading: boolean;\r\n  @Input() certificateTitle: string;\r\n\r\n  public newCertificateTitle = \"Issue new Certificate\";\r\n  public certificateViewModels: Array<CertificateViewModel>;\r\n  public dateFormat = DATE_FORMAT;\r\n  public tableClass:string;\r\n  public onIssueCertificate: Function;\r\n\r\n  constructor(private fileHelper: FileHelperService, private navigationHelper: NavigationHelperService, private authService:AuthService, private certificateHelperService: CertificateHelperService, private notificationService: MCNotificationsService) {\r\n    this.calculateTableClass();\r\n    this.onIssueCertificate = this.issueCertificate.bind(this);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.certificates) {\r\n      this.certificateViewModels = this.certificateHelperService.convertCertificatesToViewModels(this.certificates);\r\n      this.sortCertificates();\r\n    }\r\n  }\r\n\r\n  public hasData():boolean {\r\n\t  return this.certificateViewModels && this.certificateViewModels.length > 0;\r\n  }\r\n\r\n  private sortCertificates() {\r\n    // We are sorting with longest due date on top\r\n    this.certificateViewModels.sort((obj1: CertificateViewModel, obj2: CertificateViewModel) => {\r\n      var obj1Time:number;\r\n      var obj2Time:number;\r\n      // Why is this needed??? for some reason sometimes the obj.end is a number and not a Date???\r\n      if (typeof obj1.end === \"Date\") {\r\n        obj1Time = obj1.end.getTime();\r\n      } else {\r\n        obj1Time = obj1.end;\r\n      }\r\n      if (typeof obj2.end === \"Date\") {\r\n        obj2Time = obj2.end.getTime();\r\n      } else {\r\n        obj2Time = obj2.end;\r\n      }\r\n\r\n      if (obj1.revoked && obj2.revoked) {\r\n        return obj2Time - obj1Time;\r\n      }\r\n      if (obj1.revoked) {\r\n        return 1;\r\n      }\r\n      if (obj2.revoked) {\r\n        return -1;\r\n      }\r\n      return obj2Time - obj1Time;\r\n    });\r\n  }\r\n\r\n  public issueCertificate() {\r\n    this.navigationHelper.navigateToIssueNewCertificate(this.certificateEntityType, this.entityMrn, this.certificateTitle);\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    return this.authService.authState.isAdmin();\r\n  }\r\n\r\n  public revoke(certificate:Certificate) {\r\n    this.notificationService.generateNotification('Not Implemented', 'Revoke coming soon', MCNotificationType.Info);\r\n  }\r\n\r\n  public download(certificate:Certificate) {\r\n    let pemCertificate:PemCertificate = {certificate:certificate.certificate};\r\n    this.fileHelper.downloadPemCertificate(pemCertificate, this.certificateTitle);\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    this.calculateTableClass();\r\n  }\r\n\r\n  private calculateTableClass():void {\r\n    this.tableClass = (this.isWindowToSmall()?'certificate-table-short':'certificate-table');\r\n  }\r\n\r\n  private isWindowToSmall():boolean {\r\n    return window.innerWidth <= layoutSizes.resWidthCollapseSidebar;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificates-table/certificates-table.component.ts","module.exports = \"<div *ngIf=\\\"!isLoading && hasData()\\\">\\r\\n  <table class=\\\"table table-bordered {{tableClass}}\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"black-muted-bg\\\">\\r\\n        <th class=\\\"\\\">Certificate</th>\\r\\n        <th class=\\\"nowrap\\\">Valid from</th>\\r\\n        <th class=\\\"nowrap\\\">Valid to</th>\\r\\n        <th class=\\\"table-buttons\\\"></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let certificate of certificateViewModels; let i = index\\\">\\r\\n        <td class=\\\"\\\">{{'Certificate for ' + certificateTitle | truncate:50}}</td>\\r\\n        <td class=\\\"nowrap\\\">{{certificate.start | date:dateFormat}}</td>\\r\\n        <td class=\\\"nowrap\\\">{{certificate.end | date:dateFormat}}</td>\\r\\n        <td *ngIf=\\\"!certificate.revoked\\\" class=\\\"table-buttons\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised btn-sm\\\" (click)=\\\"download(certificate)\\\">Download certificate</button>\\r\\n          <button type=\\\"button\\\" *ngIf=\\\"isAdmin()\\\" class=\\\"btn btn-danger btn-raised btn-sm\\\" (click)=\\\"revoke(certificate)\\\">Revoke certificate</button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"certificate.revoked\\\" class=\\\"table-buttons\\\">\\r\\n          <span class=\\\"red-text\\\">Revoked ({{certificate.revokeReasonText}})</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n<div class=\\\"no-data\\\" *ngIf=\\\"!hasData() && !isLoading\\\">No data</div>\\r\\n<div *ngIf=\\\"!isLoading\\\">\\r\\n  <mc-create-button [title]=\\\"newCertificateTitle\\\" [onClick]=\\\"onIssueCertificate\\\"></mc-create-button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module chunks = 0 1 2 3","module.exports = \".table-buttons {\\n  width: 100%; }\\n  .table-buttons button {\\n    margin: 5px !important; }\\n\\n.certificate-table td {\\n  vertical-align: middle; }\\n\\n.certificate-table td:first-child {\\n  white-space: nowrap; }\\n\\n.certificate-table-short td {\\n  vertical-align: middle; }\\n\\n.certificate-table-short td:first-child {\\n  min-width: 200px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'designs-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./designs-table.html'),\r\n  styles: []\r\n})\r\nexport class DesignsTableComponent implements OnChanges {\r\n  @Input() designs: Array<Design>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.designs) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let design of this.designs) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:design.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/designs-table/designs-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/designs-table/designs-table.html\n// module id = ./src/app/pages/shared/components/designs-table/designs-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Component({\r\n  selector: 'instances-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instances-table.html'),\r\n  styles: []\r\n})\r\nexport class InstancesTableComponent implements OnChanges {\r\n  @Input() instances: Array<Instance>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.instances) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let instance of this.instances) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:instance.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/instances-table/instances-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/instances-table/instances-table.html\n// module id = ./src/app/pages/shared/components/instances-table/instances-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Organization} from \"../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {OrganizationViewModelService} from \"../../services/organization-view-model.service\";\r\n\r\n@Component({\r\n  selector: 'organization-details-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./organization-details-table.html'),\r\n  styles: []\r\n})\r\nexport class OrganizationDetailsTableComponent implements OnChanges {\r\n  private labelValues:Array<LabelValueModel>;\r\n  @Input() isLoading:boolean;\r\n  @Input() organization: Organization;\r\n  constructor(private orgViewModelService: OrganizationViewModelService) {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.organization) {\r\n      this.labelValues = this.orgViewModelService.generateLabelValuesForOrganization(this.organization);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts","module.exports = \"<mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module id = ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module chunks = 0 1 2 3","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'specifications-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specifications-table.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationsTableComponent implements OnChanges {\r\n  @Input() specifications: Array<Specification>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.specifications) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let specification of this.specifications) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:specification.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/specifications-table/specifications-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module id = ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module chunks = 0 1 2 3","import {Injectable, OnInit} from '@angular/core';\r\nimport {Organization} from \"../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {LabelValueModel} from \"../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\n\r\n@Injectable()\r\nexport class OrganizationViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  public generateLabelValuesForOrganization(organization:Organization):Array<LabelValueModel>  {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (organization) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: organization.mrn});\r\n      labelValues.push({label: 'Address', valueHtml: organization.address});\r\n      labelValues.push({label: 'Country', valueHtml: organization.country});\r\n      if (organization.email) {\r\n        labelValues.push({label: 'Email', valueHtml: \"<a href='mailto:\" + organization.email + \"'>\" + organization.email + \"</a>\"});\r\n      }\r\n      if (organization.url) {\r\n        labelValues.push({label: 'Website', valueHtml: \"<a href='\" + organization.url + \"' target='_blank'>\" + organization.url + \"</a>\"});\r\n      }\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/services/organization-view-model.service.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport {DesignsTableComponent} from \"./components/designs-table/designs-table.component\";\r\nimport {SpecificationsTableComponent} from \"./components/specifications-table/specifications-table.component\";\r\nimport {NgaModule} from \"../../theme/nga.module\";\r\nimport {InstancesTableComponent} from \"./components/instances-table/instances-table.component\";\r\nimport {SrViewModelService} from \"../org-service-registry/shared/services/sr-view-model.service\";\r\nimport {CertificatesTableComponent} from \"./components/certificates-table/certificates-table.component\";\r\nimport {CertificateHelperService} from \"./services/certificate-helper.service\";\r\nimport {OrganizationDetailsTableComponent} from \"./components/organizaton-details-table/organization-details-table.component\";\r\nimport {OrganizationViewModelService} from \"./services/organization-view-model.service\";\r\nimport {CertificateIssueNewComponent} from \"./components/certificate-issue-new/certificate-issue-new.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule\r\n  ],\r\n  declarations: [\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    OrganizationDetailsTableComponent,\r\n    CertificateIssueNewComponent\r\n  ],\r\n  exports: [\r\n    OrganizationDetailsTableComponent,\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    CertificateIssueNewComponent\r\n  ],\r\n  providers: [\r\n    SrViewModelService,\r\n    CertificateHelperService,\r\n    OrganizationViewModelService\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/shared.module.ts"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA;AAEA;;;;;;;;;;ACxBA;AAOA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;;AAAA;AAgDA;AAAA;AA/CA;;;;;;;;;;ACPA;AAMA;AAEA;AACA;AAPA;AAAA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;ACdA;AACA;AACA;AACA;AAGA;AAGA;AASA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3DA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuDA;;AAAA;AAtDA;;;;;;;;AClBA;;;;;;;;;ACAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AASA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAtFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAuEA;AAAA;;;;AAAA;AAlFA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyFA;;AAAA;AAxFA;;;;;;;;ACjBA;;;;;;;ACAA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAEA;AACA;AAQA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAaA;;AAAA;AAZA;;;;;;;;ACXA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AAwBA;AAAA;AAvBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;AAAA;AACA;AA5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;;;;;","sourceRoot":""}