{"version":3,"file":"3.chunk.js","sources":["webpack:///./src/app/backend-api/identity-registry/autogen/model/Organization.ts?2cd9**","webpack:///./src/app/backend-api/identity-registry/autogen/model/Service.ts?b79f**","webpack:///./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts?6f60**","webpack:///./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts?ef3a**","webpack:///./src/app/pages/organizations/components/organization-details/organization-details.component.ts","webpack:///./src/app/pages/organizations/components/organization-details/organization-details.html","webpack:///./src/app/pages/organizations/components/organization-list/organization-list.component.ts","webpack:///./src/app/pages/organizations/components/organization-list/organization-list.html","webpack:///./src/app/pages/organizations/organizations.component.ts","webpack:///./src/app/pages/organizations/organizations.module.ts","webpack:///./src/app/pages/organizations/organizations.routing.ts","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts?53b6**","webpack:///./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html?9ab8**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.component.ts?5f5d**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.html?947c**","webpack:///./src/app/pages/shared/components/certificates-table/certificates-table.scss?89ae**","webpack:///./src/app/pages/shared/components/designs-table/designs-table.component.ts?7abc**","webpack:///./src/app/pages/shared/components/designs-table/designs-table.html?4ed3**","webpack:///./src/app/pages/shared/components/instances-table/instances-table.component.ts?6cf2**","webpack:///./src/app/pages/shared/components/instances-table/instances-table.html?c375**","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts?e2c8**","webpack:///./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html?0ef1**","webpack:///./src/app/pages/shared/components/service-details-view/service-details-view.component.ts?35f4**","webpack:///./src/app/pages/shared/components/service-details-view/service-details-view.html?e0c6**","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.component.ts?d0a3**","webpack:///./src/app/pages/shared/components/specifications-table/specifications-table.html?334b**","webpack:///./src/app/pages/shared/services/organization-view-model.service.ts?e7fe**","webpack:///./src/app/pages/shared/shared.module.ts?b542**","webpack:///./src/app/shared/enums-helper.ts?2384**"],"sourcesContent":["/**\r\n * Maritime Cloud Identity Registry API\r\n * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.\r\n *\r\n * OpenAPI spec version: 0.0.1\r\n * Contact: info@maritimecloud.net\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport * as models from './models';\r\n\r\nexport interface Organization {\r\n    address: string;\r\n\r\n    /**\r\n     * Cannot be created/updated by editing in the model. Use the dedicate create and revoke calls.\r\n     */\r\n    certificates?: Array<models.Certificate>;\r\n\r\n    country: string;\r\n\r\n    createdAt?: Date;\r\n\r\n    email: string;\r\n\r\n    /**\r\n     * Type of identity federation used by organization\r\n     */\r\n    federationType?: Organization.FederationTypeEnum;\r\n\r\n    identityProviderAttributes?: Array<models.IdentityProviderAttribute>;\r\n\r\n    /**\r\n     * The Maritime Resource Name\r\n     */\r\n    mrn: string;\r\n\r\n    /**\r\n     * The name of the organization\r\n     */\r\n    name: string;\r\n\r\n    updatedAt?: Date;\r\n\r\n    url: string;\r\n\r\n}\r\nexport namespace Organization {\r\n    export enum FederationTypeEnum {\r\n        TestIdp = <any> 'test-idp',\r\n        OwnIdp = <any> 'own-idp',\r\n        ExternalIdp = <any> 'external-idp'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/backend-api/identity-registry/autogen/model/Organization.ts","/**\r\n * Maritime Cloud Identity Registry API\r\n * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.\r\n *\r\n * OpenAPI spec version: 0.0.1\r\n * Contact: info@maritimecloud.net\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport * as models from './models';\r\n\r\nexport interface Service {\r\n    /**\r\n     * The domain name the service will be available on. Used in the issued certificates for the service.\r\n     */\r\n    certDomainName?: string;\r\n\r\n    /**\r\n     * Cannot be created/updated by editing in the model. Use the dedicate create and revoke calls.\r\n     */\r\n    certificates?: Array<models.Certificate>;\r\n\r\n    createdAt?: Date;\r\n\r\n    /**\r\n     * The Maritime Resource Name\r\n     */\r\n    mrn: string;\r\n\r\n    name: string;\r\n\r\n    /**\r\n     * Access type of the OpenId Connect client\r\n     */\r\n    oidcAccessType?: Service.OidcAccessTypeEnum;\r\n\r\n    /**\r\n     * The client id of the service in Maritime Cloud. Will be generated.\r\n     */\r\n    oidcClientId?: string;\r\n\r\n    /**\r\n     * The client secret of the service in Maritime Cloud. Will be generated.\r\n     */\r\n    oidcClientSecret?: string;\r\n\r\n    /**\r\n     * The OpenId Connect redirect uri of service.\r\n     */\r\n    oidcRedirectUri?: string;\r\n\r\n    /**\r\n     * Permissions as assigned from the organization\r\n     */\r\n    permissions?: string;\r\n\r\n    updatedAt?: Date;\r\n\r\n}\r\nexport namespace Service {\r\n    export enum OidcAccessTypeEnum {\r\n        Public = <any> 'public',\r\n        BearerOnly = <any> 'bearer-only',\r\n        Confidential = <any> 'confidential'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/backend-api/identity-registry/autogen/model/Service.ts","import {EnumsHelper} from \"../../../../shared/enums-helper\";\r\nimport {Service} from \"../../../../backend-api/identity-registry/autogen/model/Service\";\r\nimport OidcAccessTypeEnum = Service.OidcAccessTypeEnum;\r\n\r\nexport interface OidcAccessTypeViewModel {\r\n\tvalue?:string;\r\n\tlabel?:string;\r\n}\r\n\r\nexport class ServiceViewModel {\r\n\r\n\r\n\tpublic static getAllOidcAccessTypes(): Array<OidcAccessTypeViewModel> {\r\n\t\tlet models:Array<OidcAccessTypeViewModel> = [];\r\n\r\n\t\tlet keysAndValues = EnumsHelper.getKeysAndValuesFromEnum(OidcAccessTypeEnum);\r\n\t\tkeysAndValues.forEach(enumKeyAndValue => {\r\n\t\t\tlet model:OidcAccessTypeViewModel = {};\r\n\t\t\tmodel.value = enumKeyAndValue.value;\r\n\t\t\tmodel.label = ServiceViewModel.getLabelForEnum(enumKeyAndValue.value);\r\n\t\t\tmodels.push(model);\r\n\t\t});\r\n\t\treturn models;\r\n\t}\r\n\r\n\r\n\tpublic static getLabelForEnum(oidcAccessTypeEnum:OidcAccessTypeEnum):string {\r\n\t\tif (!oidcAccessTypeEnum) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tvar text = '';\r\n\t\tswitch (oidcAccessTypeEnum) {\r\n\t\t\tcase OidcAccessTypeEnum.BearerOnly: {\r\n\t\t\t\ttext = 'Bearer only';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase OidcAccessTypeEnum.Confidential: {\r\n\t\t\t\ttext = 'Confidential';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase OidcAccessTypeEnum.Public: {\r\n\t\t\t\ttext = 'Public';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault : {\r\n\t\t\t\ttext = OidcAccessTypeEnum[oidcAccessTypeEnum];\r\n\t\t\t\tif (!text) {\r\n\t\t\t\t\ttext = ''+ oidcAccessTypeEnum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts","import {Injectable, OnInit} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Injectable()\r\nexport class SrViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  public generateLabelValuesForSpecification(specification:Specification):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (specification) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: specification.specificationId});\r\n      labelValues.push({label: 'Name', valueHtml: specification.name});\r\n      labelValues.push({label: 'Version', valueHtml: specification.version});\r\n      labelValues.push({label: 'Status', valueHtml: specification.status});\r\n      labelValues.push({label: 'Description', valueHtml: specification.description});\r\n    }\r\n    return labelValues\r\n  }\r\n\r\n  public generateLabelValuesForDesign(design:Design):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (design) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: design.designId});\r\n      labelValues.push({label: 'Name', valueHtml: design.name});\r\n      labelValues.push({label: 'Version', valueHtml: design.version});\r\n      labelValues.push({label: 'Status', valueHtml: design.status});\r\n      labelValues.push({label: 'Description', valueHtml: design.description});\r\n    }\r\n    return labelValues;\r\n  }\r\n\r\n  public generateLabelValuesForInstance(instance:Instance):Array<LabelValueModel> {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (instance) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: instance.instanceId});\r\n      labelValues.push({label: 'Name', valueHtml: instance.name});\r\n      labelValues.push({label: 'Version', valueHtml: instance.version});\r\n      labelValues.push({label: 'Status', valueHtml: instance.status});\r\n      labelValues.push({label: 'Description', valueHtml: instance.description});\r\n      labelValues.push({label: 'Service endpoint', valueHtml: instance.endpointUri});\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../shared/mc-notifications.service\";\r\nimport {Organization} from \"../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {OrganizationsService} from \"../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'organization-details',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./organization-details.html'),\r\n  styles: []\r\n})\r\nexport class OrganizationDetailsComponent {\r\n\tpublic shouldDisplayDelete:boolean;\r\n\tpublic isLoading:boolean;\r\n\tpublic organization:Organization;\r\n\tpublic showModal:boolean = false;\r\n\tpublic modalDescription:string;\r\n\tconstructor(private authService:AuthService, private orgService: OrganizationsService, private router:Router, private route: ActivatedRoute, private notifications:MCNotificationsService) {\r\n\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.loadOrganization();\r\n\t}\r\n\r\n\tprivate loadOrganization() {\r\n\t\tthis.isLoading = true;\r\n\t\tlet mrn = this.route.snapshot.params['id'];\r\n\t\tthis.orgService.getOrganization(mrn).subscribe(\r\n\t\t\torganization => {\r\n\t\t\t\tthis.organization = organization;\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.setShouldDisplayDelete();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.notifications.generateNotification('Error', 'Error when trying to get organization', MCNotificationType.Error, err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate setShouldDisplayDelete() {\r\n\t\tthis.shouldDisplayDelete = !this.authService.isMyOrg(this.organization.mrn) && this.authService.authState.isSiteAdmin();\r\n\t}\r\n\r\n\tprivate delete() {\r\n\t\tthis.modalDescription = \"Are you sure you want to delete the organization?<br><br>All entities will be deleted and all issued certificates will be revoked.\";\r\n\t\tthis.showModal = true;\r\n\t}\r\n\tpublic cancelModal() {\r\n\t\tthis.showModal = false;\r\n\t}\r\n\r\n\tpublic deleteForSure() {\r\n\t\tthis.isLoading = true;\r\n\t\tthis.showModal = false;\r\n\t\tthis.orgService.deleteOrganization(this.organization.mrn).subscribe(\r\n\t\t\t() => {\r\n\t\t\t\tthis.router.navigate(['../'], {relativeTo: this.route });\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.notifications.generateNotification('Error', 'Error when trying to delete the organization', MCNotificationType.Error, err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/components/organization-details/organization-details.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"{{organization?.name}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <organization-details-table [isLoading]=\\\"isLoading\\\" [organization]=\\\"organization\\\"></organization-details-table>\\r\\n      <ul *ngIf=\\\"!isLoading && shouldDisplayDelete\\\" class=\\\"btn-list clearfix\\\">\\r\\n        <li *ngIf=\\\"shouldDisplayDelete\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"delete()\\\">Delete Organization</button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n<mc-modal (onCancel)=\\\"cancelModal()\\\" (onOk)=\\\"deleteForSure()\\\" [show]=\\\"showModal\\\" [title]=\\\"'Delete organization'\\\" [description]=\\\"modalDescription\\\" [cancelClass]=\\\"'btn btn-default btn-raised'\\\" [cancelTitle]=\\\"'Cancel'\\\" [okClass]=\\\"'btn btn-danger btn-raised'\\\" [okTitle]=\\\"'Delete'\\\"></mc-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/organizations/components/organization-details/organization-details.html\n// module id = ./src/app/pages/organizations/components/organization-details/organization-details.html\n// module chunks = 3","import {Component, ViewEncapsulation} from '@angular/core';\r\nimport {Organization} from \"../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {EntityImageModel} from \"../../../../theme/components/mcEntityImage/mcEntityImage.component\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {OrganizationsService} from \"../../../../backend-api/identity-registry/services/organizations.service\";\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../shared/mc-notifications.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {LogoService} from \"../../../../backend-api/identity-registry/services/logo.service\";\r\n\r\n@Component({\r\n  selector: 'organization-list',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./organization-list.html'),\r\n  styles: []\r\n})\r\nexport class OrganizationListComponent {\r\n\tprivate organizations:Array<Organization>;\r\n\tpublic entityImageList: Array<EntityImageModel>;\r\n  public isLoading: boolean;\r\n  constructor(private logoService: LogoService, private authService: AuthService, private router:Router, private route:ActivatedRoute, private orgService: OrganizationsService, private notifications:MCNotificationsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n\t  this.loadOrganizations();\r\n  }\r\n\r\n\tprivate loadOrganizations() {\r\n\t\tthis.orgService.getAllOrganizations().subscribe(\r\n\t\t\torganizations => {\r\n\t\t\t\tthis.organizations = organizations;\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.generateEntityImageList();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.notifications.generateNotification('Error', 'Error when trying to get organizations', MCNotificationType.Error, err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic gotoDetails(entityModel:EntityImageModel) {\r\n\t\tif (this.isMyOrg(entityModel.entityId)) {\r\n\t\t\tthis.router.navigate(['/']);\r\n\t\t} else {\r\n\t\t\tthis.router.navigate([entityModel.entityId], {relativeTo: this.route});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isMyOrg(orgMrn) {\r\n\t\treturn this.authService.authState.orgMrn === orgMrn;\r\n\t}\r\n\r\n  private generateEntityImageList() {\r\n\t  this.entityImageList = [];\r\n\t  if (this.organizations) {\r\n\t\t  this.organizations.forEach(organization => {\r\n\t\t\t    var htmlContent = '&nbsp;';\r\n\t\t\t    if (organization.email) {\r\n\t\t\t\t    htmlContent = \"<a href='mailto:\" + organization.email + \"'>\" + organization.email + \"</a>\";\r\n\t\t\t    }\r\n\t\t\t    this.entityImageList.push({imageSourceObservable:this.createImgObservable(organization), entityId:organization.mrn, title:organization.name, htmlContent:htmlContent});\r\n\t\t\t  }\r\n\t\t  );\r\n\t  }\r\n  }\r\n  private createImgObservable(organization:Organization):Observable<string> {\r\n\t  let imageSrc = 'assets/img/no_organization.png';\r\n\t  return Observable.create(observer => {\r\n\t\t  this.logoService.getLogoForOrganization(organization.mrn).subscribe(\r\n\t\t\t  logo => {\r\n\t\t\t\t  observer.next(URL.createObjectURL(new Blob([logo])));\r\n\t\t\t  },\r\n\t\t\t  err => {\r\n\t\t\t\t  observer.next(imageSrc);\r\n\t\t\t  }\r\n\t\t  );\r\n\t  });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/components/organization-list/organization-list.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Organizations in the Maritime Cloud\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <mc-entity-image-list [isLoading]=\\\"isLoading\\\" [entityImageList]=\\\"entityImageList\\\" (onClick)=\\\"gotoDetails($event)\\\"></mc-entity-image-list>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/organizations/components/organization-list/organization-list.html\n// module id = ./src/app/pages/organizations/components/organization-list/organization-list.html\n// module chunks = 3","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'organizations',\r\n  template: '<router-outlet></router-outlet>'\r\n})\r\nexport class OrganizationsComponent{\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.component.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { NgaModule } from '../../theme/nga.module';\r\nimport { OrganizationsComponent } from './organizations.component';\r\nimport { routing }       from './organizations.routing';\r\nimport {SharedModule} from \"../shared/shared.module\";\r\nimport {OrganizationListComponent} from \"./components/organization-list/organization-list.component\";\r\nimport {OrganizationDetailsComponent} from \"./components/organization-details/organization-details.component\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    NgaModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    OrganizationsComponent,\r\n\t  OrganizationListComponent,\r\n\t  OrganizationDetailsComponent\r\n  ]\r\n})\r\nexport default class OrganizationsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.module.ts","import { Routes, RouterModule }  from '@angular/router';\r\nimport {OrganizationsComponent} from \"./organizations.component\";\r\nimport {OrganizationListComponent} from \"./components/organization-list/organization-list.component\";\r\nimport {OrganizationDetailsComponent} from \"./components/organization-details/organization-details.component\";\r\n\r\n// noinspection TypeScriptValidateTypes\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrganizationsComponent,\r\n    data:{breadcrumb: 'Organizations'},\r\n    children: [\r\n\t    {\r\n\t\t    path: '',\r\n\t\t    component: OrganizationListComponent\r\n\t    },\r\n\t    {\r\n\t\t    path: ':id',\r\n\t\t    component: OrganizationDetailsComponent,\r\n\t\t    data:{breadcrumb: 'Details'},\r\n\t    }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const routing = RouterModule.forChild(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/organizations/organizations.routing.ts","import {Component, ViewEncapsulation, OnInit} from '@angular/core';\r\nimport {MCNotificationsService, MCNotificationType} from \"../../../../shared/mc-notifications.service\";\r\nimport {NavigationHelperService, queryKeys} from \"../../../../shared/navigation-helper.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {CertificateEntityType} from \"../../services/certificate-helper.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificatesService} from \"../../../../backend-api/identity-registry/services/certificates.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'certificate-issue-new',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificate-issue-new.html'),\r\n  styles: []\r\n})\r\nexport class CertificateIssueNewComponent implements OnInit {\r\n  public entityType: CertificateEntityType;\r\n  public entityMrn: string;\r\n  public entityTitle: string;\r\n  public isLoading: boolean;\r\n  public pemCertificate: PemCertificate;\r\n\r\n  public labelValues:Array<LabelValueModel>;\r\n\r\n  constructor(private fileHelper: FileHelperService, private certificateService: CertificatesService, private route:ActivatedRoute, private navigationHelper: NavigationHelperService, private notificationService: MCNotificationsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = false;\r\n    let entityType = this.route.snapshot.queryParams[queryKeys.ENTITY_TYPE];\r\n    let entityMrn = this.route.snapshot.queryParams[queryKeys.ENTITY_MRN];\r\n    let entityTitle= this.route.snapshot.queryParams[queryKeys.ENTITY_TITLE];\r\n    if (entityType == null || !entityMrn || !entityTitle) {\r\n      this.notificationService.generateNotification(\"Error\", \"Unresolved state when trying to issue new certificate\", MCNotificationType.Error);\r\n      this.navigationHelper.takeMeHome();\r\n    }\r\n    this.entityMrn = entityMrn;\r\n    this.entityTitle = entityTitle;\r\n    this.entityType = +entityType; // +-conversion from string to int\r\n    this.generateLabelValues();\r\n  }\r\n\r\n  public zipAndDownload() {\r\n    this.fileHelper.downloadPemCertificate(this.pemCertificate, this.entityTitle);\r\n  }\r\n\r\n  public issueNew() {\r\n    this.isLoading = true;\r\n    this.certificateService.issueNewCertificate(this.entityType, this.entityMrn).subscribe(\r\n      pemCertificate => {\r\n        this.pemCertificate = pemCertificate;\r\n        this.isLoading = false;\r\n      },\r\n      err => {\r\n        this.isLoading = false;\r\n        this.notificationService.generateNotification('Error', 'Error when trying to issue new certificate', MCNotificationType.Error, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public cancel() {\r\n    this.navigationHelper.cancelNavigateCertificates();\r\n  }\r\n\r\n  private generateLabelValues() {\r\n    this.labelValues = [];\r\n    this.labelValues.push({label: 'Name', valueHtml: this.entityTitle});\r\n    this.labelValues.push({label: 'MRN', valueHtml: this.entityMrn});\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <ba-card title=\\\"Issue new certificate\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n      <!-- Before issue -->\\r\\n      <div *ngIf=\\\"entityType != null && !pemCertificate && !isLoading\\\">\\r\\n        <h5>Issuing a new certificate for:</h5>\\r\\n        <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n        <ul *ngIf=\\\"entityType != null\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"issueNew()\\\">Issue Certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <sk-fading-circle [isRunning]=\\\"isLoading\\\" ></sk-fading-circle>\\r\\n\\r\\n      <!-- After issue and success -->\\r\\n      <div *ngIf=\\\"pemCertificate\\\">\\r\\n        Certificate issued with success\\r\\n        <ul *ngIf=\\\"entityType != null\\\" class=\\\"btn-list clearfix\\\">\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"zipAndDownload()\\\">Download certificate</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-raised\\\" (click)=\\\"cancel()\\\">OK</button>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </ba-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module id = ./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, HostListener, OnChanges} from '@angular/core';\r\nimport {Certificate} from \"../../../../backend-api/identity-registry/autogen/model/Certificate\";\r\nimport {CertificateEntityType, CertificateHelperService} from \"../../services/certificate-helper.service\";\r\nimport {layoutSizes, DATE_FORMAT} from \"../../../../theme/theme.constants\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {CertificateViewModel} from \"../../view-models/CertificateViewModel\";\r\nimport {NavigationHelperService} from \"../../../../shared/navigation-helper.service\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../shared/mc-notifications.service\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\nimport {PemCertificate} from \"../../../../backend-api/identity-registry/autogen/model/PemCertificate\";\r\nimport {\r\n\tTableHeader, TableRow, TableCell,\r\n\tTableCellActionButtons, TableActionButton\r\n} from \"../../../../theme/components/mcTable/mcTable.component\";\r\nimport {DatePipe} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'certificates-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./certificates-table.html'),\r\n  styles: [require('./certificates-table.scss')]\r\n})\r\nexport class CertificatesTableComponent implements OnChanges{\r\n  @Input() certificates: Array<Certificate>;\r\n  @Input() certificateEntityType: CertificateEntityType;\r\n  @Input() entityMrn: string;\r\n  @Input() isLoading: boolean;\r\n  @Input() certificateTitle: string;\r\n\r\n\tpublic tableHeaders: Array<TableHeader>;\r\n\tpublic tableRows: Array<TableRow>;\r\n  public newCertificateTitle = \"Issue new Certificate\";\r\n  public certificateViewModels: Array<CertificateViewModel>;\r\n  public tableClass:string;\r\n  public onIssueCertificate: Function;\r\n\r\n\tpublic onDownload:Function;\r\n\r\n  constructor(private datePipe: DatePipe, private fileHelper: FileHelperService, private navigationHelper: NavigationHelperService, private authService:AuthService, private certificateHelperService: CertificateHelperService, private notificationService: MCNotificationsService) {\r\n    this.onIssueCertificate = this.issueCertificate.bind(this);\r\n  }\r\n\r\n\tngOnInit() {\r\n\t\tif (!this.authService.authState.rolesLoaded) {\r\n\t\t\tthis.authService.rolesLoaded.subscribe((mode)=> {\r\n\t\t\t\tthis.generateHeadersAndRows();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n  ngOnChanges() {\r\n    if (this.certificates) {\r\n      this.certificateViewModels = this.certificateHelperService.convertCertificatesToViewModels(this.certificates);\r\n      this.sortCertificates();\r\n\t    this.generateHeadersAndRows();\r\n    }\r\n  }\r\n\tprivate generateHeadersAndRows() {\r\n\t\tvar tableHeaders: Array<TableHeader> = [];\r\n\t\tvar tableRows: Array<TableRow> = [];\r\n\r\n\t\tvar tableHeader: TableHeader = {title:'Certificate', class:''};\r\n\t\ttableHeaders.push(tableHeader);\r\n\r\n\t\ttableHeader = {title:'Valid from', class:'nowrap'};\r\n\t\ttableHeaders.push(tableHeader);\r\n\r\n\t\ttableHeader = {title:'Valid to', class:'nowrap'};\r\n\t\ttableHeaders.push(tableHeader);\r\n\r\n\t\ttableHeader = {title:'', class:'table-buttons'};\r\n\t\ttableHeaders.push(tableHeader);\r\n\r\n\t\tfor (let certificate of this.certificateViewModels) {\r\n\t\t\tvar cells:Array<TableCell> = [];\r\n\r\n\t\t\tvar tableCell: TableCell = {valueHtml:'Certificate for ' + this.certificateTitle, class:'', truncateNumber:50};\r\n\t\t\tcells.push(tableCell);\r\n\r\n\t\t\ttableCell = {valueHtml:this.datePipe.transform(certificate.start, DATE_FORMAT), class:'nowrap', truncateNumber:0};\r\n\t\t\tcells.push(tableCell);\r\n\r\n\t\t\ttableCell = {valueHtml:this.datePipe.transform(certificate.end, DATE_FORMAT), class:'nowrap', truncateNumber:0};\r\n\t\t\tcells.push(tableCell);\r\n\r\n\t\t\tif (certificate.revoked) {\r\n\t\t\t\ttableCell = {valueHtml:'Revoked (' + certificate.revokeReasonText + ')', class:'red-text', truncateNumber:50};\r\n\t\t\t\tcells.push(tableCell);\r\n\t\t\t} else {\r\n\t\t\t\tlet actionButtons:Array<TableActionButton> = [];\r\n\t\t\t\tlet actionButton:TableActionButton = {buttonClass: 'btn btn-primary btn-raised btn-sm', name: 'Download certificate', onClick:() => {this.download(certificate)}};\r\n\t\t\t\tactionButtons.push(actionButton);\r\n\t\t\t\tif (this.isAdmin()) {\r\n\t\t\t\t\tactionButton = {buttonClass: 'btn btn-danger btn-raised btn-sm', name: 'Revoke certificate', onClick:() => {this.revoke(certificate)}};\r\n\t\t\t\t\tactionButtons.push(actionButton);\r\n\t\t\t\t}\r\n\t\t\t\tlet tableCellActionButtons: TableCellActionButtons = {valueHtml:'', class:'table-buttons', truncateNumber:0, actionButtons:actionButtons};\r\n\t\t\t\tcells.push(tableCellActionButtons);\r\n\t\t\t}\r\n\r\n\t\t\tlet tableRow: TableRow = {cells: cells};\r\n\t\t\ttableRows.push(tableRow);\r\n\t\t}\r\n\r\n\t\tthis.tableHeaders = tableHeaders;\r\n\t\tthis.tableRows = tableRows;\r\n\t}\r\n  private sortCertificates() {\r\n    // We are sorting with longest due date on top\r\n    this.certificateViewModels.sort((obj1: CertificateViewModel, obj2: CertificateViewModel) => {\r\n      var obj1Time:number;\r\n      var obj2Time:number;\r\n      // Why is this needed??? for some reason sometimes the obj.end is a number and not a Date???\r\n      if (typeof obj1.end === \"Date\") {\r\n        obj1Time = obj1.end.getTime();\r\n      } else {\r\n        obj1Time = obj1.end;\r\n      }\r\n      if (typeof obj2.end === \"Date\") {\r\n        obj2Time = obj2.end.getTime();\r\n      } else {\r\n        obj2Time = obj2.end;\r\n      }\r\n\r\n      if (obj1.revoked && obj2.revoked) {\r\n        return obj2Time - obj1Time;\r\n      }\r\n      if (obj1.revoked) {\r\n        return 1;\r\n      }\r\n      if (obj2.revoked) {\r\n        return -1;\r\n      }\r\n      return obj2Time - obj1Time;\r\n    });\r\n  }\r\n\r\n  public issueCertificate() {\r\n    this.navigationHelper.navigateToIssueNewCertificate(this.certificateEntityType, this.entityMrn, this.certificateTitle);\r\n  }\r\n\r\n  public isAdmin():boolean {\r\n    return this.authService.authState.isAdmin();\r\n  }\r\n\r\n  public revoke(certificate:Certificate) {\r\n    this.notificationService.generateNotification('Not Implemented', 'Revoke coming soon', MCNotificationType.Info);\r\n  }\r\n\r\n  public download(certificate:Certificate) {\r\n    let pemCertificate:PemCertificate = {certificate:certificate.certificate};\r\n    this.fileHelper.downloadPemCertificate(pemCertificate, this.certificateTitle);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/certificates-table/certificates-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\"></mc-table>\\r\\n<div *ngIf=\\\"!isLoading\\\">\\r\\n  <mc-create-button [title]=\\\"newCertificateTitle\\\" [onClick]=\\\"onIssueCertificate\\\"></mc-create-button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.html\n// module chunks = 0 1 2 3 4","module.exports = \".table-buttons {\\n  width: 100%; }\\n  .table-buttons button {\\n    margin: 5px !important; }\\n\\n.certificate-table td {\\n  vertical-align: middle; }\\n\\n.certificate-table td:first-child {\\n  white-space: nowrap; }\\n\\n.certificate-table-short td {\\n  vertical-align: middle; }\\n\\n.certificate-table-short td:first-child {\\n  min-width: 200px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module id = ./src/app/pages/shared/components/certificates-table/certificates-table.scss\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Design} from \"../../../../backend-api/service-registry/autogen/model/Design\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'designs-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./designs-table.html'),\r\n  styles: []\r\n})\r\nexport class DesignsTableComponent implements OnChanges {\r\n  @Input() designs: Array<Design>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.designs) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let design of this.designs) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:design.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:design.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/designs-table/designs-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/designs-table/designs-table.html\n// module id = ./src/app/pages/shared/components/designs-table/designs-table.html\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\nimport {Instance} from \"../../../../backend-api/service-registry/autogen/model/Instance\";\r\n\r\n@Component({\r\n  selector: 'instances-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./instances-table.html'),\r\n  styles: []\r\n})\r\nexport class InstancesTableComponent implements OnChanges {\r\n  @Input() instances: Array<Instance>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.instances) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let instance of this.instances) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:instance.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:instance.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/instances-table/instances-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/instances-table/instances-table.html\n// module id = ./src/app/pages/shared/components/instances-table/instances-table.html\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, OnChanges, Output, EventEmitter} from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Organization} from \"../../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {OrganizationViewModelService} from \"../../services/organization-view-model.service\";\r\nimport {LogoService} from \"../../../../backend-api/identity-registry/services/logo.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../shared/mc-notifications.service\";\r\n\r\n@Component({\r\n  selector: 'organization-details-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./organization-details-table.html'),\r\n  styles: []\r\n})\r\nexport class OrganizationDetailsTableComponent implements OnChanges {\r\n  private labelValues:Array<LabelValueModel>;\r\n\t@Input() displayLogo:boolean = true;\r\n  @Input() isLoading:boolean;\r\n\t@Input() organization: Organization;\r\n\t@Output() onLogoLoaded: EventEmitter<any> = new EventEmitter<any>();\r\n\tpublic logo:string;\r\n\tpublic canChangeLogo:boolean;\r\n\tpublic isLoadingOrgAndLogo:boolean = true;\r\n\tpublic uploadingLogo:boolean = false;\r\n  constructor(private authService:AuthService, private logoService: LogoService, private orgViewModelService: OrganizationViewModelService, private notifications:MCNotificationsService) {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.organization) {\r\n\t    this.canChangeLogo = this.canChangeTheLogo();\r\n\t    this.loadLogo();\r\n    }\r\n  }\r\n  public uploadLogo(logo:any) {\r\n\t  let oldLogo = this.logo;\r\n\t  this.uploadingLogo = true;\r\n\t  this.logoService.uploadLogo(this.organization.mrn, logo).subscribe(\r\n\t\t  logo => {\r\n\t\t\t  this.loadLogo();\r\n\t\t  },\r\n\t\t  err => {\r\n\t\t\t  this.logo = oldLogo;\r\n\t\t\t  this.uploadingLogo = false;\r\n\t\t\t  this.notifications.generateNotification('Error', 'Error when trying to upload logo', MCNotificationType.Error, err);\r\n\t\t  }\r\n\t  );\r\n  }\r\n\r\n  private setLabelValues() {\r\n\t  this.labelValues = this.orgViewModelService.generateLabelValuesForOrganization(this.organization);\r\n\t  this.isLoadingOrgAndLogo = false;\r\n  }\r\n\r\n\tprivate loadLogo(){\r\n\t\tthis.logoService.getLogoForOrganization(this.organization.mrn).subscribe(\r\n\t\t\tlogo => {\r\n\t\t\t\tthis.logo = URL.createObjectURL(new Blob([logo]));\r\n\t\t\t\tthis.setLabelValues();\r\n\t\t\t\tthis.uploadingLogo = false;\r\n\t\t\t\tthis.onLogoLoaded.emit('');\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tif (this.canChangeTheLogo()) {\r\n\t\t\t\t\tthis.logo = 'assets/img/no_organization.png';\r\n\t\t\t\t}\r\n\t\t\t\tthis.setLabelValues();\r\n\t\t\t\tthis.uploadingLogo = false;\r\n\t\t\t\tthis.onLogoLoaded.emit('');\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\tprivate canChangeTheLogo():boolean {\r\n\t\treturn ( (this.authService.authState.isAdmin() && this.authService.isMyOrg(this.organization.mrn)) || this.authService.authState.isSiteAdmin());\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts","module.exports = \"<div *ngIf=\\\"displayLogo && logo\\\" style=\\\"margin-bottom: 10px;\\\">\\r\\n  <img class=\\\"logo-image-no-center\\\" [attr.src]=\\\"logo | sanitizeUrl\\\" *ngIf=\\\"logo && !canChangeLogo\\\">\\r\\n  <mc-logo-uploader [logo]=\\\"logo\\\" [uploadingLogo]=\\\"uploadingLogo\\\" (onUpload)=\\\"uploadLogo($event)\\\" *ngIf=\\\"logo && canChangeLogo\\\"></mc-logo-uploader>\\r\\n</div>\\r\\n<mc-label-value-table [isLoading]=\\\"isLoadingOrgAndLogo\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module id = ./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, Output, EventEmitter} from '@angular/core';\r\nimport {LabelValueModel} from \"../../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\nimport {Service} from \"../../../../backend-api/identity-registry/autogen/model/Service\";\r\nimport {CertificateEntityType} from \"../../services/certificate-helper.service\";\r\nimport {FileHelperService} from \"../../../../shared/file-helper.service\";\r\nimport {AuthService} from \"../../../../authentication/services/auth.service\";\r\nimport {ServiceViewModel} from \"../../../org-identity-registry/services/view-models/ServiceViewModel\";\r\nimport {MCNotificationType, MCNotificationsService} from \"../../../../shared/mc-notifications.service\";\r\nimport {IdServicesService} from \"../../../../backend-api/identity-registry/services/id-services.service\";\r\n\r\n@Component({\r\n  selector: 'service-details-view',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./service-details-view.html'),\r\n  styles: []\r\n})\r\nexport class ServiceDetailsViewComponent {\r\n\t@Input() service:Service;\r\n\t@Input() shouldShowDelete:boolean = true;\r\n\t@Input() shouldShowUpdate:boolean = true;\r\n\t@Input() isLoading:boolean;\r\n\t@Input() title:string;\r\n\r\n\t@Output() deleteAction:EventEmitter<any> = new EventEmitter<any>();\r\n\t@Output() updateAction:EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\tpublic labelValues:Array<LabelValueModel>;\r\n\tpublic entityType: CertificateEntityType;\r\n\tconstructor(private fileHelperService:FileHelperService, private authService: AuthService, private servicesService: IdServicesService, private notifications:MCNotificationsService) {\r\n\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.entityType = CertificateEntityType.Service;\r\n\t}\r\n\r\n\tngOnChanges() {\r\n\t\tif (this.service) {\r\n\t\t\tthis.generateLabelValues();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic downloadXML() {\r\n\t\tthis.servicesService.getIdServiceJbossXml(this.service.mrn).subscribe(\r\n\t\t\txmlString => {\r\n\t\t\t\tthis.fileHelperService.downloadFile(xmlString, 'text/xml', 'keycloak-oidc-subsystem.xml');\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.notifications.generateNotification('Error', 'Error when trying to download the XML', MCNotificationType.Error, err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic downloadJSON() {\r\n\t\tthis.servicesService.getServiceKeycloakJson(this.service.mrn).subscribe(\r\n\t\t\tjsonString => {\r\n\t\t\t\tthis.fileHelperService.downloadFile(jsonString, 'text/json', 'keycloak.json');\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\tthis.isLoading = false;\r\n\t\t\t\tthis.notifications.generateNotification('Error', 'Error when trying to download the JSON', MCNotificationType.Error, err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic generateLabelValues() {\r\n\t\tthis.labelValues = [];\r\n\t\tif (this.service) {\r\n\t\t\tthis.labelValues.push({label: 'MRN', valueHtml: this.service.mrn});\r\n\t\t\tthis.labelValues.push({label: 'Name', valueHtml: this.service.name});\r\n\t\t\tthis.labelValues.push({label: 'Permissions', valueHtml: this.service.permissions});\r\n\t\t\tthis.labelValues.push({label: 'Certificate domain name', valueHtml: this.service.certDomainName});\r\n\t\t\tif (this.service.oidcRedirectUri) {\r\n\t\t\t\tthis.labelValues.push({label: 'OIDC Redirect URI', valueHtml: this.service.oidcRedirectUri});\r\n\t\t\t\tthis.labelValues.push({label: 'OIDC Client ID', valueHtml: this.service.oidcClientId});\r\n\t\t\t\tthis.labelValues.push({label: 'OIDC Client Secret', valueHtml: this.service.oidcClientSecret});\r\n\t\t\t\tthis.labelValues.push({label: 'Access type', valueHtml: ServiceViewModel.getLabelForEnum(this.service.oidcAccessType)});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic showDelete():boolean {\r\n\t\treturn this.shouldShowDelete && this.isAdmin() && this.service != null;\r\n\t}\r\n\r\n\tpublic showUpdate():boolean {\r\n\t\treturn this.shouldShowUpdate && this.isAdmin() && this.service != null;\r\n\t}\r\n\r\n\tprivate isAdmin() {\r\n\t\treturn this.authService.authState.isAdmin();\r\n\t}\r\n\r\n\tprivate delete() {\r\n\t\tthis.deleteAction.emit('');\r\n\t}\r\n\r\n\tprivate update() {\r\n\t\tthis.updateAction.emit('');\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/service-details-view/service-details-view.component.ts","module.exports = \"<ba-card title=\\\"{{title}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n  <mc-label-value-table [isLoading]=\\\"isLoading\\\" [labelValues]=\\\"labelValues\\\"></mc-label-value-table>\\r\\n  <ul *ngIf=\\\"!isLoading && service && (this.service.oidcRedirectUri || showDelete() || showUpdate())\\\" class=\\\"btn-list clearfix\\\">\\r\\n    <li *ngIf=\\\"this.service.oidcRedirectUri\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadXML()\\\">Download JBOSS XML</button>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"this.service.oidcRedirectUri\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"downloadJSON()\\\">Download Keycloak JSON</button>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"showUpdate()\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-raised\\\" (click)=\\\"update()\\\">Update</button>\\r\\n    </li>\\r\\n    <li *ngIf=\\\"showDelete()\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-raised\\\" (click)=\\\"delete()\\\">Delete Service</button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</ba-card>\\r\\n\\r\\n<div *ngIf=\\\"service\\\">\\r\\n  <ba-card title=\\\"Certificates for {{service.name}}\\\" baCardClass=\\\"with-scroll table-panel\\\">\\r\\n    <certificates-table [entityMrn]=\\\"service.mrn\\\" [isLoading]=\\\"isLoading\\\" [certificateTitle]=\\\"service.name\\\" [certificateEntityType]=\\\"entityType\\\" [certificates]=\\\"service.certificates\\\"></certificates-table>\\r\\n  </ba-card>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/service-details-view/service-details-view.html\n// module id = ./src/app/pages/shared/components/service-details-view/service-details-view.html\n// module chunks = 0 1 2 3 4","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\r\nimport {Specification} from \"../../../../backend-api/service-registry/autogen/model/Specification\";\r\nimport {TableHeader, TableRow, TableCell} from \"../../../../theme/components/mcTable/mcTable.component\";\r\n\r\n@Component({\r\n  selector: 'specifications-table',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: require('./specifications-table.html'),\r\n  styles: []\r\n})\r\nexport class SpecificationsTableComponent implements OnChanges {\r\n  @Input() specifications: Array<Specification>;\r\n  @Input() isLoading: boolean;\r\n  @Input() onRowClick: (index:number) => void;\r\n  public tableHeaders: Array<TableHeader>;\r\n  public tableRows: Array<TableRow>;\r\n  constructor() {\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  ngOnChanges() {\r\n    if (this.specifications) {\r\n      this.generateHeadersAndRows();\r\n    }\r\n  }\r\n  private generateHeadersAndRows() {\r\n    var tableHeaders: Array<TableHeader> = [];\r\n    var tableRows: Array<TableRow> = [];\r\n\r\n    var tableHeader: TableHeader = {title:'Name', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Version', class:'nowrap align-center'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Status', class:'nowrap'};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    tableHeader = {title:'Description', class:''};\r\n    tableHeaders.push(tableHeader);\r\n\r\n    for (let specification of this.specifications) {\r\n      var cells:Array<TableCell> = [];\r\n\r\n      var tableCell: TableCell = {valueHtml:specification.name, class:'', truncateNumber:50};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.version, class:'nowrap align-center', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.status, class:'nowrap', truncateNumber:0};\r\n      cells.push(tableCell);\r\n\r\n      tableCell = {valueHtml:specification.description, class:'table-description', truncateNumber:250};\r\n      cells.push(tableCell);\r\n\r\n      let tableRow: TableRow = {cells: cells};\r\n      tableRows.push(tableRow);\r\n    }\r\n\r\n    this.tableHeaders = tableHeaders;\r\n    this.tableRows = tableRows;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/components/specifications-table/specifications-table.component.ts","module.exports = \"<mc-table [tableHeaders]=\\\"tableHeaders\\\" [tableRows]=\\\"tableRows\\\" [isLoading]=\\\"isLoading\\\" [onRowClick]=\\\"onRowClick\\\"></mc-table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module id = ./src/app/pages/shared/components/specifications-table/specifications-table.html\n// module chunks = 0 1 2 3 4","import {Injectable, OnInit} from '@angular/core';\r\nimport {Organization} from \"../../../backend-api/identity-registry/autogen/model/Organization\";\r\nimport {LabelValueModel} from \"../../../theme/components/mcLabelValueTable/mcLabelValueTable.component\";\r\n\r\n@Injectable()\r\nexport class OrganizationViewModelService implements OnInit {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  public generateLabelValuesForOrganization(organization:Organization):Array<LabelValueModel>  {\r\n    var labelValues:Array<LabelValueModel> = undefined;\r\n    if (organization) {\r\n      labelValues = [];\r\n      labelValues.push({label: 'MRN', valueHtml: organization.mrn});\r\n\t    labelValues.push({label: 'Name', valueHtml: organization.name});\r\n      labelValues.push({label: 'Address', valueHtml: organization.address});\r\n      labelValues.push({label: 'Country', valueHtml: organization.country});\r\n      if (organization.email) {\r\n        labelValues.push({label: 'Email', valueHtml: \"<a href='mailto:\" + organization.email + \"'>\" + organization.email + \"</a>\"});\r\n      }\r\n      if (organization.url) {\r\n        labelValues.push({label: 'Website', valueHtml: \"<a href='\" + organization.url + \"' target='_blank'>\" + organization.url + \"</a>\"});\r\n      }\r\n    }\r\n    return labelValues;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/services/organization-view-model.service.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport {DesignsTableComponent} from \"./components/designs-table/designs-table.component\";\r\nimport {SpecificationsTableComponent} from \"./components/specifications-table/specifications-table.component\";\r\nimport {NgaModule} from \"../../theme/nga.module\";\r\nimport {InstancesTableComponent} from \"./components/instances-table/instances-table.component\";\r\nimport {SrViewModelService} from \"../org-service-registry/shared/services/sr-view-model.service\";\r\nimport {CertificatesTableComponent} from \"./components/certificates-table/certificates-table.component\";\r\nimport {CertificateHelperService} from \"./services/certificate-helper.service\";\r\nimport {OrganizationDetailsTableComponent} from \"./components/organizaton-details-table/organization-details-table.component\";\r\nimport {OrganizationViewModelService} from \"./services/organization-view-model.service\";\r\nimport {CertificateIssueNewComponent} from \"./components/certificate-issue-new/certificate-issue-new.component\";\r\nimport {ServiceDetailsViewComponent} from \"./components/service-details-view/service-details-view.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NgaModule\r\n  ],\r\n  declarations: [\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    OrganizationDetailsTableComponent,\r\n    CertificateIssueNewComponent,\r\n\t  ServiceDetailsViewComponent\r\n  ],\r\n  exports: [\r\n    OrganizationDetailsTableComponent,\r\n    DesignsTableComponent,\r\n    InstancesTableComponent,\r\n    SpecificationsTableComponent,\r\n    CertificatesTableComponent,\r\n    CertificateIssueNewComponent,\r\n\t  ServiceDetailsViewComponent\r\n  ],\r\n  providers: [\r\n    SrViewModelService,\r\n    CertificateHelperService,\r\n    OrganizationViewModelService\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/pages/shared/shared.module.ts","export interface EnumKeyValue {\r\n\tkey:any;\r\n\tvalue:any;\r\n}\r\n\r\n\r\nexport class EnumsHelper {\r\n\tpublic static getKeysAndValuesFromEnum(myEnum:any):Array<EnumKeyValue> {\r\n\t\tlet enumKeysAndValues:Array<EnumKeyValue> = [];\r\n\t\tlet keysAndValues:Array<any> = [];\r\n\t\tfor (let enumValue in myEnum) {\r\n\t\t\tlet enumsKeysAndValuesLength = keysAndValues.length;\r\n\r\n\t\t\tif (enumsKeysAndValuesLength === 0) {\r\n\t\t\t\tkeysAndValues.push([enumValue, myEnum[enumValue]]);\r\n\t\t\t\tenumKeysAndValues.push({key:enumValue, value: myEnum[enumValue]});\r\n\t\t\t} else {\r\n\t\t\t\tif (keysAndValues[enumsKeysAndValuesLength - 1][1] !== enumValue) {\r\n\t\t\t\t\tkeysAndValues.push([enumValue, myEnum[enumValue]]);\r\n\t\t\t\t\tenumKeysAndValues.push({key:enumValue, value: myEnum[enumValue]});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn enumKeysAndValues;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/shared/enums-helper.ts"],"mappings":";;;;;;AAAA;;;;;;;;;;AAUA;;AAwCA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;;;;;;;;;ACxDA;;;;;;;;;;AAUA;;AAoDA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;;;;;;;;;;ACpEA;AACA;AACA;AAOA;AAAA;AA6CA;AA1CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA7CA;;;;;;;;;;ACTA;AAOA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;;AAAA;AAgDA;AAAA;AA/CA;;;;;;;;;;ACPA;AACA;AACA;AAEA;AACA;AAQA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AA5DA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAwDA;;AAAA;AAvDA;;;;;;;;ACbA;;;;;;;;;ACAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAQA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AArEA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAkEA;;AAAA;AAjEA;;;;;;;;AChBA;;;;;;;;;ACAA;AAMA;AAEA;AACA;AAPA;AAAA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AAAA;AAAA;AAbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAGA;AAGA;AASA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3DA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuDA;;AAAA;AAtDA;;;;;;;;AClBA;;;;;;;;;ACAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAQA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAQA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AA3BA;AADA;AAAA;;AA6BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAjIA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAoIA;;AAAA;AAnIA;;;;;;;;ACtBA;;;;;;;ACAA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAUA;AAAA;AAAA;AAAA;AAAA;AARA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA4DA;;AAAA;AA3DA;;;;;;;;ACdA;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAYA;AAAA;AAAA;AAAA;AAAA;AAVA;AACA;AAIA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsFA;;AAAA;AArFA;;;;;;;;AChBA;;;;;;;;;ACAA;AAUA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAnDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;AAAA;AArDA;;;;;;;;ACVA;;;;;;;;;ACAA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;;AAAA;AAyBA;AAAA;AAxBA;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgCA;AAAA;AACA;AA9BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AAAA;AADA;;;;;;;;;;ACtCA;AAAA;AAmBA;AAlBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnBA;;;;;","sourceRoot":""}