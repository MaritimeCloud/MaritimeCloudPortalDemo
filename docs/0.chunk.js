webpackJsonpac__name_([0],{

/***/ "./src/app/backend-api/identity-registry/autogen/model/Organization.ts":
/***/ function(module, exports) {

"use strict";
/**
 * Maritime Cloud Identity Registry API
 * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@maritimecloud.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
"use strict";
var Organization;
(function (Organization) {
    (function (FederationTypeEnum) {
        FederationTypeEnum[FederationTypeEnum["TestIdp"] = 'test-idp'] = "TestIdp";
        FederationTypeEnum[FederationTypeEnum["OwnIdp"] = 'own-idp'] = "OwnIdp";
        FederationTypeEnum[FederationTypeEnum["ExternalIdp"] = 'external-idp'] = "ExternalIdp";
    })(Organization.FederationTypeEnum || (Organization.FederationTypeEnum = {}));
    var FederationTypeEnum = Organization.FederationTypeEnum;
})(Organization = exports.Organization || (exports.Organization = {}));


/***/ },

/***/ "./src/app/backend-api/identity-registry/autogen/model/Service.ts":
/***/ function(module, exports) {

"use strict";
/**
 * Maritime Cloud Identity Registry API
 * Maritime Cloud Identity Registry API can be used for managing entities in the Maritime Cloud.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@maritimecloud.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
"use strict";
var Service;
(function (Service) {
    (function (OidcAccessTypeEnum) {
        OidcAccessTypeEnum[OidcAccessTypeEnum["Public"] = 'public'] = "Public";
        OidcAccessTypeEnum[OidcAccessTypeEnum["BearerOnly"] = 'bearer-only'] = "BearerOnly";
        OidcAccessTypeEnum[OidcAccessTypeEnum["Confidential"] = 'confidential'] = "Confidential";
    })(Service.OidcAccessTypeEnum || (Service.OidcAccessTypeEnum = {}));
    var OidcAccessTypeEnum = Service.OidcAccessTypeEnum;
})(Service = exports.Service || (exports.Service = {}));


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-details/service-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var ServiceDetailsComponent = (function () {
    function ServiceDetailsComponent(route, servicesService, router, notifications) {
        this.route = route;
        this.servicesService = servicesService;
        this.router = router;
        this.notifications = notifications;
        this.showModal = false;
    }
    ServiceDetailsComponent.prototype.ngOnInit = function () {
        this.loadService();
    };
    ServiceDetailsComponent.prototype.loadService = function () {
        var _this = this;
        this.isLoading = true;
        var mrn = this.route.snapshot.params['id'];
        this.servicesService.getIdService(mrn).subscribe(function (service) {
            _this.service = service;
            _this.title = service.name;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get the service', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceDetailsComponent.prototype.delete = function () {
        this.modalDescription = 'Are you sure you want to delete the service?';
        this.showModal = true;
    };
    ServiceDetailsComponent.prototype.cancelModal = function () {
        this.showModal = false;
    };
    ServiceDetailsComponent.prototype.deleteForSure = function () {
        var _this = this;
        this.isLoading = true;
        this.showModal = false;
        this.servicesService.deleteIdService(this.service.mrn).subscribe(function () {
            _this.router.navigate(['../'], { relativeTo: _this.route });
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to delete the service', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceDetailsComponent = __decorate([
        core_1.Component({
            selector: 'service-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-details/service-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object, (typeof (_d = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _d) || Object])
    ], ServiceDetailsComponent);
    return ServiceDetailsComponent;
    var _a, _b, _c, _d;
}());
exports.ServiceDetailsComponent = ServiceDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-details/service-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <service-details-view [shouldShowDelete]=\"true\" (deleteAction)=\"delete()\" [isLoading]=\"isLoading\" [title]=\"title\" [service]=\"service\"></service-details-view>\r\n  </div>\r\n</div>\r\n<mc-modal (onCancel)=\"cancelModal()\" (onOk)=\"deleteForSure()\" [show]=\"showModal\" [title]=\"'Delete service'\" [description]=\"modalDescription\" [cancelClass]=\"'btn btn-default btn-raised'\" [cancelTitle]=\"'Cancel'\" [okClass]=\"'btn btn-danger btn-raised'\" [okTitle]=\"'Delete'\"></mc-modal>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-list/service-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var rxjs_1 = __webpack_require__("./node_modules/rxjs/Rx.js");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var ServiceListComponent = (function () {
    function ServiceListComponent(authService, router, route, servicesService, orgService, notifications) {
        this.authService = authService;
        this.router = router;
        this.route = route;
        this.servicesService = servicesService;
        this.orgService = orgService;
        this.notifications = notifications;
        this.KEY_NEW = 'KEY_NEW_SERVICE';
    }
    ServiceListComponent.prototype.ngOnInit = function () {
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadServices();
    };
    ServiceListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceListComponent.prototype.loadServices = function () {
        var _this = this;
        this.servicesService.getIdServices().subscribe(function (services) {
            _this.services = services;
            _this.isLoading = false;
            _this.generateEntityImageList();
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get services', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceListComponent.prototype.gotoDetails = function (entityModel) {
        if (entityModel.entityId === this.KEY_NEW) {
            this.gotoCreate();
        }
        else {
            this.router.navigate([entityModel.entityId], { relativeTo: this.route });
        }
    };
    ServiceListComponent.prototype.gotoCreate = function () {
        this.router.navigate(['register'], { relativeTo: this.route });
    };
    ServiceListComponent.prototype.generateEntityImageList = function () {
        var _this = this;
        this.entityImageList = [];
        if (this.services) {
            this.services.forEach(function (service) {
                _this.entityImageList.push({ imageSourceObservable: _this.createImgObservable(service), entityId: service.mrn, title: service.name });
            });
        }
        if (this.authService.authState.isAdmin()) {
            this.entityImageList.push({ imageSourceObservable: null, entityId: this.KEY_NEW, title: 'Register new Service', isAdd: true });
        }
    };
    ServiceListComponent.prototype.createImgObservable = function (service) {
        var imageSrc = 'assets/img/no_service.svg';
        return rxjs_1.Observable.create(function (observer) {
            observer.next(imageSrc);
        });
    };
    ServiceListComponent = __decorate([
        core_1.Component({
            selector: 'service-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-list/service-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _f) || Object])
    ], ServiceListComponent);
    return ServiceListComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.ServiceListComponent = ServiceListComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-list/service-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Services for {{organization?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-entity-image-list [isLoading]=\"isLoading\" [entityImageList]=\"entityImageList\" (onClick)=\"gotoDetails($event)\"></mc-entity-image-list>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-new/service-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/index.js");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var mcFormControlModel_1 = __webpack_require__("./src/app/theme/components/mcForm/mcFormControlModel.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var ServiceViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts");
var url_validator_1 = __webpack_require__("./src/app/theme/validators/url.validator.ts");
var select_validator_1 = __webpack_require__("./src/app/theme/validators/select.validator.ts");
var ServiceNewComponent = (function () {
    function ServiceNewComponent(formBuilder, activatedRoute, navigationService, notifications, orgService, servicesService, mrnHelper) {
        this.formBuilder = formBuilder;
        this.activatedRoute = activatedRoute;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.orgService = orgService;
        this.servicesService = servicesService;
        this.isPrefilled = false;
        // McForm params
        this.useOIDC = false;
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Service";
        this.mrnMask = mrnHelper.mrnMaskForInstance();
        this.mrnPattern = mrnHelper.mrnPattern();
        this.mrnPatternError = mrnHelper.mrnPatternError();
        this.mrn = this.mrnMask;
    }
    ServiceNewComponent.prototype.ngOnInit = function () {
        this.isRegistering = false;
        this.isLoading = true;
        var mrn = this.activatedRoute.snapshot.queryParams['mrn'];
        var name = this.activatedRoute.snapshot.queryParams['name'];
        if (name && mrn) {
            this.isPrefilled = true;
            this.mrn = mrn;
            this.name = name;
        }
        this.loadMyOrganization();
    };
    ServiceNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateService();
    };
    ServiceNewComponent.prototype.register = function () {
        this.isRegistering = true;
        var service = {
            mrn: this.mrn,
            name: this.registerForm.value.name,
            permissions: this.registerForm.value.permissions,
            certDomainName: this.registerForm.value.certDomainName
        };
        if (this.useOIDC) {
            service.oidcRedirectUri = this.registerForm.value.oidcRedirectUri;
            var oidcAccessType = this.registerForm.value.oidcAccessType;
            if (oidcAccessType && oidcAccessType.toLowerCase().indexOf('undefined') < 0) {
                service.oidcAccessType = oidcAccessType;
            }
        }
        else {
            service.oidcAccessType = null;
            service.oidcRedirectUri = null;
        }
        this.createService(service);
    };
    ServiceNewComponent.prototype.createService = function (service) {
        var _this = this;
        this.servicesService.createIdService(service).subscribe(function (service) {
            if (_this.isPrefilled) {
                _this.cancel();
            }
            else {
                _this.navigationService.navigateToService(service.mrn);
            }
            _this.isRegistering = false;
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create service', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            _this.generateForm();
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceNewComponent.prototype.shouldUseOIDC = function (useOIDC) {
        this.useOIDC = useOIDC;
        this.generateForm();
    };
    ServiceNewComponent.prototype.generateMRN = function (idValue) {
        var mrn = (idValue ? idValue : '');
        var valueNoSpaces = mrn.split(' ').join('').toLowerCase();
        this.mrn = this.mrnMask + valueNoSpaces;
        this.registerForm.patchValue({ mrn: this.mrn });
    };
    ServiceNewComponent.prototype.generateForm = function () {
        var _this = this;
        var oldForm = this.registerForm;
        this.registerForm = this.formBuilder.group({});
        if (!oldForm) {
            oldForm = this.registerForm;
        }
        this.formControlModels = [];
        var formControlModel = { formGroup: this.registerForm, elementId: 'mrn', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'MRN', placeholder: '', isDisabled: true };
        var formControl = new forms_1.FormControl(this.mrn, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        if (!this.isPrefilled) {
            formControlModel = { formGroup: this.registerForm, elementId: 'serviceId', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Service ID', placeholder: 'Enter Service ID to generate MRN', validator: forms_1.Validators.required, pattern: this.mrnPattern, errorText: this.mrnPatternError };
            formControl = new forms_1.FormControl('', formControlModel.validator);
            formControl.valueChanges.subscribe(function (param) { return _this.generateMRN(param); });
            this.registerForm.addControl(formControlModel.elementId, formControl);
            this.formControlModels.push(formControlModel);
        }
        if (this.isPrefilled) {
            formControlModel = { formGroup: this.registerForm, elementId: 'name', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Name', placeholder: '', isDisabled: true };
            formControl = new forms_1.FormControl(this.name, formControlModel.validator);
        }
        else {
            formControlModel = { formGroup: this.registerForm, elementId: 'name', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Name', placeholder: 'Name is required', validator: forms_1.Validators.required };
            formControl = new forms_1.FormControl('', formControlModel.validator);
        }
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'permissions', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Permissions', placeholder: '' };
        formControl = new forms_1.FormControl(oldForm.value.permissions, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'certDomainName', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Certificate domain name', placeholder: '' };
        formControl = new forms_1.FormControl(oldForm.value.certDomainName, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        var formControlModelCheckbox = { state: this.useOIDC, formGroup: this.registerForm, elementId: 'useOIDC', controlType: mcFormControlModel_1.McFormControlType.Checkbox, labelName: 'Use OpenID Connect (OIDC)' };
        formControl = new forms_1.FormControl({ value: formControlModelCheckbox.state, disabled: false }, formControlModelCheckbox.validator);
        formControl.valueChanges.subscribe(function (param) { return _this.shouldUseOIDC(param); });
        this.registerForm.addControl(formControlModelCheckbox.elementId, formControl);
        this.formControlModels.push(formControlModelCheckbox);
        if (this.useOIDC) {
            formControlModel = { formGroup: this.registerForm, elementId: 'oidcRedirectUri', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'OIDC Redirect URI', placeholder: '', validator: forms_1.Validators.compose([forms_1.Validators.required, url_validator_1.UrlValidator.validate]), errorText: 'URI not valid' };
            formControl = new forms_1.FormControl('', formControlModel.validator);
            this.registerForm.addControl(formControlModel.elementId, formControl);
            this.formControlModels.push(formControlModel);
            var formControlModelSelect = { selectValues: this.selectValues(), formGroup: this.registerForm, elementId: 'oidcAccessType', controlType: mcFormControlModel_1.McFormControlType.Select, labelName: 'Access type', placeholder: '', validator: select_validator_1.SelectValidator.validate };
            formControl = new forms_1.FormControl('', formControlModelSelect.validator);
            this.registerForm.addControl(formControlModelSelect.elementId, formControl);
            this.formControlModels.push(formControlModelSelect);
        }
    };
    ServiceNewComponent.prototype.selectValues = function () {
        var selectValues = [];
        selectValues.push({ value: undefined, label: 'Choose access type...', isSelected: true });
        var allOidcTypes = ServiceViewModel_1.ServiceViewModel.getAllOidcAccessTypes();
        allOidcTypes.forEach(function (oidcType) {
            selectValues.push({ value: oidcType.value, label: oidcType.label, isSelected: false });
        });
        return selectValues;
    };
    ServiceNewComponent = __decorate([
        core_1.Component({
            selector: 'service-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-new/service-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _c) || Object, (typeof (_d = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _f) || Object, (typeof (_g = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _g) || Object])
    ], ServiceNewComponent);
    return ServiceNewComponent;
    var _a, _b, _c, _d, _e, _f, _g;
}());
exports.ServiceNewComponent = ServiceNewComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-new/service-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Service for {{organization?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-form [formGroup]=\"registerForm\" [formControlModels]=\"formControlModels\" [isLoading]=\"isLoading\" [isRegistering]=\"isRegistering\" [registerTitle]=\"registerTitle\" (onCancel)=\"cancel()\" (onRegister)=\"register()\"></mc-form>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-update/service-update.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/index.js");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var mcFormControlModel_1 = __webpack_require__("./src/app/theme/components/mcForm/mcFormControlModel.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var Service_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/Service.ts");
var ServiceViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts");
var url_validator_1 = __webpack_require__("./src/app/theme/validators/url.validator.ts");
var select_validator_1 = __webpack_require__("./src/app/theme/validators/select.validator.ts");
var OidcAccessTypeEnum = Service_1.Service.OidcAccessTypeEnum;
var ServiceUpdateComponent = (function () {
    function ServiceUpdateComponent(formBuilder, activatedRoute, navigationService, notifications, servicesService, mrnHelper) {
        this.formBuilder = formBuilder;
        this.activatedRoute = activatedRoute;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.servicesService = servicesService;
        this.showModal = false;
        // McForm params
        this.useOIDC = false;
        this.isLoading = true;
        this.isUpdating = false;
        this.updateTitle = "Update";
    }
    ServiceUpdateComponent.prototype.ngOnInit = function () {
        this.isUpdating = false;
        this.isLoading = true;
        this.loadIdService();
    };
    ServiceUpdateComponent.prototype.loadIdService = function () {
        var _this = this;
        var mrn = this.activatedRoute.snapshot.params['id'];
        this.servicesService.getIdService(mrn).subscribe(function (idService) {
            _this.idService = idService;
            _this.useOIDC = _this.idService.oidcRedirectUri && _this.idService.oidcRedirectUri.length > 0;
            _this.generateForm();
            _this.isLoading = false;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get the service', mc_notifications_service_1.MCNotificationType.Error, err);
            _this.navigationService.navigateToVessel(mrn);
        });
    };
    ServiceUpdateComponent.prototype.cancel = function () {
        this.navigationService.gobackFromUpdateService();
    };
    ServiceUpdateComponent.prototype.update = function () {
        if (this.hasActiveCertificate()) {
            this.modalDescription = "<b>Certificates</b> will be <b>invalid</b> if you update the service.<br>You need to revoke the certificates and issue new ones.<br><br>Would you still like to update?";
            this.showModal = true;
        }
        else {
            this.updateForSure();
        }
    };
    ServiceUpdateComponent.prototype.hasActiveCertificate = function () {
        if (this.idService.certificates && this.idService.certificates.length > 0) {
            for (var _i = 0, _a = this.idService.certificates; _i < _a.length; _i++) {
                var certificate = _a[_i];
                if (!certificate.revoked) {
                    return true;
                }
            }
        }
        return false;
    };
    ServiceUpdateComponent.prototype.cancelModal = function () {
        this.showModal = false;
    };
    ServiceUpdateComponent.prototype.updateForSure = function () {
        this.isUpdating = true;
        this.updateValues(true);
        this.updateIdService(this.idService);
    };
    ServiceUpdateComponent.prototype.updateValues = function (overwriteOidc) {
        this.idService.name = this.updateForm.value.name;
        this.idService.permissions = this.updateForm.value.permissions;
        this.idService.certDomainName = this.updateForm.value.certDomainName;
        if (overwriteOidc) {
            if (this.useOIDC) {
                this.idService.oidcRedirectUri = this.updateForm.value.oidcRedirectUri;
                var oidcAccessType = this.updateForm.value.oidcAccessType;
                if (oidcAccessType && oidcAccessType.toLowerCase().indexOf('undefined') < 0) {
                    this.idService.oidcAccessType = oidcAccessType;
                }
                else {
                    this.idService.oidcAccessType = null;
                }
            }
            else {
                this.idService.oidcAccessType = null;
                this.idService.oidcRedirectUri = null;
                this.idService.oidcClientId = null;
                this.idService.oidcClientSecret = null;
            }
        }
    };
    ServiceUpdateComponent.prototype.updateIdService = function (service) {
        var _this = this;
        this.servicesService.updateIdService(service).subscribe(function (_) {
            _this.isUpdating = false;
            _this.navigationService.gobackFromUpdateService();
        }, function (err) {
            _this.isUpdating = false;
            _this.notifications.generateNotification('Error', 'Error when trying to update service', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceUpdateComponent.prototype.shouldUseOIDC = function (useOIDC) {
        this.useOIDC = useOIDC;
        this.updateValues(false);
        this.generateForm();
    };
    ServiceUpdateComponent.prototype.generateForm = function () {
        var _this = this;
        this.updateForm = this.formBuilder.group({});
        this.formControlModels = [];
        var formControlModel = { formGroup: this.updateForm, elementId: 'mrn', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'MRN', placeholder: '', isDisabled: true };
        var formControl = new forms_1.FormControl(this.idService.mrn, formControlModel.validator);
        this.updateForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.updateForm, elementId: 'name', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Name', placeholder: '', isDisabled: true };
        formControl = new forms_1.FormControl(this.idService.name, formControlModel.validator);
        this.updateForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.updateForm, elementId: 'permissions', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Permissions', placeholder: '' };
        formControl = new forms_1.FormControl(this.idService.permissions, formControlModel.validator);
        this.updateForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.updateForm, elementId: 'certDomainName', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Certificate domain name', placeholder: '' };
        formControl = new forms_1.FormControl(this.idService.certDomainName, formControlModel.validator);
        this.updateForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        var formControlModelCheckbox = { state: this.useOIDC, formGroup: this.updateForm, elementId: 'useOIDC', controlType: mcFormControlModel_1.McFormControlType.Checkbox, labelName: 'Use OpenID Connect (OIDC)' };
        formControl = new forms_1.FormControl({ value: "\"" + formControlModelCheckbox.state + "\"", disabled: false }, formControlModelCheckbox.validator);
        formControl.valueChanges.subscribe(function (param) { return _this.shouldUseOIDC(param); });
        this.updateForm.addControl(formControlModelCheckbox.elementId, formControl);
        this.formControlModels.push(formControlModelCheckbox);
        if (this.useOIDC) {
            formControlModel = { formGroup: this.updateForm, elementId: 'oidcRedirectUri', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'OIDC Redirect URI', placeholder: '', validator: forms_1.Validators.compose([forms_1.Validators.required, url_validator_1.UrlValidator.validate]), errorText: 'URI not valid' };
            formControl = new forms_1.FormControl(this.idService.oidcRedirectUri, formControlModel.validator);
            this.updateForm.addControl(formControlModel.elementId, formControl);
            this.formControlModels.push(formControlModel);
            var selectValues = this.selectValues();
            var formControlModelSelect = { selectValues: selectValues, formGroup: this.updateForm, elementId: 'oidcAccessType', controlType: mcFormControlModel_1.McFormControlType.Select, labelName: 'Access type', placeholder: '', validator: select_validator_1.SelectValidator.validate };
            formControl = new forms_1.FormControl(this.selectedValue(selectValues), formControlModelSelect.validator);
            this.updateForm.addControl(formControlModelSelect.elementId, formControl);
            this.formControlModels.push(formControlModelSelect);
        }
    };
    ServiceUpdateComponent.prototype.selectedValue = function (selectValues) {
        for (var _i = 0, selectValues_1 = selectValues; _i < selectValues_1.length; _i++) {
            var selectModel = selectValues_1[_i];
            if (selectModel.isSelected) {
                return selectModel.value;
            }
        }
        return '';
    };
    ServiceUpdateComponent.prototype.selectValues = function () {
        var _this = this;
        var selectValues = [];
        selectValues.push({ value: undefined, label: 'Choose access type...', isSelected: this.idService.oidcAccessType == null });
        var allOidcTypes = ServiceViewModel_1.ServiceViewModel.getAllOidcAccessTypes();
        allOidcTypes.forEach(function (oidcType) {
            var isSelected = OidcAccessTypeEnum[oidcType.value] === OidcAccessTypeEnum[_this.idService.oidcAccessType];
            selectValues.push({ value: oidcType.value, label: oidcType.label, isSelected: isSelected });
        });
        return selectValues;
    };
    ServiceUpdateComponent = __decorate([
        core_1.Component({
            selector: 'service-update',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-update/service-update.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _c) || Object, (typeof (_d = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _d) || Object, (typeof (_e = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _e) || Object, (typeof (_f = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _f) || Object])
    ], ServiceUpdateComponent);
    return ServiceUpdateComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.ServiceUpdateComponent = ServiceUpdateComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/components/service-update/service-update.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Update - {{idService?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-form [formNeedsUpdating]=\"true\" [formGroup]=\"updateForm\" [formControlModels]=\"formControlModels\" [isLoading]=\"isLoading\" [isRegistering]=\"isUpdating\" [registerTitle]=\"updateTitle\" (onCancel)=\"cancel()\" (onRegister)=\"update()\"></mc-form>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n<mc-modal (onCancel)=\"cancelModal()\" (onOk)=\"updateForSure()\" [show]=\"showModal\" [title]=\"'Update service'\" [description]=\"modalDescription\" [cancelClass]=\"'btn btn-default btn-raised'\" [cancelTitle]=\"'Cancel'\" [okClass]=\"'btn btn-danger btn-raised'\" [okTitle]=\"'Update'\"></mc-modal>\r\n"

/***/ },

/***/ "./src/app/pages/org-identity-registry/services/services.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var ServicesComponent = (function () {
    function ServicesComponent() {
    }
    ServicesComponent = __decorate([
        core_1.Component({
            selector: 'services',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], ServicesComponent);
    return ServicesComponent;
}());
exports.ServicesComponent = ServicesComponent;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/services.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var services_routing_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/services.routing.ts");
var services_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/services.component.ts");
var service_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-list/service-list.component.ts");
var service_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-details/service-details.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var service_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-new/service-new.component.ts");
var service_update_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-update/service-update.component.ts");
var ServicesModule = (function () {
    function ServicesModule() {
    }
    ServicesModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                shared_module_1.SharedModule,
                services_routing_1.routing
            ],
            declarations: [
                services_component_1.ServicesComponent,
                service_details_component_1.ServiceDetailsComponent,
                service_list_component_1.ServiceListComponent,
                service_new_component_1.ServiceNewComponent,
                service_update_component_1.ServiceUpdateComponent
            ],
            exports: [
                service_new_component_1.ServiceNewComponent,
                service_update_component_1.ServiceUpdateComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], ServicesModule);
    return ServicesModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ServicesModule;


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/services.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var services_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/services.component.ts");
var service_list_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-list/service-list.component.ts");
var service_details_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-details/service-details.component.ts");
var service_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-new/service-new.component.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
var service_update_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-update/service-update.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: 'services',
        component: services_component_1.ServicesComponent,
        data: { breadcrumb: 'Services' },
        children: [
            {
                path: '',
                component: service_list_component_1.ServiceListComponent
            },
            {
                path: 'issuecert',
                component: certificate_issue_new_component_1.CertificateIssueNewComponent,
                data: { breadcrumb: 'New Certificate' },
                children: []
            },
            {
                path: 'register',
                component: service_new_component_1.ServiceNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: ':id',
                component: service_details_component_1.ServiceDetailsComponent,
                data: { breadcrumb: 'Details' }
            },
            {
                path: 'update/:id',
                component: service_update_component_1.ServiceUpdateComponent,
                data: { breadcrumb: 'Update' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var enums_helper_1 = __webpack_require__("./src/app/shared/enums-helper.ts");
var Service_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/Service.ts");
var OidcAccessTypeEnum = Service_1.Service.OidcAccessTypeEnum;
var ServiceViewModel = (function () {
    function ServiceViewModel() {
    }
    ServiceViewModel.getAllOidcAccessTypes = function () {
        var models = [];
        var keysAndValues = enums_helper_1.EnumsHelper.getKeysAndValuesFromEnum(OidcAccessTypeEnum);
        keysAndValues.forEach(function (enumKeyAndValue) {
            var model = {};
            model.value = enumKeyAndValue.value;
            model.label = ServiceViewModel.getLabelForEnum(enumKeyAndValue.value);
            models.push(model);
        });
        return models;
    };
    ServiceViewModel.getLabelForEnum = function (oidcAccessTypeEnum) {
        if (!oidcAccessTypeEnum) {
            return '';
        }
        var text = '';
        switch (oidcAccessTypeEnum) {
            case OidcAccessTypeEnum.BearerOnly: {
                text = 'Bearer only';
                break;
            }
            case OidcAccessTypeEnum.Confidential: {
                text = 'Confidential';
                break;
            }
            case OidcAccessTypeEnum.Public: {
                text = 'Public';
                break;
            }
            default: {
                text = OidcAccessTypeEnum[oidcAccessTypeEnum];
                if (!text) {
                    text = '' + oidcAccessTypeEnum;
                }
            }
        }
        return text;
    };
    return ServiceViewModel;
}());
exports.ServiceViewModel = ServiceViewModel;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-details/design-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var specifications_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/specifications.service.ts");
var instances_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/instances.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var DesignDetailsComponent = (function () {
    function DesignDetailsComponent(authService, route, router, viewModelService, navigationHelperService, instancesService, specificationsService, notifications, designsService, fileHelperService) {
        this.authService = authService;
        this.route = route;
        this.router = router;
        this.viewModelService = viewModelService;
        this.navigationHelperService = navigationHelperService;
        this.instancesService = instancesService;
        this.specificationsService = specificationsService;
        this.notifications = notifications;
        this.designsService = designsService;
        this.fileHelperService = fileHelperService;
        this.showModal = false;
    }
    DesignDetailsComponent.prototype.ngOnInit = function () {
        this.onCreate = this.createInstance.bind(this);
        this.onGotoSpec = this.gotoSpecification.bind(this);
        this.onGotoInstance = this.gotoInstance.bind(this);
        this.isLoadingDesign = true;
        this.isLoadingInstances = true;
        this.title = 'Loading ...';
        this.loadDesign();
    };
    DesignDetailsComponent.prototype.downloadXml = function () {
        this.fileHelperService.downloadXml(this.design.designAsXml);
    };
    DesignDetailsComponent.prototype.downloadDoc = function () {
        this.fileHelperService.downloadDoc(this.design.designAsDoc);
    };
    DesignDetailsComponent.prototype.loadDesign = function () {
        var _this = this;
        var designId = this.route.snapshot.params['id'];
        var version = this.route.snapshot.queryParams['designVersion'];
        this.designsService.getDesign(designId, version).subscribe(function (design) {
            _this.title = design.name;
            _this.design = design;
            _this.labelValues = _this.viewModelService.generateLabelValuesForDesign(_this.design);
            _this.generateLabelValuesForSpecification();
            _this.isLoadingDesign = false;
            _this.loadInstances();
        }, function (err) {
            // TODO: make this as a general component
            if (err.status == 404) {
                _this.router.navigate(['/error404'], { relativeTo: _this.route, replaceUrl: true });
            }
            _this.title = 'Error while loading';
            _this.isLoadingDesign = false;
            _this.isLoadingInstances = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get design', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignDetailsComponent.prototype.loadInstances = function () {
        var _this = this;
        this.instancesService.getInstancesForDesign(this.design.designId, this.design.version).subscribe(function (instances) {
            _this.instances = instances;
            _this.isLoadingInstances = false;
        }, function (err) {
            _this.isLoadingInstances = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get instances', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignDetailsComponent.prototype.generateLabelValuesForSpecification = function () {
        var _this = this;
        if (this.design.specifications && this.design.specifications.length > 0) {
            var plur = (this.design.specifications.length > 1 ? 's' : '');
            var label = 'Implemented specification' + plur;
            this.design.specifications.forEach(function (specification) {
                _this.labelValues.push({ label: label, valueHtml: specification.name + " - " + specification.version, linkFunction: _this.onGotoSpec, linkValue: [specification.specificationId, specification.version] });
                label = "";
            });
        }
    };
    DesignDetailsComponent.prototype.createInstance = function () {
        this.navigationHelperService.navigateToCreateInstance(this.design.designId, this.design.version);
    };
    DesignDetailsComponent.prototype.gotoSpecification = function (linkValue) {
        try {
            this.navigationHelperService.navigateToOrgSpecification(linkValue[0], linkValue[1]);
        }
        catch (error) {
            this.notifications.generateNotification('Error', 'Error when trying to go to specification', mc_notifications_service_1.MCNotificationType.Error, error);
        }
    };
    DesignDetailsComponent.prototype.gotoInstance = function (index) {
        this.navigationHelperService.navigateToOrgInstance(this.instances[index].instanceId, this.instances[index].version);
    };
    DesignDetailsComponent.prototype.isMyOrg = function () {
        return this.design.organizationId === this.authService.authState.orgMrn;
    };
    DesignDetailsComponent.prototype.isAdmin = function () {
        return (this.authService.authState.isAdmin() && this.isMyOrg()) || this.authService.authState.isSiteAdmin();
    };
    DesignDetailsComponent.prototype.shouldDisplayDelete = function () {
        return this.isAdmin() && !this.isLoadingInstances && !this.hasInstances();
    };
    DesignDetailsComponent.prototype.hasInstances = function () {
        return this.instances && this.instances.length > 0;
    };
    DesignDetailsComponent.prototype.delete = function () {
        this.modalDescription = 'Do you want to delete the design?';
        this.showModal = true;
    };
    DesignDetailsComponent.prototype.cancelModal = function () {
        this.showModal = false;
    };
    DesignDetailsComponent.prototype.deleteForSure = function () {
        var _this = this;
        this.isLoadingDesign = true;
        this.showModal = false;
        this.designsService.deleteDesign(this.design).subscribe(function () {
            _this.navigationHelperService.navigateToOrgDesign('', '');
        }, function (err) {
            _this.isLoadingDesign = false;
            _this.notifications.generateNotification('Error', 'Error when trying to delete design', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignDetailsComponent = __decorate([
        core_1.Component({
            selector: 'design-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-details/design-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object, (typeof (_d = typeof sr_view_model_service_1.SrViewModelService !== 'undefined' && sr_view_model_service_1.SrViewModelService) === 'function' && _d) || Object, (typeof (_e = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _e) || Object, (typeof (_f = typeof instances_service_1.InstancesService !== 'undefined' && instances_service_1.InstancesService) === 'function' && _f) || Object, (typeof (_g = typeof specifications_service_1.SpecificationsService !== 'undefined' && specifications_service_1.SpecificationsService) === 'function' && _g) || Object, (typeof (_h = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _h) || Object, (typeof (_j = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _j) || Object, (typeof (_k = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _k) || Object])
    ], DesignDetailsComponent);
    return DesignDetailsComponent;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
}());
exports.DesignDetailsComponent = DesignDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-details/design-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-label-value-table [isLoading]=\"isLoadingDesign\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n      <ul *ngIf=\"design && !isLoadingDesign\" class=\"btn-list clearfix\">\r\n        <li *ngIf=\"design.designAsDoc\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadDoc()\">Download document</button>\r\n        </li>\r\n        <li *ngIf=\"design.designAsXml\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadXml()\">Download XML</button>\r\n        </li>\r\n        <li *ngIf=\"shouldDisplayDelete()\">\r\n          <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"delete()\">Delete Design</button>\r\n        </li>\r\n      </ul>\r\n      <div class=\"separator\"></div>\r\n\r\n      <h5>Instances that implements this Design</h5>\r\n      <instances-table [instances]=\"instances\" [isLoading]=\"isLoadingInstances\" [onRowClick]=\"onGotoInstance\"></instances-table>\r\n      <mc-create-button *ngIf=\"!isLoadingInstances\" title=\"Register new Instance\" [onClick]=\"onCreate\" ></mc-create-button>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n<mc-modal (onCancel)=\"cancelModal()\" (onOk)=\"deleteForSure()\" [show]=\"showModal\" [title]=\"'Delete design'\" [description]=\"modalDescription\" [cancelClass]=\"'btn btn-default btn-raised'\" [cancelTitle]=\"'Cancel'\" [okClass]=\"'btn btn-danger btn-raised'\" [okTitle]=\"'Delete'\"></mc-modal>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-list/design-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var DesignListComponent = (function () {
    function DesignListComponent(route, router, notifications, orgService, designsService) {
        this.route = route;
        this.router = router;
        this.notifications = notifications;
        this.orgService = orgService;
        this.designsService = designsService;
    }
    DesignListComponent.prototype.ngOnInit = function () {
        this.cardTitle = 'Loading ...';
        this.onGotoDesign = this.gotoDesign.bind(this);
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadDesigns();
    };
    DesignListComponent.prototype.loadDesigns = function () {
        var _this = this;
        this.designsService.getAllDesigns().subscribe(function (designs) {
            _this.designs = designs;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get designs', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            //this.cardTitle = 'Designs for ' + organization.name;
            _this.cardTitle = 'All Designs';
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignListComponent.prototype.gotoDesign = function (index) {
        this.router.navigate([this.designs[index].designId], { queryParams: { designVersion: this.designs[index].version }, relativeTo: this.route });
    };
    DesignListComponent = __decorate([
        core_1.Component({
            selector: 'design-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-list/design-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _c) || Object, (typeof (_d = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _d) || Object, (typeof (_e = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _e) || Object])
    ], DesignListComponent);
    return DesignListComponent;
    var _a, _b, _c, _d, _e;
}());
exports.DesignListComponent = DesignListComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-list/design-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{cardTitle}}\" baCardClass=\"with-scroll table-panel\">\r\n      <designs-table [designs]=\"designs\" [isLoading]=\"isLoading\" [onRowClick]=\"onGotoDesign\"></designs-table>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-new/design-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mcFileUploader_component_1 = __webpack_require__("./src/app/theme/components/mcFileUploader/mcFileUploader.component.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var specifications_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/specifications.service.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var design_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/design-xml-parser.service.ts");
var DesignNewComponent = (function () {
    function DesignNewComponent(xmlParser, mrnHelper, activatedRoute, xmlParserService, viewModelService, navigationService, notifications, designsService, orgService, specificationsService) {
        this.xmlParser = xmlParser;
        this.mrnHelper = mrnHelper;
        this.activatedRoute = activatedRoute;
        this.xmlParserService = xmlParserService;
        this.viewModelService = viewModelService;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.designsService = designsService;
        this.orgService = orgService;
        this.specificationsService = specificationsService;
        this.hasMrnError = false;
        this.captionXml = 'Upload Design Xml file';
        this.captionDoc = 'Upload Design Document file';
        this.fileTypeXml = mcFileUploader_component_1.FileUploadType.Xml;
        this.fileTypeDoc = mcFileUploader_component_1.FileUploadType.Doc;
        this.requiredTextXml = 'You need to upload Xml file';
        this.isFormValid = false;
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Design";
        this.registerButtonClass = "btn btn-danger btn-raised";
    }
    DesignNewComponent.prototype.ngOnInit = function () {
        this.onRegister = this.register.bind(this);
        this.isRegistering = false;
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadSpecification();
    };
    DesignNewComponent.prototype.calculateFormValid = function () {
        this.isFormValid = this.xml != null;
    };
    DesignNewComponent.prototype.onUploadDoc = function (file) {
        this.doc = file;
        this.calculateFormValid();
    };
    DesignNewComponent.prototype.onUploadXml = function (file) {
        if (file && this.isXmlValid(file)) {
            this.xml = file;
        }
        else {
            this.xml = null;
            this.fileUploadXml.resetFileSelection();
        }
        this.calculateFormValid();
    };
    DesignNewComponent.prototype.isXmlValid = function (file) {
        try {
            var mrn = this.xmlParser.getMrn(file);
            var isValid = this.mrnHelper.checkMrnForDesign(mrn);
            this.hasMrnError = !isValid;
            if (!isValid) {
                this.mrnErrorText = "The ID in the Xml-file is wrong. The ID is supposed to be an MRN in the following format:<BR>"
                    + this.mrnHelper.mrnMaskForDesign() + "'ID'<BR>"
                    + "'ID'=" + this.mrnHelper.mrnPatternError();
            }
            return isValid;
        }
        catch (error) {
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
            return false;
        }
    };
    DesignNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateDesign();
    };
    DesignNewComponent.prototype.register = function () {
        this.isRegistering = true;
        try {
            var design = {};
            design.designAsXml = this.xml;
            design.designAsDoc = this.doc;
            design.name = this.xmlParser.getName(this.xml);
            design.description = this.xmlParser.getDescription(this.xml);
            design.designId = this.xmlParser.getMrn(this.xml);
            design.status = this.xmlParser.getStatus(this.xml);
            design.organizationId = this.organization.mrn;
            design.version = this.xmlParser.getVersion(this.xml);
            design.specifications = [this.specification];
            this.createDesign(design);
        }
        catch (error) {
            this.isRegistering = false;
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
        }
    };
    DesignNewComponent.prototype.createDesign = function (design) {
        var _this = this;
        this.designsService.createDesign(design).subscribe(function (design) {
            _this.navigationService.navigateToOrgDesign(design.designId, design.version);
            _this.isRegistering = false;
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create design', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            _this.calculateFormValid();
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    DesignNewComponent.prototype.loadSpecification = function () {
        var _this = this;
        var specificationId = this.activatedRoute.snapshot.queryParams['specificationId'];
        var version = this.activatedRoute.snapshot.queryParams['specificationVersion'];
        this.specificationsService.getSpecification(specificationId, version).subscribe(function (specification) {
            _this.specification = specification;
            _this.labelValues = _this.viewModelService.generateLabelValuesForSpecification(_this.specification);
            _this.calculateFormValid();
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get specification', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    __decorate([
        core_1.ViewChild('uploadXml'), 
        __metadata('design:type', (typeof (_a = typeof mcFileUploader_component_1.McFileUploader !== 'undefined' && mcFileUploader_component_1.McFileUploader) === 'function' && _a) || Object)
    ], DesignNewComponent.prototype, "fileUploadXml", void 0);
    DesignNewComponent = __decorate([
        core_1.Component({
            selector: 'design-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-new/design-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof design_xml_parser_service_1.DesignXmlParser !== 'undefined' && design_xml_parser_service_1.DesignXmlParser) === 'function' && _b) || Object, (typeof (_c = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _c) || Object, (typeof (_d = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _d) || Object, (typeof (_e = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _e) || Object, (typeof (_f = typeof sr_view_model_service_1.SrViewModelService !== 'undefined' && sr_view_model_service_1.SrViewModelService) === 'function' && _f) || Object, (typeof (_g = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _g) || Object, (typeof (_h = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _h) || Object, (typeof (_j = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _j) || Object, (typeof (_k = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _k) || Object, (typeof (_l = typeof specifications_service_1.SpecificationsService !== 'undefined' && specifications_service_1.SpecificationsService) === 'function' && _l) || Object])
    ], DesignNewComponent);
    return DesignNewComponent;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
}());
exports.DesignNewComponent = DesignNewComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/components/design-new/design-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Design for {{organization?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <h5 *ngIf=\"specification\">Registering a design for this specification</h5>\r\n      <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <div *ngIf=\"specification\">\r\n        <form>\r\n          <mc-file-uploader #uploadXml [caption]=\"captionXml\" [fileUploadType]=\"fileTypeXml\" [requiredText]=\"requiredTextXml\" (onUpload)=\"onUploadXml($event)\"></mc-file-uploader>\r\n          <mc-file-uploader [caption]=\"captionDoc\" [fileUploadType]=\"fileTypeDoc\" (onUpload)=\"onUploadDoc($event)\"></mc-file-uploader>\r\n          <div *ngIf=\"hasMrnError\" class=\"mc-form-error\" [innerHTML]=\"mrnErrorText | undefined | sanitizeHtml\"></div>\r\n          <ul class=\"btn-list clearfix\">\r\n            <li>\r\n              <mc-loading-button [class]=\"registerButtonClass\" [disabled]=\"!isFormValid\" [isLoading]=\"isRegistering\" [title]=\"registerTitle\" [onClick]=\"onRegister\" ></mc-loading-button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n      <div class=\"no-data\" *ngIf=\"!specification && !isLoading\">No data</div>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/designs/designs.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var DesignsComponent = (function () {
    function DesignsComponent() {
    }
    DesignsComponent = __decorate([
        core_1.Component({
            selector: 'designs',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], DesignsComponent);
    return DesignsComponent;
}());
exports.DesignsComponent = DesignsComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/designs.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var designs_routing_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/designs.routing.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var designs_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/designs.component.ts");
var design_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-list/design-list.component.ts");
var design_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-details/design-details.component.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var design_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-new/design-new.component.ts");
var DesignsModule = (function () {
    function DesignsModule() {
    }
    DesignsModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                shared_module_1.SharedModule,
                designs_routing_1.routing
            ],
            declarations: [
                designs_component_1.DesignsComponent,
                design_list_component_1.DesignListComponent,
                design_details_component_1.DesignDetailsComponent,
                design_new_component_1.DesignNewComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], DesignsModule);
    return DesignsModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DesignsModule;


/***/ },

/***/ "./src/app/pages/org-service-registry/designs/designs.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var designs_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/designs.component.ts");
var design_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-list/design-list.component.ts");
var design_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-details/design-details.component.ts");
var design_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/components/design-new/design-new.component.ts");
// noinspection TypeScriptValidateTypes
exports.designRoutes = [
    {
        path: 'designs',
        component: designs_component_1.DesignsComponent,
        data: { breadcrumb: 'Designs' },
        children: [
            {
                path: '',
                component: design_list_component_1.DesignListComponent
            },
            {
                path: 'register',
                component: design_new_component_1.DesignNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: ':id',
                component: design_details_component_1.DesignDetailsComponent,
                data: { breadcrumb: 'Details' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(exports.designRoutes);


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var instances_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/instances.service.ts");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var docs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/docs.service.ts");
var InstanceDetailsComponent = (function () {
    function InstanceDetailsComponent(servicesService, authService, route, router, viewModelService, navigationHelperService, instancesService, notifications, designsService, fileHelperService, mrnHelper, docsService) {
        this.servicesService = servicesService;
        this.authService = authService;
        this.route = route;
        this.router = router;
        this.viewModelService = viewModelService;
        this.navigationHelperService = navigationHelperService;
        this.instancesService = instancesService;
        this.notifications = notifications;
        this.designsService = designsService;
        this.fileHelperService = fileHelperService;
        this.mrnHelper = mrnHelper;
        this.docsService = docsService;
        this.showModal = false;
        this.shouldDisplayIdService = false;
        this.shouldDisplayCreateButton = false;
        this.showUpdateIdService = false;
    }
    InstanceDetailsComponent.prototype.ngOnInit = function () {
        this.onGotoDesign = this.gotoDesign.bind(this);
        this.shouldDisplayCreateButton = false;
        this.isLoadingInstance = true;
        this.isLoadingIdService = true;
        this.title = 'Loading ...';
        this.titleIdService = 'ID information';
        this.loadInstance();
    };
    InstanceDetailsComponent.prototype.downloadXml = function () {
        this.fileHelperService.downloadXml(this.instance.instanceAsXml);
    };
    InstanceDetailsComponent.prototype.downloadDoc = function () {
        this.fileHelperService.downloadDoc(this.instance.instanceAsDoc);
    };
    InstanceDetailsComponent.prototype.createIdService = function () {
        this.navigationHelperService.navigateToCreateIdService(this.instance.instanceId, this.instance.name);
    };
    InstanceDetailsComponent.prototype.isMyOrg = function () {
        return this.instance.organizationId === this.authService.authState.orgMrn;
    };
    InstanceDetailsComponent.prototype.loadInstance = function () {
        var _this = this;
        var instanceId = this.route.snapshot.params['id'];
        var version = this.route.snapshot.queryParams['instanceVersion'];
        this.instancesService.getInstance(instanceId, version).subscribe(function (instance) {
            _this.title = instance.name;
            _this.instance = instance;
            _this.loadDesign();
        }, function (err) {
            // TODO: make this as a general component
            if (err.status == 404) {
                _this.router.navigate(['/error404'], { relativeTo: _this.route, replaceUrl: true });
            }
            _this.title = 'Error while loading';
            _this.isLoadingInstance = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get instance', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceDetailsComponent.prototype.loadIdService = function (mrn) {
        var _this = this;
        this.servicesService.getIdService(mrn).subscribe(function (service) {
            _this.idService = service;
            _this.showUpdateIdService = (_this.isMyOrg() && _this.isAdmin()) || _this.authService.authState.isSiteAdmin();
            _this.isLoadingIdService = false;
        }, function (err) {
            if (err.status == 404) {
                _this.shouldDisplayIdService = false;
                _this.shouldDisplayCreateButton = _this.isAdmin();
            }
            else {
                _this.notifications.generateNotification('Error', 'Error when trying to get the service', mc_notifications_service_1.MCNotificationType.Error, err);
            }
            _this.isLoadingIdService = false;
        });
    };
    InstanceDetailsComponent.prototype.loadDesign = function () {
        var _this = this;
        this.designsService.getDesignForInstance(this.instance).subscribe(function (design) {
            _this.design = design;
            _this.labelValues = _this.viewModelService.generateLabelValuesForInstance(_this.instance);
            _this.generateLabelValueForDesign();
            _this.isLoadingInstance = false;
            if (_this.isMyOrg() || _this.authService.authState.isSiteAdmin()) {
                _this.shouldDisplayIdService = true;
                _this.loadIdService(_this.instance.instanceId);
            }
        }, function (err) {
            _this.isLoadingInstance = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get design', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceDetailsComponent.prototype.generateLabelValueForDesign = function () {
        if (this.design) {
            var label = 'Implemented design';
            this.labelValues.push({ label: label, valueHtml: this.design.name + " - " + this.design.version, linkFunction: this.onGotoDesign, linkValue: [this.design.designId, this.design.version] });
        }
    };
    InstanceDetailsComponent.prototype.updateIdService = function () {
        this.navigationHelperService.navigateToUpdateIdService(this.idService.mrn);
    };
    InstanceDetailsComponent.prototype.gotoDesign = function (linkValue) {
        try {
            this.navigationHelperService.navigateToOrgDesign(linkValue[0], linkValue[1]);
        }
        catch (error) {
            this.notifications.generateNotification('Error', 'Error when trying to go to instance', mc_notifications_service_1.MCNotificationType.Error, error);
        }
    };
    InstanceDetailsComponent.prototype.isAdmin = function () {
        return (this.authService.authState.isAdmin() && this.isMyOrg()) || this.authService.authState.isSiteAdmin();
    };
    InstanceDetailsComponent.prototype.showDelete = function () {
        return this.isAdmin();
    };
    InstanceDetailsComponent.prototype.delete = function () {
        this.modalDescription = 'Do you want to delete the instance?';
        this.showModal = true;
    };
    InstanceDetailsComponent.prototype.cancelModal = function () {
        this.showModal = false;
    };
    InstanceDetailsComponent.prototype.deleteForSure = function () {
        var _this = this;
        this.isLoadingInstance = true;
        this.showModal = false;
        this.instancesService.deleteInstance(this.instance).subscribe(function () {
            _this.deleteIdService();
        }, function (err) {
            _this.isLoadingInstance = false;
            _this.notifications.generateNotification('Error', 'Error when trying to delete instance', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceDetailsComponent.prototype.deleteIdService = function () {
        var _this = this;
        if (this.idService) {
            this.servicesService.deleteIdService(this.idService.mrn).subscribe(function () {
                _this.navigationHelperService.navigateToOrgInstance('', '');
            }, function (err) {
                _this.navigationHelperService.navigateToOrgInstance('', '');
            });
        }
        else {
            this.navigationHelperService.navigateToOrgInstance('', '');
        }
    };
    InstanceDetailsComponent = __decorate([
        core_1.Component({
            selector: 'instance-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _a) || Object, (typeof (_b = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _d) || Object, (typeof (_e = typeof sr_view_model_service_1.SrViewModelService !== 'undefined' && sr_view_model_service_1.SrViewModelService) === 'function' && _e) || Object, (typeof (_f = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _f) || Object, (typeof (_g = typeof instances_service_1.InstancesService !== 'undefined' && instances_service_1.InstancesService) === 'function' && _g) || Object, (typeof (_h = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _h) || Object, (typeof (_j = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _j) || Object, (typeof (_k = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _k) || Object, (typeof (_l = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _l) || Object, (typeof (_m = typeof docs_service_1.DocsService !== 'undefined' && docs_service_1.DocsService) === 'function' && _m) || Object])
    ], InstanceDetailsComponent);
    return InstanceDetailsComponent;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
}());
exports.InstanceDetailsComponent = InstanceDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-label-value-table [isLoading]=\"isLoadingInstance\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n      <ul *ngIf=\"instance && !isLoadingInstance\" class=\"btn-list clearfix\">\r\n        <li *ngIf=\"instance.instanceAsDoc\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadDoc()\">Download document</button>\r\n        </li>\r\n        <li *ngIf=\"instance.instanceAsXml\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadXml()\">Download XML</button>\r\n        </li>\r\n        <li *ngIf=\"showDelete()\">\r\n          <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"delete()\">Delete Instance</button>\r\n        </li>\r\n      </ul>\r\n    </ba-card>\r\n\r\n    <div *ngIf=\"shouldDisplayIdService\">\r\n      <service-details-view [shouldShowUpdate]=\"showUpdateIdService\" (updateAction)=\"updateIdService()\" [shouldShowDelete]=\"false\" [isLoading]=\"isLoadingIdService\" [title]=\"titleIdService\" [service]=\"idService\"></service-details-view>\r\n    </div>\r\n\r\n    <div *ngIf=\"shouldDisplayCreateButton\">\r\n      <ba-card title=\"{{titleIdService}}\" baCardClass=\"with-scroll table-panel\">\r\n        <ul class=\"btn-list clearfix\">\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"createIdService()\">Create ID Service</button>\r\n          </li>\r\n        </ul>\r\n      </ba-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n<mc-modal (onCancel)=\"cancelModal()\" (onOk)=\"deleteForSure()\" [show]=\"showModal\" [title]=\"'Delete instance'\" [description]=\"modalDescription\" [cancelClass]=\"'btn btn-default btn-raised'\" [cancelTitle]=\"'Cancel'\" [okClass]=\"'btn btn-danger btn-raised'\" [okTitle]=\"'Delete'\"></mc-modal>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var instances_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/instances.service.ts");
var InstanceListComponent = (function () {
    function InstanceListComponent(route, router, notifications, orgService, instancesService) {
        this.route = route;
        this.router = router;
        this.notifications = notifications;
        this.orgService = orgService;
        this.instancesService = instancesService;
    }
    InstanceListComponent.prototype.ngOnInit = function () {
        this.cardTitle = 'Loading ...';
        this.onGotoInstance = this.gotoInstance.bind(this);
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadInstances();
    };
    InstanceListComponent.prototype.loadInstances = function () {
        var _this = this;
        this.instancesService.getAllInstances().subscribe(function (instances) {
            _this.instances = instances;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get instances', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            //this.cardTitle = 'Instances for ' + organization.name;
            _this.cardTitle = 'All Instances';
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceListComponent.prototype.gotoInstance = function (index) {
        this.router.navigate([this.instances[index].instanceId], { queryParams: { instanceVersion: this.instances[index].version }, relativeTo: this.route });
    };
    InstanceListComponent = __decorate([
        core_1.Component({
            selector: 'instance-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object, (typeof (_b = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _b) || Object, (typeof (_c = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _c) || Object, (typeof (_d = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _d) || Object, (typeof (_e = typeof instances_service_1.InstancesService !== 'undefined' && instances_service_1.InstancesService) === 'function' && _e) || Object])
    ], InstanceListComponent);
    return InstanceListComponent;
    var _a, _b, _c, _d, _e;
}());
exports.InstanceListComponent = InstanceListComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{cardTitle}}\" baCardClass=\"with-scroll table-panel\">\r\n      <instances-table [instances]=\"instances\" [isLoading]=\"isLoading\" [onRowClick]=\"onGotoInstance\"></instances-table>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mcFileUploader_component_1 = __webpack_require__("./src/app/theme/components/mcFileUploader/mcFileUploader.component.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var instances_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/instances.service.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var instance_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/instance-xml-parser.service.ts");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var mcFormControlModel_1 = __webpack_require__("./src/app/theme/components/mcForm/mcFormControlModel.ts");
var forms_1 = __webpack_require__("./node_modules/@angular/forms/index.js");
var url_validator_1 = __webpack_require__("./src/app/theme/validators/url.validator.ts");
var ServiceViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts");
var select_validator_1 = __webpack_require__("./src/app/theme/validators/select.validator.ts");
var InstanceNewComponent = (function () {
    function InstanceNewComponent(formBuilder, xmlParser, mrnHelper, activatedRoute, xmlParserService, viewModelService, navigationService, notifications, designsService, orgService, instancesService, idServicesService) {
        this.formBuilder = formBuilder;
        this.xmlParser = xmlParser;
        this.mrnHelper = mrnHelper;
        this.activatedRoute = activatedRoute;
        this.xmlParserService = xmlParserService;
        this.viewModelService = viewModelService;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.designsService = designsService;
        this.orgService = orgService;
        this.instancesService = instancesService;
        this.idServicesService = idServicesService;
        this.hasMrnError = false;
        this.captionXml = 'Upload Instance Xml file';
        this.captionDoc = 'Upload Instance Document file';
        this.fileTypeXml = mcFileUploader_component_1.FileUploadType.Xml;
        this.fileTypeDoc = mcFileUploader_component_1.FileUploadType.Doc;
        this.requiredTextXml = 'You need to upload Xml file';
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Instance";
        this.registerButtonClass = "btn btn-danger btn-raised";
        this.useOIDC = false;
        this.mrn = '';
        this.name = '';
    }
    InstanceNewComponent.prototype.ngOnInit = function () {
        this.onRegister = this.register.bind(this);
        this.isRegistering = false;
        this.isLoading = true;
        this.generateForm();
        this.loadMyOrganization();
        this.loadDesign();
    };
    InstanceNewComponent.prototype.isFormValid = function () {
        var oidcTypeValid = true;
        var oidcAccessType = this.registerForm.value.oidcAccessType;
        if (this.useOIDC && (!oidcAccessType || oidcAccessType.toLowerCase().indexOf('undefined') >= 0)) {
            oidcTypeValid = false;
        }
        return this.xml != null && this.registerForm.valid && oidcTypeValid;
    };
    InstanceNewComponent.prototype.onUploadDoc = function (file) {
        this.doc = file;
    };
    InstanceNewComponent.prototype.onUploadXml = function (file) {
        if (file && this.isXmlValid(file)) {
            this.xml = file;
        }
        else {
            this.mrn = '';
            this.name = '';
            this.xml = null;
            this.fileUploadXml.resetFileSelection();
            this.registerForm.patchValue({ mrn: this.mrn });
            this.registerForm.patchValue({ name: this.name });
        }
    };
    InstanceNewComponent.prototype.isXmlValid = function (file) {
        try {
            var mrn = this.xmlParser.getMrn(file);
            var isValid = this.mrnHelper.checkMrnForInstance(mrn);
            this.hasMrnError = !isValid;
            if (isValid) {
                this.mrn = mrn;
                this.name = this.xmlParser.getName(file);
            }
            else {
                this.mrn = '';
                this.name = '';
                this.mrnErrorText = "The ID in the Xml-file is wrong. The ID is supposed to be an MRN in the following format:<BR>"
                    + this.mrnHelper.mrnMaskForInstance() + "'ID'<BR>"
                    + "'ID'=" + this.mrnHelper.mrnPatternError();
            }
            this.registerForm.patchValue({ mrn: this.mrn });
            this.registerForm.patchValue({ name: this.name });
            return isValid;
        }
        catch (error) {
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
            return false;
        }
    };
    InstanceNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateInstance();
    };
    InstanceNewComponent.prototype.register = function () {
        this.isRegistering = true;
        try {
            var instance = {};
            instance.instanceAsXml = this.xml;
            instance.name = this.xmlParser.getName(this.xml);
            instance.description = this.xmlParser.getDescription(this.xml);
            instance.instanceId = this.xmlParser.getMrn(this.xml);
            instance.keywords = this.xmlParser.getKeywords(this.xml);
            instance.status = this.xmlParser.getStatus(this.xml);
            instance.organizationId = this.organization.mrn;
            instance.version = this.xmlParser.getVersion(this.xml);
            instance.designId = this.design.designId;
            this.createInstance(instance);
        }
        catch (error) {
            this.isRegistering = false;
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
        }
    };
    InstanceNewComponent.prototype.createInstance = function (instance) {
        var _this = this;
        this.instancesService.createInstance(instance, this.doc).subscribe(function (instanceCreated) {
            _this.registerIdService(instanceCreated);
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create instance', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceNewComponent.prototype.registerIdService = function (instance) {
        var service = {
            mrn: this.mrn,
            name: this.name,
            permissions: this.registerForm.value.permissions,
            certDomainName: this.registerForm.value.certDomainName
        };
        if (this.useOIDC) {
            service.oidcRedirectUri = this.registerForm.value.oidcRedirectUri;
            var oidcAccessType = this.registerForm.value.oidcAccessType;
            if (oidcAccessType && oidcAccessType.toLowerCase().indexOf('undefined') < 0) {
                service.oidcAccessType = oidcAccessType;
            }
        }
        this.createIdService(service, instance);
    };
    InstanceNewComponent.prototype.createIdService = function (idService, instance) {
        var _this = this;
        this.idServicesService.createIdService(idService).subscribe(function (service) {
            _this.isRegistering = false;
            _this.navigationService.navigateToOrgInstance(instance.instanceId, instance.version);
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create service instance in Identity Registry', mc_notifications_service_1.MCNotificationType.Error, err);
            _this.navigationService.navigateToOrgInstance(instance.instanceId, instance.version);
        });
    };
    InstanceNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceNewComponent.prototype.loadDesign = function () {
        var _this = this;
        var designId = this.activatedRoute.snapshot.queryParams['designId'];
        var version = this.activatedRoute.snapshot.queryParams['designVersion'];
        this.designsService.getDesign(designId, version).subscribe(function (design) {
            _this.design = design;
            _this.labelValues = _this.viewModelService.generateLabelValuesForDesign(_this.design);
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get design', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    InstanceNewComponent.prototype.shouldUseOIDC = function (useOIDC) {
        this.useOIDC = useOIDC;
        this.generateForm();
    };
    InstanceNewComponent.prototype.generateForm = function () {
        var _this = this;
        var oldForm = this.registerForm;
        this.registerForm = this.formBuilder.group({});
        if (!oldForm) {
            oldForm = this.registerForm;
        }
        this.formControlModels = [];
        var formControlModel = { formGroup: this.registerForm, elementId: 'mrn', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'MRN', placeholder: 'Upload Instance Xml', isDisabled: true };
        var formControl = new forms_1.FormControl(this.mrn, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'name', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Name', placeholder: 'Upload Instance Xml', isDisabled: true };
        formControl = new forms_1.FormControl(this.name, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'permissions', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Permissions', placeholder: '' };
        formControl = new forms_1.FormControl(oldForm.value.permissions, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        formControlModel = { formGroup: this.registerForm, elementId: 'certDomainName', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'Certificate domain name', placeholder: '' };
        formControl = new forms_1.FormControl(oldForm.value.certDomainName, formControlModel.validator);
        this.registerForm.addControl(formControlModel.elementId, formControl);
        this.formControlModels.push(formControlModel);
        var formControlModelCheckbox = { state: this.useOIDC, formGroup: this.registerForm, elementId: 'useOIDC', controlType: mcFormControlModel_1.McFormControlType.Checkbox, labelName: 'Use OpenID Connect (OIDC)' };
        formControl = new forms_1.FormControl({ value: formControlModelCheckbox.state, disabled: false }, formControlModelCheckbox.validator);
        formControl.valueChanges.subscribe(function (param) { return _this.shouldUseOIDC(param); });
        this.registerForm.addControl(formControlModelCheckbox.elementId, formControl);
        this.formControlModels.push(formControlModelCheckbox);
        if (this.useOIDC) {
            formControlModel = { formGroup: this.registerForm, elementId: 'oidcRedirectUri', controlType: mcFormControlModel_1.McFormControlType.Text, labelName: 'OIDC Redirect URI', placeholder: '', validator: forms_1.Validators.compose([forms_1.Validators.required, url_validator_1.UrlValidator.validate]), errorText: 'URI not valid' };
            formControl = new forms_1.FormControl('', formControlModel.validator);
            this.registerForm.addControl(formControlModel.elementId, formControl);
            this.formControlModels.push(formControlModel);
            var formControlModelSelect = { selectValues: this.selectValues(), formGroup: this.registerForm, elementId: 'oidcAccessType', controlType: mcFormControlModel_1.McFormControlType.Select, labelName: 'Access type', placeholder: '', validator: select_validator_1.SelectValidator.validate };
            formControl = new forms_1.FormControl('', formControlModelSelect.validator);
            this.registerForm.addControl(formControlModelSelect.elementId, formControl);
            this.formControlModels.push(formControlModelSelect);
        }
    };
    InstanceNewComponent.prototype.selectValues = function () {
        var selectValues = [];
        selectValues.push({ value: undefined, label: 'Choose access type...', isSelected: true });
        var allOidcTypes = ServiceViewModel_1.ServiceViewModel.getAllOidcAccessTypes();
        allOidcTypes.forEach(function (oidcType) {
            selectValues.push({ value: oidcType.value, label: oidcType.label, isSelected: false });
        });
        return selectValues;
    };
    __decorate([
        core_1.ViewChild('uploadXml'), 
        __metadata('design:type', (typeof (_a = typeof mcFileUploader_component_1.McFileUploader !== 'undefined' && mcFileUploader_component_1.McFileUploader) === 'function' && _a) || Object)
    ], InstanceNewComponent.prototype, "fileUploadXml", void 0);
    InstanceNewComponent = __decorate([
        core_1.Component({
            selector: 'instance-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _b) || Object, (typeof (_c = typeof instance_xml_parser_service_1.InstanceXmlParser !== 'undefined' && instance_xml_parser_service_1.InstanceXmlParser) === 'function' && _c) || Object, (typeof (_d = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _d) || Object, (typeof (_e = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _e) || Object, (typeof (_f = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _f) || Object, (typeof (_g = typeof sr_view_model_service_1.SrViewModelService !== 'undefined' && sr_view_model_service_1.SrViewModelService) === 'function' && _g) || Object, (typeof (_h = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _h) || Object, (typeof (_j = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _j) || Object, (typeof (_k = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _k) || Object, (typeof (_l = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _l) || Object, (typeof (_m = typeof instances_service_1.InstancesService !== 'undefined' && instances_service_1.InstancesService) === 'function' && _m) || Object, (typeof (_o = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _o) || Object])
    ], InstanceNewComponent);
    return InstanceNewComponent;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
}());
exports.InstanceNewComponent = InstanceNewComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Instance for {{organization?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <h5 *ngIf=\"design\">Registering an instance for this design</h5>\r\n      <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <div *ngIf=\"design\">\r\n        <form>\r\n          <mc-file-uploader #uploadXml [caption]=\"captionXml\" [fileUploadType]=\"fileTypeXml\" [requiredText]=\"requiredTextXml\" (onUpload)=\"onUploadXml($event)\"></mc-file-uploader>\r\n          <mc-file-uploader [caption]=\"captionDoc\" [fileUploadType]=\"fileTypeDoc\" (onUpload)=\"onUploadDoc($event)\"></mc-file-uploader>\r\n          <div *ngIf=\"hasMrnError\" class=\"mc-form-error\" [innerHTML]=\"mrnErrorText | undefined | sanitizeHtml\"></div>\r\n\r\n          <mc-form [hideButtons]=\"true\" [formGroup]=\"registerForm\" [formControlModels]=\"formControlModels\" [isLoading]=\"isLoading\"></mc-form>\r\n\r\n          <ul class=\"btn-list clearfix\">\r\n            <li>\r\n              <mc-loading-button [class]=\"registerButtonClass\" [disabled]=\"!isFormValid()\" [isLoading]=\"isRegistering\" [title]=\"registerTitle\" [onClick]=\"onRegister\" ></mc-loading-button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n      <div class=\"no-data\" *ngIf=\"!design && !isLoading\">No data</div>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/instances/instances.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var InstancesComponent = (function () {
    function InstancesComponent() {
    }
    InstancesComponent = __decorate([
        core_1.Component({
            selector: 'instancess',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], InstancesComponent);
    return InstancesComponent;
}());
exports.InstancesComponent = InstancesComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/instances.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var instances_routing_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/instances.routing.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var instances_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/instances.component.ts");
var instance_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.component.ts");
var instance_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.component.ts");
var instance_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.component.ts");
var services_module_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/services.module.ts");
var InstancesModule = (function () {
    function InstancesModule() {
    }
    InstancesModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                shared_module_1.SharedModule,
                instances_routing_1.routing,
                services_module_1.default
            ],
            declarations: [
                instances_component_1.InstancesComponent,
                instance_list_component_1.InstanceListComponent,
                instance_details_component_1.InstanceDetailsComponent,
                instance_new_component_1.InstanceNewComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], InstancesModule);
    return InstancesModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = InstancesModule;


/***/ },

/***/ "./src/app/pages/org-service-registry/instances/instances.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var instances_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/instances.component.ts");
var instance_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-list/instance-list.component.ts");
var instance_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-details/instance-details.component.ts");
var instance_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/components/instance-new/instance-new.component.ts");
var service_new_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-new/service-new.component.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
var service_update_component_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/components/service-update/service-update.component.ts");
// noinspection TypeScriptValidateTypes
exports.routes = [
    {
        path: 'instances',
        component: instances_component_1.InstancesComponent,
        data: { breadcrumb: 'Instances' },
        children: [
            {
                path: '',
                component: instance_list_component_1.InstanceListComponent
            },
            {
                path: 'issuecert',
                component: certificate_issue_new_component_1.CertificateIssueNewComponent,
                data: { breadcrumb: 'New Certificate' },
                children: []
            },
            {
                path: 'register',
                component: instance_new_component_1.InstanceNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: 'register-id',
                component: service_new_component_1.ServiceNewComponent,
                data: { breadcrumb: 'Register ID' }
            },
            {
                path: ':id',
                component: instance_details_component_1.InstanceDetailsComponent,
                data: { breadcrumb: 'Details' }
            },
            {
                path: 'update-id/:id',
                component: service_update_component_1.ServiceUpdateComponent,
                data: { breadcrumb: 'Update' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(exports.routes);


/***/ },

/***/ "./src/app/pages/org-service-registry/org-service-registry.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var OrgServiceRegistryComponent = (function () {
    function OrgServiceRegistryComponent() {
    }
    OrgServiceRegistryComponent = __decorate([
        core_1.Component({
            selector: 'org-service-registry',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], OrgServiceRegistryComponent);
    return OrgServiceRegistryComponent;
}());
exports.OrgServiceRegistryComponent = OrgServiceRegistryComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/org-service-registry.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var org_service_registry_routing_1 = __webpack_require__("./src/app/pages/org-service-registry/org-service-registry.routing.ts");
var org_service_registry_component_1 = __webpack_require__("./src/app/pages/org-service-registry/org-service-registry.component.ts");
var specifications_module_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/specifications.module.ts");
var designs_module_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/designs.module.ts");
var instances_module_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/instances.module.ts");
var sr_how_to_module_1 = __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.module.ts");
var specification_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/specification-xml-parser.service.ts");
var design_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/design-xml-parser.service.ts");
var instance_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/instance-xml-parser.service.ts");
var OrgServiceRegistryModule = (function () {
    function OrgServiceRegistryModule() {
    }
    OrgServiceRegistryModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                specifications_module_1.default,
                designs_module_1.default,
                instances_module_1.default,
                sr_how_to_module_1.default,
                org_service_registry_routing_1.routing
            ],
            declarations: [
                org_service_registry_component_1.OrgServiceRegistryComponent
            ],
            providers: [
                specification_xml_parser_service_1.SpecificationXmlParser,
                design_xml_parser_service_1.DesignXmlParser,
                instance_xml_parser_service_1.InstanceXmlParser
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], OrgServiceRegistryModule);
    return OrgServiceRegistryModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = OrgServiceRegistryModule;


/***/ },

/***/ "./src/app/pages/org-service-registry/org-service-registry.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var org_service_registry_component_1 = __webpack_require__("./src/app/pages/org-service-registry/org-service-registry.component.ts");
var specifications_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/specifications.component.ts");
var designs_component_1 = __webpack_require__("./src/app/pages/org-service-registry/designs/designs.component.ts");
var instances_component_1 = __webpack_require__("./src/app/pages/org-service-registry/instances/instances.component.ts");
var sr_how_to_component_1 = __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: '',
        component: org_service_registry_component_1.OrgServiceRegistryComponent,
        children: [
            { path: 'howto', component: sr_how_to_component_1.SrHowToComponent },
            { path: 'specifications', component: specifications_component_1.SpecificationsComponent },
            { path: 'designs', component: designs_component_1.DesignsComponent },
            { path: 'instances', component: instances_component_1.InstancesComponent }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/design-xml-parser.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var service_registry_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/service-registry-xml-parser.service.ts");
var DesignXmlParser = (function (_super) {
    __extends(DesignXmlParser, _super);
    function DesignXmlParser(xmlParserService) {
        _super.call(this, xmlParserService);
    }
    DesignXmlParser = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _a) || Object])
    ], DesignXmlParser);
    return DesignXmlParser;
    var _a;
}(service_registry_xml_parser_service_1.ServiceRegistryXmlParser));
exports.DesignXmlParser = DesignXmlParser;


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/instance-xml-parser.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var service_registry_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/service-registry-xml-parser.service.ts");
var InstanceXmlParser = (function (_super) {
    __extends(InstanceXmlParser, _super);
    function InstanceXmlParser(xmlParserService) {
        _super.call(this, xmlParserService);
    }
    InstanceXmlParser = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _a) || Object])
    ], InstanceXmlParser);
    return InstanceXmlParser;
    var _a;
}(service_registry_xml_parser_service_1.ServiceRegistryXmlParser));
exports.InstanceXmlParser = InstanceXmlParser;


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/service-registry-xml-parser.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var ServiceRegistryXmlParser = (function () {
    function ServiceRegistryXmlParser(xmlParserService) {
        this.xmlParserService = xmlParserService;
    }
    ServiceRegistryXmlParser.prototype.getName = function (xml) {
        return this.xmlParserService.getValueFromField('name', xml);
    };
    ServiceRegistryXmlParser.prototype.getDescription = function (xml) {
        return this.xmlParserService.getValueFromField('description', xml);
    };
    ServiceRegistryXmlParser.prototype.getMrn = function (xml) {
        return this.xmlParserService.getValueFromField('id', xml);
    };
    ServiceRegistryXmlParser.prototype.getKeywords = function (xml) {
        return this.xmlParserService.getValueFromField('keywords', xml);
    };
    ServiceRegistryXmlParser.prototype.getStatus = function (xml) {
        return this.xmlParserService.getValueFromField('status', xml);
    };
    ServiceRegistryXmlParser.prototype.getVersion = function (xml) {
        return this.xmlParserService.getValueFromField('version', xml);
    };
    ServiceRegistryXmlParser = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _a) || Object])
    ], ServiceRegistryXmlParser);
    return ServiceRegistryXmlParser;
    var _a;
}());
exports.ServiceRegistryXmlParser = ServiceRegistryXmlParser;


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/specification-xml-parser.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var service_registry_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/service-registry-xml-parser.service.ts");
var xml_parser_service_1 = __webpack_require__("./src/app/shared/xml-parser.service.ts");
var SpecificationXmlParser = (function (_super) {
    __extends(SpecificationXmlParser, _super);
    function SpecificationXmlParser(xmlParserService) {
        _super.call(this, xmlParserService);
    }
    SpecificationXmlParser = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [(typeof (_a = typeof xml_parser_service_1.XmlParserService !== 'undefined' && xml_parser_service_1.XmlParserService) === 'function' && _a) || Object])
    ], SpecificationXmlParser);
    return SpecificationXmlParser;
    var _a;
}(service_registry_xml_parser_service_1.ServiceRegistryXmlParser));
exports.SpecificationXmlParser = SpecificationXmlParser;


/***/ },

/***/ "./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SrViewModelService = (function () {
    function SrViewModelService() {
    }
    SrViewModelService.prototype.ngOnInit = function () {
    };
    SrViewModelService.prototype.generateLabelValuesForSpecification = function (specification) {
        var labelValues = undefined;
        if (specification) {
            labelValues = [];
            labelValues.push({ label: 'MRN', valueHtml: specification.specificationId });
            labelValues.push({ label: 'Name', valueHtml: specification.name });
            labelValues.push({ label: 'Version', valueHtml: specification.version });
            labelValues.push({ label: 'Status', valueHtml: specification.status });
            labelValues.push({ label: 'Description', valueHtml: specification.description });
        }
        return labelValues;
    };
    SrViewModelService.prototype.generateLabelValuesForDesign = function (design) {
        var labelValues = undefined;
        if (design) {
            labelValues = [];
            labelValues.push({ label: 'MRN', valueHtml: design.designId });
            labelValues.push({ label: 'Name', valueHtml: design.name });
            labelValues.push({ label: 'Version', valueHtml: design.version });
            labelValues.push({ label: 'Status', valueHtml: design.status });
            labelValues.push({ label: 'Description', valueHtml: design.description });
        }
        return labelValues;
    };
    SrViewModelService.prototype.generateLabelValuesForInstance = function (instance) {
        var labelValues = undefined;
        if (instance) {
            labelValues = [];
            labelValues.push({ label: 'MRN', valueHtml: instance.instanceId });
            labelValues.push({ label: 'Name', valueHtml: instance.name });
            labelValues.push({ label: 'Version', valueHtml: instance.version });
            labelValues.push({ label: 'Status', valueHtml: instance.status });
            labelValues.push({ label: 'Description', valueHtml: instance.description });
            labelValues.push({ label: 'Service endpoint', valueHtml: instance.endpointUri });
        }
        return labelValues;
    };
    SrViewModelService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], SrViewModelService);
    return SrViewModelService;
}());
exports.SrViewModelService = SrViewModelService;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var specifications_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/specifications.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var designs_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/designs.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var instances_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/instances.service.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var SpecificationDetailsComponent = (function () {
    function SpecificationDetailsComponent(authService, route, router, viewModelService, navigationHelperService, instancesService, notifications, specificationsService, designsService, fileHelperService) {
        this.authService = authService;
        this.route = route;
        this.router = router;
        this.viewModelService = viewModelService;
        this.navigationHelperService = navigationHelperService;
        this.instancesService = instancesService;
        this.notifications = notifications;
        this.specificationsService = specificationsService;
        this.designsService = designsService;
        this.fileHelperService = fileHelperService;
        this.showModal = false;
    }
    SpecificationDetailsComponent.prototype.ngOnInit = function () {
        this.onCreate = this.createDesign.bind(this);
        this.onGotoDesign = this.gotoDesign.bind(this);
        this.onGotoInstance = this.gotoInstance.bind(this);
        this.isLoadingSpecification = true;
        this.isLoadingDesigns = true;
        this.isLoadingInstances = true;
        this.title = 'Loading ...';
        var specificationId = this.route.snapshot.params['id'];
        var version = this.route.snapshot.queryParams['specificationVersion'];
        this.loadSpecification(specificationId, version);
    };
    SpecificationDetailsComponent.prototype.downloadXml = function () {
        this.fileHelperService.downloadXml(this.specification.specAsXml);
    };
    SpecificationDetailsComponent.prototype.downloadDoc = function () {
        this.fileHelperService.downloadDoc(this.specification.specAsDoc);
    };
    SpecificationDetailsComponent.prototype.gotoDesign = function (index) {
        this.navigationHelperService.navigateToOrgDesign(this.designs[index].designId, this.designs[index].version);
    };
    SpecificationDetailsComponent.prototype.loadSpecification = function (specificationId, version) {
        var _this = this;
        this.specificationsService.getSpecification(specificationId, version).subscribe(function (specification) {
            _this.title = specification.name;
            _this.specification = specification;
            _this.labelValues = _this.viewModelService.generateLabelValuesForSpecification(_this.specification);
            _this.isLoadingSpecification = false;
            _this.loadDesigns();
            _this.loadInstances();
        }, function (err) {
            // TODO: make this as a general component
            if (err.status == 404) {
                _this.router.navigate(['/error404'], { relativeTo: _this.route, replaceUrl: true });
            }
            _this.title = 'Error while loading';
            _this.isLoadingSpecification = false;
            _this.isLoadingDesigns = false;
            _this.isLoadingInstances = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get specification', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationDetailsComponent.prototype.loadInstances = function () {
        var _this = this;
        this.instancesService.getInstancesForSpecification(this.specification.specificationId, this.specification.version).subscribe(function (instances) {
            _this.instances = instances;
            _this.isLoadingInstances = false;
        }, function (err) {
            _this.isLoadingInstances = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get instances', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationDetailsComponent.prototype.loadDesigns = function () {
        var _this = this;
        this.designsService.getDesignsForSpecification(this.specification.specificationId, this.specification.version).subscribe(function (designs) {
            _this.designs = designs;
            _this.isLoadingDesigns = false;
        }, function (err) {
            _this.isLoadingDesigns = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get designs', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationDetailsComponent.prototype.createDesign = function () {
        this.navigationHelperService.navigateToCreateDesign(this.specification.specificationId, this.specification.version);
    };
    SpecificationDetailsComponent.prototype.gotoInstance = function (index) {
        this.navigationHelperService.navigateToOrgInstance(this.instances[index].instanceId, this.instances[index].version);
    };
    SpecificationDetailsComponent.prototype.isMyOrg = function () {
        return this.specification.organizationId === this.authService.authState.orgMrn;
    };
    SpecificationDetailsComponent.prototype.isAdmin = function () {
        return (this.authService.authState.isAdmin() && this.isMyOrg()) || this.authService.authState.isSiteAdmin();
    };
    SpecificationDetailsComponent.prototype.shouldDisplayDelete = function () {
        return this.isAdmin() && !this.isLoadingDesigns && !this.hasDesigns();
    };
    SpecificationDetailsComponent.prototype.hasDesigns = function () {
        return this.designs && this.designs.length > 0;
    };
    SpecificationDetailsComponent.prototype.delete = function () {
        this.modalDescription = 'Do you want to delete the specification?';
        this.showModal = true;
    };
    SpecificationDetailsComponent.prototype.cancelModal = function () {
        this.showModal = false;
    };
    SpecificationDetailsComponent.prototype.deleteForSure = function () {
        var _this = this;
        this.isLoadingSpecification = true;
        this.showModal = false;
        this.specificationsService.deleteSpecification(this.specification).subscribe(function () {
            _this.navigationHelperService.navigateToOrgSpecification('', '');
        }, function (err) {
            _this.isLoadingSpecification = false;
            _this.notifications.generateNotification('Error', 'Error when trying to delete specification', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationDetailsComponent = __decorate([
        core_1.Component({
            selector: 'specification-details',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object, (typeof (_d = typeof sr_view_model_service_1.SrViewModelService !== 'undefined' && sr_view_model_service_1.SrViewModelService) === 'function' && _d) || Object, (typeof (_e = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _e) || Object, (typeof (_f = typeof instances_service_1.InstancesService !== 'undefined' && instances_service_1.InstancesService) === 'function' && _f) || Object, (typeof (_g = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _g) || Object, (typeof (_h = typeof specifications_service_1.SpecificationsService !== 'undefined' && specifications_service_1.SpecificationsService) === 'function' && _h) || Object, (typeof (_j = typeof designs_service_1.DesignsService !== 'undefined' && designs_service_1.DesignsService) === 'function' && _j) || Object, (typeof (_k = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _k) || Object])
    ], SpecificationDetailsComponent);
    return SpecificationDetailsComponent;
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
}());
exports.SpecificationDetailsComponent = SpecificationDetailsComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n      <mc-label-value-table [isLoading]=\"isLoadingSpecification\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n      <ul *ngIf=\"specification && !isLoadingSpecification\" class=\"btn-list clearfix\">\r\n        <li *ngIf=\"specification.specAsDoc\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadDoc()\">Download document</button>\r\n        </li>\r\n        <li *ngIf=\"specification.specAsXml\">\r\n          <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadXml()\">Download XML</button>\r\n        </li>\r\n        <li *ngIf=\"shouldDisplayDelete()\">\r\n          <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"delete()\">Delete Specification</button>\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <h5>Designs that implements this Specification</h5>\r\n      <designs-table [designs]=\"designs\" [isLoading]=\"isLoadingDesigns\" [onRowClick]=\"onGotoDesign\"></designs-table>\r\n      <mc-create-button *ngIf=\"!isLoadingDesigns\" title=\"Register new Design\" [onClick]=\"onCreate\"></mc-create-button>\r\n\r\n      <!-- Doesn't work atm.\r\n      <div class=\"separator\"></div>\r\n\r\n      <h5>Instances that implements this Specification</h5>\r\n      <instances-table [instances]=\"instances\" [isLoading]=\"isLoadingInstances\" [onRowClick]=\"onGotoInstance\"></instances-table>\r\n      -->\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n<mc-modal (onCancel)=\"cancelModal()\" (onOk)=\"deleteForSure()\" [show]=\"showModal\" [title]=\"'Delete specification'\" [description]=\"modalDescription\" [cancelClass]=\"'btn btn-default btn-raised'\" [cancelTitle]=\"'Cancel'\" [okClass]=\"'btn btn-danger btn-raised'\" [okTitle]=\"'Delete'\"></mc-modal>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var specifications_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/specifications.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var SpecificationListComponent = (function () {
    function SpecificationListComponent(navigationService, route, router, notifications, orgService, specificationsService) {
        this.navigationService = navigationService;
        this.route = route;
        this.router = router;
        this.notifications = notifications;
        this.orgService = orgService;
        this.specificationsService = specificationsService;
    }
    SpecificationListComponent.prototype.ngOnInit = function () {
        this.cardTitle = 'Loading ...';
        this.onCreate = this.createSpecification.bind(this);
        this.onGotoSpec = this.gotoSpecification.bind(this);
        this.isLoading = true;
        this.loadMyOrganization();
        this.loadSpecifications();
    };
    SpecificationListComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            // TODO: change when filtering on organization
            //this.cardTitle = 'Specifications for ' + organization.name;
            _this.cardTitle = 'All Specifications';
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationListComponent.prototype.loadSpecifications = function () {
        var _this = this;
        this.specificationsService.getAllSpecifications().subscribe(function (specifications) {
            _this.specifications = specifications;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to get specifications', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationListComponent.prototype.createSpecification = function () {
        this.navigationService.navigateToCreateSpecification();
    };
    SpecificationListComponent.prototype.gotoSpecification = function (index) {
        this.router.navigate([this.specifications[index].specificationId], { queryParams: { specificationVersion: this.specifications[index].version }, relativeTo: this.route });
    };
    SpecificationListComponent = __decorate([
        core_1.Component({
            selector: 'specification-list',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _a) || Object, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _c) || Object, (typeof (_d = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _d) || Object, (typeof (_e = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _e) || Object, (typeof (_f = typeof specifications_service_1.SpecificationsService !== 'undefined' && specifications_service_1.SpecificationsService) === 'function' && _f) || Object])
    ], SpecificationListComponent);
    return SpecificationListComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.SpecificationListComponent = SpecificationListComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"{{cardTitle}}\" baCardClass=\"with-scroll table-panel\">\r\n      <specifications-table [specifications]=\"specifications\" [isLoading]=\"isLoading\" [onRowClick]=\"onGotoSpec\"></specifications-table>\r\n      <mc-create-button *ngIf=\"!isLoading\" title=\"Register new Specification\" [onClick]=\"onCreate\" ></mc-create-button>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var specifications_service_1 = __webpack_require__("./src/app/backend-api/service-registry/services/specifications.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var organizations_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/organizations.service.ts");
var mcFileUploader_component_1 = __webpack_require__("./src/app/theme/components/mcFileUploader/mcFileUploader.component.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var _ = __webpack_require__("./node_modules/lodash/lodash.js");
var mrn_helper_service_1 = __webpack_require__("./src/app/shared/mrn-helper.service.ts");
var specification_xml_parser_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/specification-xml-parser.service.ts");
var SpecificationNewComponent = (function () {
    function SpecificationNewComponent(xmlParser, mrnHelper, navigationService, notifications, specificationsService, orgService) {
        this.xmlParser = xmlParser;
        this.mrnHelper = mrnHelper;
        this.navigationService = navigationService;
        this.notifications = notifications;
        this.specificationsService = specificationsService;
        this.orgService = orgService;
        this.hasMrnError = false;
        this.captionXml = 'Upload Specification Xml file';
        this.captionDoc = 'Upload Specification Document file';
        this.fileTypeXml = mcFileUploader_component_1.FileUploadType.Xml;
        this.fileTypeDoc = mcFileUploader_component_1.FileUploadType.Doc;
        this.requiredTextXml = 'You need to upload Xml file';
        this.isFormValid = false;
        this.isLoading = true;
        this.isRegistering = false;
        this.registerTitle = "Register Specification";
        this.registerButtonClass = "btn btn-danger btn-raised";
    }
    SpecificationNewComponent.prototype.ngOnInit = function () {
        this.onRegister = this.register.bind(this);
        this.isRegistering = false;
        this.loadMyOrganization();
        this.calculateFormValid();
    };
    SpecificationNewComponent.prototype.calculateFormValid = function () {
        this.isFormValid = this.xml != null;
    };
    SpecificationNewComponent.prototype.onUploadDoc = function (file) {
        this.doc = file;
        this.calculateFormValid();
    };
    SpecificationNewComponent.prototype.onUploadXml = function (file) {
        if (file && this.isXmlValid(file)) {
            this.xml = file;
        }
        else {
            this.xml = null;
            this.fileUploadXml.resetFileSelection();
        }
        this.calculateFormValid();
    };
    SpecificationNewComponent.prototype.isXmlValid = function (file) {
        try {
            var mrn = this.xmlParser.getMrn(file);
            var isValid = this.mrnHelper.checkMrnForSpecification(mrn);
            this.hasMrnError = !isValid;
            if (!isValid) {
                this.mrnErrorText = "The ID in the Xml-file is wrong. The ID is supposed to be an MRN in the following format:<BR>"
                    + this.mrnHelper.mrnMaskForSpecification() + "'ID'<BR>"
                    + "'ID'=" + this.mrnHelper.mrnPatternError();
            }
            return isValid;
        }
        catch (error) {
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
            return false;
        }
    };
    SpecificationNewComponent.prototype.cancel = function () {
        this.navigationService.cancelCreateSpecification();
    };
    SpecificationNewComponent.prototype.register = function () {
        this.isRegistering = true;
        try {
            var specification = {};
            specification.specAsXml = _.cloneDeep(this.xml);
            specification.specAsDoc = this.doc;
            specification.name = this.xmlParser.getName(this.xml);
            specification.description = this.xmlParser.getDescription(this.xml);
            specification.specificationId = this.xmlParser.getMrn(this.xml);
            specification.keywords = this.xmlParser.getKeywords(this.xml);
            specification.status = this.xmlParser.getStatus(this.xml);
            specification.organizationId = this.organization.mrn;
            specification.version = this.xmlParser.getVersion(this.xml);
            this.createSpecification(specification);
        }
        catch (error) {
            this.isRegistering = false;
            this.notifications.generateNotification('Error in XML', error.message, mc_notifications_service_1.MCNotificationType.Error, error);
        }
    };
    SpecificationNewComponent.prototype.createSpecification = function (specification) {
        var _this = this;
        this.specificationsService.createSpecification(specification).subscribe(function (specification) {
            _this.isRegistering = false;
            _this.navigationService.navigateToOrgSpecification(specification.specificationId, specification.version);
        }, function (err) {
            _this.isRegistering = false;
            _this.notifications.generateNotification('Error', 'Error when trying to create specification', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    SpecificationNewComponent.prototype.loadMyOrganization = function () {
        var _this = this;
        this.isLoading = true;
        this.orgService.getMyOrganization().subscribe(function (organization) {
            _this.organization = organization;
            _this.isLoading = false;
        }, function (err) {
            _this.notifications.generateNotification('Error', 'Error when trying to get organization', mc_notifications_service_1.MCNotificationType.Error);
            _this.isLoading = false;
        });
    };
    __decorate([
        core_1.ViewChild('uploadXml'), 
        __metadata('design:type', (typeof (_a = typeof mcFileUploader_component_1.McFileUploader !== 'undefined' && mcFileUploader_component_1.McFileUploader) === 'function' && _a) || Object)
    ], SpecificationNewComponent.prototype, "fileUploadXml", void 0);
    SpecificationNewComponent = __decorate([
        core_1.Component({
            selector: 'specification-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof specification_xml_parser_service_1.SpecificationXmlParser !== 'undefined' && specification_xml_parser_service_1.SpecificationXmlParser) === 'function' && _b) || Object, (typeof (_c = typeof mrn_helper_service_1.MrnHelperService !== 'undefined' && mrn_helper_service_1.MrnHelperService) === 'function' && _c) || Object, (typeof (_d = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _d) || Object, (typeof (_e = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _e) || Object, (typeof (_f = typeof specifications_service_1.SpecificationsService !== 'undefined' && specifications_service_1.SpecificationsService) === 'function' && _f) || Object, (typeof (_g = typeof organizations_service_1.OrganizationsService !== 'undefined' && organizations_service_1.OrganizationsService) === 'function' && _g) || Object])
    ], SpecificationNewComponent);
    return SpecificationNewComponent;
    var _a, _b, _c, _d, _e, _f, _g;
}());
exports.SpecificationNewComponent = SpecificationNewComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Register new Specification for {{organization?.name}}\" baCardClass=\"with-scroll table-panel\">\r\n      <div *ngIf=\"organization?.mrn\">\r\n        <form>\r\n          <mc-file-uploader #uploadXml [caption]=\"captionXml\" [fileUploadType]=\"fileTypeXml\" [requiredText]=\"requiredTextXml\" (onUpload)=\"onUploadXml($event)\"></mc-file-uploader>\r\n          <mc-file-uploader [caption]=\"captionDoc\" [fileUploadType]=\"fileTypeDoc\" (onUpload)=\"onUploadDoc($event)\"></mc-file-uploader>\r\n          <div *ngIf=\"hasMrnError\" class=\"mc-form-error\" [innerHTML]=\"mrnErrorText | undefined | sanitizeHtml\"></div>\r\n          <ul class=\"btn-list clearfix\">\r\n            <li>\r\n              <mc-loading-button [class]=\"registerButtonClass\" [disabled]=\"!isFormValid\" [isLoading]=\"isRegistering\" [title]=\"registerTitle\" [onClick]=\"onRegister\" ></mc-loading-button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n      <sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n      <div class=\"no-data\" *ngIf=\"!organization?.mrn && !isLoading\">No data</div>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/specifications.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SpecificationsComponent = (function () {
    function SpecificationsComponent() {
    }
    SpecificationsComponent = __decorate([
        core_1.Component({
            selector: 'specifications',
            template: "<router-outlet></router-outlet>"
        }), 
        __metadata('design:paramtypes', [])
    ], SpecificationsComponent);
    return SpecificationsComponent;
}());
exports.SpecificationsComponent = SpecificationsComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/specifications.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var specifications_routing_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/specifications.routing.ts");
var specifications_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/specifications.component.ts");
var specification_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.component.ts");
var specification_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var specification_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.component.ts");
var SpecificationsModule = (function () {
    function SpecificationsModule() {
    }
    SpecificationsModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule,
                shared_module_1.SharedModule,
                specifications_routing_1.routing
            ],
            declarations: [
                specifications_component_1.SpecificationsComponent,
                specification_details_component_1.SpecificationDetailsComponent,
                specification_list_component_1.SpecificationListComponent,
                specification_new_component_1.SpecificationNewComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SpecificationsModule);
    return SpecificationsModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SpecificationsModule;


/***/ },

/***/ "./src/app/pages/org-service-registry/specifications/specifications.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var specifications_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/specifications.component.ts");
var specification_list_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-list/specification-list.component.ts");
var specification_details_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-details/specification-details.component.ts");
var specification_new_component_1 = __webpack_require__("./src/app/pages/org-service-registry/specifications/components/specification-new/specification-new.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: 'specifications',
        component: specifications_component_1.SpecificationsComponent,
        data: { breadcrumb: 'Specifications' },
        children: [
            {
                path: '',
                component: specification_list_component_1.SpecificationListComponent
            },
            {
                path: 'register',
                component: specification_new_component_1.SpecificationNewComponent,
                data: { breadcrumb: 'Register' }
            },
            {
                path: ':id',
                component: specification_details_component_1.SpecificationDetailsComponent,
                data: { breadcrumb: 'Details' }
            }
        ]
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/org-service-registry/sr-how-to/sr-how-to.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SrHowToComponent = (function () {
    function SrHowToComponent() {
    }
    SrHowToComponent.prototype.ngOnInit = function () {
    };
    SrHowToComponent = __decorate([
        core_1.Component({
            selector: 'sr-how-to',
            encapsulation: core_1.ViewEncapsulation.None,
            styles: [],
            template: __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.html")
        }), 
        __metadata('design:paramtypes', [])
    ], SrHowToComponent);
    return SrHowToComponent;
}());
exports.SrHowToComponent = SrHowToComponent;


/***/ },

/***/ "./src/app/pages/org-service-registry/sr-how-to/sr-how-to.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Service Registry - How to?\" baCardClass=\"with-scroll table-panel\">\r\n      <h5 style=\"margin-bottom: 2px;\">Guide on how to make services for the Maritime Cloud - Concepts and how to:</h5>\r\n      <a href=\"http://maritimecloud.net/docs/Service_Documentation_Guidelines.pdf\" class=\"learn-more\" target=\"_blank\">Service Specification Guideline</a>\r\n\r\n      <h5 style=\"margin-bottom: 2px; margin-top: 15px\">Service Specification template:</h5>\r\n      <a href=\"http://maritimecloud.net/docs/Service_Specification_Template.docx\" class=\"learn-more\" target=\"_blank\">Download Specification template</a>\r\n\r\n      <h5 style=\"margin-bottom: 2px; margin-top: 15px\">Service Technical Design template:</h5>\r\n      <a href=\"http://maritimecloud.net/docs/Service_Design_Description_Template.docx\" class=\"learn-more\" target=\"_blank\">Download Technical Design template</a>\r\n\r\n      <h5 style=\"margin-bottom: 2px; margin-top: 15px\">Service Instance template:</h5>\r\n      <a href=\"http://maritimecloud.net/docs/Service_Implementation_Description_Template.docx\" class=\"learn-more\" target=\"_blank\">Download Instance template</a>\r\n\r\n      <BR/>\r\n      <BR/>\r\n      If you have any questions or comments please find contact informations on the official <a href=\"http://maritimecloud.net\" class=\"learn-more\" target=\"_blank\">Maritime Cloud Homepage</a>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/org-service-registry/sr-how-to/sr-how-to.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var sr_how_to_routing_1 = __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.routing.ts");
var sr_how_to_component_1 = __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.component.ts");
var shared_module_1 = __webpack_require__("./src/app/pages/shared/shared.module.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var SrHowToModule = (function () {
    function SrHowToModule() {
    }
    SrHowToModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                shared_module_1.SharedModule,
                nga_module_1.NgaModule,
                sr_how_to_routing_1.routing
            ],
            declarations: [
                sr_how_to_component_1.SrHowToComponent
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SrHowToModule);
    return SrHowToModule;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SrHowToModule;


/***/ },

/***/ "./src/app/pages/org-service-registry/sr-how-to/sr-how-to.routing.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var sr_how_to_component_1 = __webpack_require__("./src/app/pages/org-service-registry/sr-how-to/sr-how-to.component.ts");
// noinspection TypeScriptValidateTypes
var routes = [
    {
        path: 'howto',
        component: sr_how_to_component_1.SrHowToComponent,
        data: { breadcrumb: 'How To?' },
        children: []
    }
];
exports.routing = router_1.RouterModule.forChild(routes);


/***/ },

/***/ "./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var router_1 = __webpack_require__("./node_modules/@angular/router/index.js");
var certificates_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/certificates.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var CertificateIssueNewComponent = (function () {
    function CertificateIssueNewComponent(fileHelper, certificateService, route, navigationHelper, notificationService) {
        this.fileHelper = fileHelper;
        this.certificateService = certificateService;
        this.route = route;
        this.navigationHelper = navigationHelper;
        this.notificationService = notificationService;
    }
    CertificateIssueNewComponent.prototype.ngOnInit = function () {
        this.isLoading = false;
        var entityType = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_TYPE];
        var entityMrn = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_MRN];
        var entityTitle = this.route.snapshot.queryParams[navigation_helper_service_1.queryKeys.ENTITY_TITLE];
        if (entityType == null || !entityMrn || !entityTitle) {
            this.notificationService.generateNotification("Error", "Unresolved state when trying to issue new certificate", mc_notifications_service_1.MCNotificationType.Error);
            this.navigationHelper.takeMeHome();
        }
        this.entityMrn = entityMrn;
        this.entityTitle = entityTitle;
        this.entityType = +entityType; // +-conversion from string to int
        this.generateLabelValues();
    };
    CertificateIssueNewComponent.prototype.zipAndDownload = function () {
        this.fileHelper.downloadPemCertificate(this.pemCertificate, this.entityTitle);
    };
    CertificateIssueNewComponent.prototype.issueNew = function () {
        var _this = this;
        this.isLoading = true;
        this.certificateService.issueNewCertificate(this.entityType, this.entityMrn).subscribe(function (pemCertificate) {
            _this.pemCertificate = pemCertificate;
            _this.isLoading = false;
        }, function (err) {
            _this.isLoading = false;
            _this.notificationService.generateNotification('Error', 'Error when trying to issue new certificate', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    CertificateIssueNewComponent.prototype.cancel = function () {
        this.navigationHelper.cancelNavigateCertificates();
    };
    CertificateIssueNewComponent.prototype.generateLabelValues = function () {
        this.labelValues = [];
        this.labelValues.push({ label: 'Name', valueHtml: this.entityTitle });
        this.labelValues.push({ label: 'MRN', valueHtml: this.entityMrn });
    };
    CertificateIssueNewComponent = __decorate([
        core_1.Component({
            selector: 'certificate-issue-new',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _a) || Object, (typeof (_b = typeof certificates_service_1.CertificatesService !== 'undefined' && certificates_service_1.CertificatesService) === 'function' && _b) || Object, (typeof (_c = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _c) || Object, (typeof (_d = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _d) || Object, (typeof (_e = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _e) || Object])
    ], CertificateIssueNewComponent);
    return CertificateIssueNewComponent;
    var _a, _b, _c, _d, _e;
}());
exports.CertificateIssueNewComponent = CertificateIssueNewComponent;


/***/ },

/***/ "./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.html":
/***/ function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <ba-card title=\"Issue new certificate\" baCardClass=\"with-scroll table-panel\">\r\n      <!-- Before issue -->\r\n      <div *ngIf=\"entityType != null && !pemCertificate && !isLoading\">\r\n        <h5>Issuing a new certificate for:</h5>\r\n        <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n        <ul *ngIf=\"entityType != null\" class=\"btn-list clearfix\">\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"issueNew()\">Issue Certificate</button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">Cancel</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <sk-fading-circle [isRunning]=\"isLoading\" ></sk-fading-circle>\r\n\r\n      <!-- After issue and success -->\r\n      <div *ngIf=\"pemCertificate\">\r\n        Certificate issued with success\r\n        <ul *ngIf=\"entityType != null\" class=\"btn-list clearfix\">\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"zipAndDownload()\">Download certificate</button>\r\n          </li>\r\n          <li>\r\n            <button type=\"button\" class=\"btn btn-default btn-raised\" (click)=\"cancel()\">OK</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </ba-card>\r\n  </div>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var theme_constants_1 = __webpack_require__("./src/app/theme/theme.constants.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var navigation_helper_service_1 = __webpack_require__("./src/app/shared/navigation-helper.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var CertificatesTableComponent = (function () {
    function CertificatesTableComponent(datePipe, fileHelper, navigationHelper, authService, certificateHelperService, notificationService) {
        this.datePipe = datePipe;
        this.fileHelper = fileHelper;
        this.navigationHelper = navigationHelper;
        this.authService = authService;
        this.certificateHelperService = certificateHelperService;
        this.notificationService = notificationService;
        this.newCertificateTitle = "Issue new Certificate";
        this.onIssueCertificate = this.issueCertificate.bind(this);
    }
    CertificatesTableComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.authService.authState.rolesLoaded) {
            this.authService.rolesLoaded.subscribe(function (mode) {
                _this.generateHeadersAndRows();
            });
        }
    };
    CertificatesTableComponent.prototype.ngOnChanges = function () {
        if (this.certificates) {
            this.certificateViewModels = this.certificateHelperService.convertCertificatesToViewModels(this.certificates);
            this.sortCertificates();
            this.generateHeadersAndRows();
        }
    };
    CertificatesTableComponent.prototype.generateHeadersAndRows = function () {
        var _this = this;
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Certificate', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Valid from', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Valid to', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: '', class: 'table-buttons' };
        tableHeaders.push(tableHeader);
        var _loop_1 = function(certificate) {
            cells = [];
            tableCell = { valueHtml: 'Certificate for ' + this_1.certificateTitle, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: this_1.datePipe.transform(certificate.start, theme_constants_1.DATE_FORMAT), class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: this_1.datePipe.transform(certificate.end, theme_constants_1.DATE_FORMAT), class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            if (certificate.revoked) {
                tableCell = { valueHtml: 'Revoked (' + certificate.revokeReasonText + ')', class: 'red-text', truncateNumber: 50 };
                cells.push(tableCell);
            }
            else {
                var actionButtons = [];
                var actionButton = { buttonClass: 'btn btn-primary btn-raised btn-sm', name: 'Download certificate', onClick: function () { _this.download(certificate); } };
                actionButtons.push(actionButton);
                if (this_1.isAdmin()) {
                    actionButton = { buttonClass: 'btn btn-danger btn-raised btn-sm', name: 'Revoke certificate', onClick: function () { _this.revoke(certificate); } };
                    actionButtons.push(actionButton);
                }
                var tableCellActionButtons = { valueHtml: '', class: 'table-buttons', truncateNumber: 0, actionButtons: actionButtons };
                cells.push(tableCellActionButtons);
            }
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        };
        var this_1 = this;
        var cells, tableCell;
        for (var _i = 0, _a = this.certificateViewModels; _i < _a.length; _i++) {
            var certificate = _a[_i];
            _loop_1(certificate);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    CertificatesTableComponent.prototype.sortCertificates = function () {
        // We are sorting with longest due date on top
        this.certificateViewModels.sort(function (obj1, obj2) {
            var obj1Time;
            var obj2Time;
            // Why is this needed??? for some reason sometimes the obj.end is a number and not a Date???
            if (typeof obj1.end === "Date") {
                obj1Time = obj1.end.getTime();
            }
            else {
                obj1Time = obj1.end;
            }
            if (typeof obj2.end === "Date") {
                obj2Time = obj2.end.getTime();
            }
            else {
                obj2Time = obj2.end;
            }
            if (obj1.revoked && obj2.revoked) {
                return obj2Time - obj1Time;
            }
            if (obj1.revoked) {
                return 1;
            }
            if (obj2.revoked) {
                return -1;
            }
            return obj2Time - obj1Time;
        });
    };
    CertificatesTableComponent.prototype.issueCertificate = function () {
        this.navigationHelper.navigateToIssueNewCertificate(this.certificateEntityType, this.entityMrn, this.certificateTitle);
    };
    CertificatesTableComponent.prototype.isAdmin = function () {
        return this.authService.authState.isAdmin();
    };
    CertificatesTableComponent.prototype.revoke = function (certificate) {
        this.notificationService.generateNotification('Not Implemented', 'Revoke coming soon', mc_notifications_service_1.MCNotificationType.Info);
    };
    CertificatesTableComponent.prototype.download = function (certificate) {
        var pemCertificate = { certificate: certificate.certificate };
        this.fileHelper.downloadPemCertificate(pemCertificate, this.certificateTitle);
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], CertificatesTableComponent.prototype, "certificates", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', (typeof (_a = typeof certificate_helper_service_1.CertificateEntityType !== 'undefined' && certificate_helper_service_1.CertificateEntityType) === 'function' && _a) || Object)
    ], CertificatesTableComponent.prototype, "certificateEntityType", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], CertificatesTableComponent.prototype, "entityMrn", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], CertificatesTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], CertificatesTableComponent.prototype, "certificateTitle", void 0);
    CertificatesTableComponent = __decorate([
        core_1.Component({
            selector: 'certificates-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.html"),
            styles: [__webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.scss")]
        }), 
        __metadata('design:paramtypes', [(typeof (_b = typeof common_1.DatePipe !== 'undefined' && common_1.DatePipe) === 'function' && _b) || Object, (typeof (_c = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _c) || Object, (typeof (_d = typeof navigation_helper_service_1.NavigationHelperService !== 'undefined' && navigation_helper_service_1.NavigationHelperService) === 'function' && _d) || Object, (typeof (_e = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _e) || Object, (typeof (_f = typeof certificate_helper_service_1.CertificateHelperService !== 'undefined' && certificate_helper_service_1.CertificateHelperService) === 'function' && _f) || Object, (typeof (_g = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _g) || Object])
    ], CertificatesTableComponent);
    return CertificatesTableComponent;
    var _a, _b, _c, _d, _e, _f, _g;
}());
exports.CertificatesTableComponent = CertificatesTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\"></mc-table>\r\n<div *ngIf=\"!isLoading\">\r\n  <mc-create-button [title]=\"newCertificateTitle\" [onClick]=\"onIssueCertificate\"></mc-create-button>\r\n</div>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/certificates-table/certificates-table.scss":
/***/ function(module, exports) {

module.exports = ".table-buttons {\n  width: 100%; }\n  .table-buttons button {\n    margin: 5px !important; }\n\n.certificate-table td {\n  vertical-align: middle; }\n\n.certificate-table td:first-child {\n  white-space: nowrap; }\n\n.certificate-table-short td {\n  vertical-align: middle; }\n\n.certificate-table-short td:first-child {\n  min-width: 200px; }\n"

/***/ },

/***/ "./src/app/pages/shared/components/designs-table/designs-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var DesignsTableComponent = (function () {
    function DesignsTableComponent() {
    }
    DesignsTableComponent.prototype.ngOnInit = function () {
    };
    DesignsTableComponent.prototype.ngOnChanges = function () {
        if (this.designs) {
            this.generateHeadersAndRows();
        }
    };
    DesignsTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.designs; _i < _a.length; _i++) {
            var design = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: design.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: design.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], DesignsTableComponent.prototype, "designs", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], DesignsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], DesignsTableComponent.prototype, "onRowClick", void 0);
    DesignsTableComponent = __decorate([
        core_1.Component({
            selector: 'designs-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/designs-table/designs-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], DesignsTableComponent);
    return DesignsTableComponent;
}());
exports.DesignsTableComponent = DesignsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/designs-table/designs-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/instances-table/instances-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var InstancesTableComponent = (function () {
    function InstancesTableComponent() {
    }
    InstancesTableComponent.prototype.ngOnInit = function () {
    };
    InstancesTableComponent.prototype.ngOnChanges = function () {
        if (this.instances) {
            this.generateHeadersAndRows();
        }
    };
    InstancesTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.instances; _i < _a.length; _i++) {
            var instance = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: instance.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: instance.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], InstancesTableComponent.prototype, "instances", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], InstancesTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], InstancesTableComponent.prototype, "onRowClick", void 0);
    InstancesTableComponent = __decorate([
        core_1.Component({
            selector: 'instances-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/instances-table/instances-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], InstancesTableComponent);
    return InstancesTableComponent;
}());
exports.InstancesTableComponent = InstancesTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/instances-table/instances-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var Organization_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/Organization.ts");
var organization_view_model_service_1 = __webpack_require__("./src/app/pages/shared/services/organization-view-model.service.ts");
var logo_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/logo.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var OrganizationDetailsTableComponent = (function () {
    function OrganizationDetailsTableComponent(authService, logoService, orgViewModelService, notifications) {
        this.authService = authService;
        this.logoService = logoService;
        this.orgViewModelService = orgViewModelService;
        this.notifications = notifications;
        this.displayLogo = true;
        this.onLogoLoaded = new core_1.EventEmitter();
        this.isLoadingOrgAndLogo = true;
        this.uploadingLogo = false;
    }
    OrganizationDetailsTableComponent.prototype.ngOnChanges = function () {
        if (this.organization) {
            this.canChangeLogo = this.canChangeTheLogo();
            this.loadLogo();
        }
    };
    OrganizationDetailsTableComponent.prototype.uploadLogo = function (logo) {
        var _this = this;
        var oldLogo = this.logo;
        this.uploadingLogo = true;
        this.logoService.uploadLogo(this.organization.mrn, logo).subscribe(function (logo) {
            _this.loadLogo();
        }, function (err) {
            _this.logo = oldLogo;
            _this.uploadingLogo = false;
            _this.notifications.generateNotification('Error', 'Error when trying to upload logo', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    OrganizationDetailsTableComponent.prototype.setLabelValues = function () {
        this.labelValues = this.orgViewModelService.generateLabelValuesForOrganization(this.organization);
        this.isLoadingOrgAndLogo = false;
    };
    OrganizationDetailsTableComponent.prototype.loadLogo = function () {
        var _this = this;
        this.logoService.getLogoForOrganization(this.organization.mrn).subscribe(function (logo) {
            _this.logo = URL.createObjectURL(new Blob([logo]));
            _this.setLabelValues();
            _this.uploadingLogo = false;
            _this.onLogoLoaded.emit('');
        }, function (err) {
            if (_this.canChangeTheLogo()) {
                _this.logo = 'assets/img/no_organization.png';
            }
            _this.setLabelValues();
            _this.uploadingLogo = false;
            _this.onLogoLoaded.emit('');
        });
    };
    OrganizationDetailsTableComponent.prototype.canChangeTheLogo = function () {
        return ((this.authService.authState.isAdmin() && this.authService.isMyOrg(this.organization.mrn)) || this.authService.authState.isSiteAdmin());
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], OrganizationDetailsTableComponent.prototype, "displayLogo", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], OrganizationDetailsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', (typeof (_a = typeof Organization_1.Organization !== 'undefined' && Organization_1.Organization) === 'function' && _a) || Object)
    ], OrganizationDetailsTableComponent.prototype, "organization", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', (typeof (_b = typeof core_1.EventEmitter !== 'undefined' && core_1.EventEmitter) === 'function' && _b) || Object)
    ], OrganizationDetailsTableComponent.prototype, "onLogoLoaded", void 0);
    OrganizationDetailsTableComponent = __decorate([
        core_1.Component({
            selector: 'organization-details-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_c = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _c) || Object, (typeof (_d = typeof logo_service_1.LogoService !== 'undefined' && logo_service_1.LogoService) === 'function' && _d) || Object, (typeof (_e = typeof organization_view_model_service_1.OrganizationViewModelService !== 'undefined' && organization_view_model_service_1.OrganizationViewModelService) === 'function' && _e) || Object, (typeof (_f = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _f) || Object])
    ], OrganizationDetailsTableComponent);
    return OrganizationDetailsTableComponent;
    var _a, _b, _c, _d, _e, _f;
}());
exports.OrganizationDetailsTableComponent = OrganizationDetailsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/organizaton-details-table/organization-details-table.html":
/***/ function(module, exports) {

module.exports = "<div *ngIf=\"displayLogo && logo\" style=\"margin-bottom: 10px;\">\r\n  <img class=\"logo-image-no-center\" [attr.src]=\"logo | sanitizeUrl\" *ngIf=\"logo && !canChangeLogo\">\r\n  <mc-logo-uploader [logo]=\"logo\" [uploadingLogo]=\"uploadingLogo\" (onUpload)=\"uploadLogo($event)\" *ngIf=\"logo && canChangeLogo\"></mc-logo-uploader>\r\n</div>\r\n<mc-label-value-table [isLoading]=\"isLoadingOrgAndLogo\" [labelValues]=\"labelValues\"></mc-label-value-table>"

/***/ },

/***/ "./src/app/pages/shared/components/service-details-view/service-details-view.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var Service_1 = __webpack_require__("./src/app/backend-api/identity-registry/autogen/model/Service.ts");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var file_helper_service_1 = __webpack_require__("./src/app/shared/file-helper.service.ts");
var auth_service_1 = __webpack_require__("./src/app/authentication/services/auth.service.ts");
var ServiceViewModel_1 = __webpack_require__("./src/app/pages/org-identity-registry/services/view-models/ServiceViewModel.ts");
var mc_notifications_service_1 = __webpack_require__("./src/app/shared/mc-notifications.service.ts");
var id_services_service_1 = __webpack_require__("./src/app/backend-api/identity-registry/services/id-services.service.ts");
var ServiceDetailsViewComponent = (function () {
    function ServiceDetailsViewComponent(fileHelperService, authService, servicesService, notifications) {
        this.fileHelperService = fileHelperService;
        this.authService = authService;
        this.servicesService = servicesService;
        this.notifications = notifications;
        this.shouldShowDelete = true;
        this.shouldShowUpdate = true;
        this.deleteAction = new core_1.EventEmitter();
        this.updateAction = new core_1.EventEmitter();
    }
    ServiceDetailsViewComponent.prototype.ngOnInit = function () {
        this.entityType = certificate_helper_service_1.CertificateEntityType.Service;
    };
    ServiceDetailsViewComponent.prototype.ngOnChanges = function () {
        if (this.service) {
            this.generateLabelValues();
        }
    };
    ServiceDetailsViewComponent.prototype.downloadXML = function () {
        var _this = this;
        this.servicesService.getIdServiceJbossXml(this.service.mrn).subscribe(function (xmlString) {
            _this.fileHelperService.downloadFile(xmlString, 'text/xml', 'keycloak-oidc-subsystem.xml');
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to download the XML', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceDetailsViewComponent.prototype.downloadJSON = function () {
        var _this = this;
        this.servicesService.getServiceKeycloakJson(this.service.mrn).subscribe(function (jsonString) {
            _this.fileHelperService.downloadFile(jsonString, 'text/json', 'keycloak.json');
        }, function (err) {
            _this.isLoading = false;
            _this.notifications.generateNotification('Error', 'Error when trying to download the JSON', mc_notifications_service_1.MCNotificationType.Error, err);
        });
    };
    ServiceDetailsViewComponent.prototype.generateLabelValues = function () {
        this.labelValues = [];
        if (this.service) {
            this.labelValues.push({ label: 'MRN', valueHtml: this.service.mrn });
            this.labelValues.push({ label: 'Name', valueHtml: this.service.name });
            this.labelValues.push({ label: 'Permissions', valueHtml: this.service.permissions });
            this.labelValues.push({ label: 'Certificate domain name', valueHtml: this.service.certDomainName });
            if (this.service.oidcRedirectUri) {
                this.labelValues.push({ label: 'OIDC Redirect URI', valueHtml: this.service.oidcRedirectUri });
                this.labelValues.push({ label: 'OIDC Client ID', valueHtml: this.service.oidcClientId });
                this.labelValues.push({ label: 'OIDC Client Secret', valueHtml: this.service.oidcClientSecret });
                this.labelValues.push({ label: 'Access type', valueHtml: ServiceViewModel_1.ServiceViewModel.getLabelForEnum(this.service.oidcAccessType) });
            }
        }
    };
    ServiceDetailsViewComponent.prototype.showDelete = function () {
        return this.shouldShowDelete && this.isAdmin() && this.service != null;
    };
    ServiceDetailsViewComponent.prototype.showUpdate = function () {
        return this.shouldShowUpdate && this.isAdmin() && this.service != null;
    };
    ServiceDetailsViewComponent.prototype.isAdmin = function () {
        return this.authService.authState.isAdmin();
    };
    ServiceDetailsViewComponent.prototype.delete = function () {
        this.deleteAction.emit('');
    };
    ServiceDetailsViewComponent.prototype.update = function () {
        this.updateAction.emit('');
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', (typeof (_a = typeof Service_1.Service !== 'undefined' && Service_1.Service) === 'function' && _a) || Object)
    ], ServiceDetailsViewComponent.prototype, "service", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], ServiceDetailsViewComponent.prototype, "shouldShowDelete", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], ServiceDetailsViewComponent.prototype, "shouldShowUpdate", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], ServiceDetailsViewComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], ServiceDetailsViewComponent.prototype, "title", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', (typeof (_b = typeof core_1.EventEmitter !== 'undefined' && core_1.EventEmitter) === 'function' && _b) || Object)
    ], ServiceDetailsViewComponent.prototype, "deleteAction", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', (typeof (_c = typeof core_1.EventEmitter !== 'undefined' && core_1.EventEmitter) === 'function' && _c) || Object)
    ], ServiceDetailsViewComponent.prototype, "updateAction", void 0);
    ServiceDetailsViewComponent = __decorate([
        core_1.Component({
            selector: 'service-details-view',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/service-details-view/service-details-view.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [(typeof (_d = typeof file_helper_service_1.FileHelperService !== 'undefined' && file_helper_service_1.FileHelperService) === 'function' && _d) || Object, (typeof (_e = typeof auth_service_1.AuthService !== 'undefined' && auth_service_1.AuthService) === 'function' && _e) || Object, (typeof (_f = typeof id_services_service_1.IdServicesService !== 'undefined' && id_services_service_1.IdServicesService) === 'function' && _f) || Object, (typeof (_g = typeof mc_notifications_service_1.MCNotificationsService !== 'undefined' && mc_notifications_service_1.MCNotificationsService) === 'function' && _g) || Object])
    ], ServiceDetailsViewComponent);
    return ServiceDetailsViewComponent;
    var _a, _b, _c, _d, _e, _f, _g;
}());
exports.ServiceDetailsViewComponent = ServiceDetailsViewComponent;


/***/ },

/***/ "./src/app/pages/shared/components/service-details-view/service-details-view.html":
/***/ function(module, exports) {

module.exports = "<ba-card title=\"{{title}}\" baCardClass=\"with-scroll table-panel\">\r\n  <mc-label-value-table [isLoading]=\"isLoading\" [labelValues]=\"labelValues\"></mc-label-value-table>\r\n  <ul *ngIf=\"!isLoading && service && (this.service.oidcRedirectUri || showDelete() || showUpdate())\" class=\"btn-list clearfix\">\r\n    <li *ngIf=\"this.service.oidcRedirectUri\">\r\n      <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadXML()\">Download JBOSS XML</button>\r\n    </li>\r\n    <li *ngIf=\"this.service.oidcRedirectUri\">\r\n      <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"downloadJSON()\">Download Keycloak JSON</button>\r\n    </li>\r\n    <li *ngIf=\"showUpdate()\">\r\n      <button type=\"button\" class=\"btn btn-primary btn-raised\" (click)=\"update()\">Update</button>\r\n    </li>\r\n    <li *ngIf=\"showDelete()\">\r\n      <button type=\"button\" class=\"btn btn-danger btn-raised\" (click)=\"delete()\">Delete Service</button>\r\n    </li>\r\n  </ul>\r\n</ba-card>\r\n\r\n<div *ngIf=\"service\">\r\n  <ba-card title=\"Certificates for {{service.name}}\" baCardClass=\"with-scroll table-panel\">\r\n    <certificates-table [entityMrn]=\"service.mrn\" [isLoading]=\"isLoading\" [certificateTitle]=\"service.name\" [certificateEntityType]=\"entityType\" [certificates]=\"service.certificates\"></certificates-table>\r\n  </ba-card>\r\n</div>\r\n\r\n"

/***/ },

/***/ "./src/app/pages/shared/components/specifications-table/specifications-table.component.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var SpecificationsTableComponent = (function () {
    function SpecificationsTableComponent() {
    }
    SpecificationsTableComponent.prototype.ngOnInit = function () {
    };
    SpecificationsTableComponent.prototype.ngOnChanges = function () {
        if (this.specifications) {
            this.generateHeadersAndRows();
        }
    };
    SpecificationsTableComponent.prototype.generateHeadersAndRows = function () {
        var tableHeaders = [];
        var tableRows = [];
        var tableHeader = { title: 'Name', class: '' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Version', class: 'nowrap align-center' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Status', class: 'nowrap' };
        tableHeaders.push(tableHeader);
        tableHeader = { title: 'Description', class: '' };
        tableHeaders.push(tableHeader);
        for (var _i = 0, _a = this.specifications; _i < _a.length; _i++) {
            var specification = _a[_i];
            var cells = [];
            var tableCell = { valueHtml: specification.name, class: '', truncateNumber: 50 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.version, class: 'nowrap align-center', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.status, class: 'nowrap', truncateNumber: 0 };
            cells.push(tableCell);
            tableCell = { valueHtml: specification.description, class: 'table-description', truncateNumber: 250 };
            cells.push(tableCell);
            var tableRow = { cells: cells };
            tableRows.push(tableRow);
        }
        this.tableHeaders = tableHeaders;
        this.tableRows = tableRows;
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], SpecificationsTableComponent.prototype, "specifications", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], SpecificationsTableComponent.prototype, "isLoading", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Function)
    ], SpecificationsTableComponent.prototype, "onRowClick", void 0);
    SpecificationsTableComponent = __decorate([
        core_1.Component({
            selector: 'specifications-table',
            encapsulation: core_1.ViewEncapsulation.None,
            template: __webpack_require__("./src/app/pages/shared/components/specifications-table/specifications-table.html"),
            styles: []
        }), 
        __metadata('design:paramtypes', [])
    ], SpecificationsTableComponent);
    return SpecificationsTableComponent;
}());
exports.SpecificationsTableComponent = SpecificationsTableComponent;


/***/ },

/***/ "./src/app/pages/shared/components/specifications-table/specifications-table.html":
/***/ function(module, exports) {

module.exports = "<mc-table [tableHeaders]=\"tableHeaders\" [tableRows]=\"tableRows\" [isLoading]=\"isLoading\" [onRowClick]=\"onRowClick\"></mc-table>\r\n"

/***/ },

/***/ "./src/app/pages/shared/services/organization-view-model.service.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var OrganizationViewModelService = (function () {
    function OrganizationViewModelService() {
    }
    OrganizationViewModelService.prototype.ngOnInit = function () {
    };
    OrganizationViewModelService.prototype.generateLabelValuesForOrganization = function (organization) {
        var labelValues = undefined;
        if (organization) {
            labelValues = [];
            labelValues.push({ label: 'MRN', valueHtml: organization.mrn });
            labelValues.push({ label: 'Name', valueHtml: organization.name });
            labelValues.push({ label: 'Address', valueHtml: organization.address });
            labelValues.push({ label: 'Country', valueHtml: organization.country });
            if (organization.email) {
                labelValues.push({ label: 'Email', valueHtml: "<a href='mailto:" + organization.email + "'>" + organization.email + "</a>" });
            }
            if (organization.url) {
                labelValues.push({ label: 'Website', valueHtml: "<a href='" + organization.url + "' target='_blank'>" + organization.url + "</a>" });
            }
        }
        return labelValues;
    };
    OrganizationViewModelService = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], OrganizationViewModelService);
    return OrganizationViewModelService;
}());
exports.OrganizationViewModelService = OrganizationViewModelService;


/***/ },

/***/ "./src/app/pages/shared/shared.module.ts":
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";
var core_1 = __webpack_require__("./node_modules/@angular/core/index.js");
var common_1 = __webpack_require__("./node_modules/@angular/common/index.js");
var designs_table_component_1 = __webpack_require__("./src/app/pages/shared/components/designs-table/designs-table.component.ts");
var specifications_table_component_1 = __webpack_require__("./src/app/pages/shared/components/specifications-table/specifications-table.component.ts");
var nga_module_1 = __webpack_require__("./src/app/theme/nga.module.ts");
var instances_table_component_1 = __webpack_require__("./src/app/pages/shared/components/instances-table/instances-table.component.ts");
var sr_view_model_service_1 = __webpack_require__("./src/app/pages/org-service-registry/shared/services/sr-view-model.service.ts");
var certificates_table_component_1 = __webpack_require__("./src/app/pages/shared/components/certificates-table/certificates-table.component.ts");
var certificate_helper_service_1 = __webpack_require__("./src/app/pages/shared/services/certificate-helper.service.ts");
var organization_details_table_component_1 = __webpack_require__("./src/app/pages/shared/components/organizaton-details-table/organization-details-table.component.ts");
var organization_view_model_service_1 = __webpack_require__("./src/app/pages/shared/services/organization-view-model.service.ts");
var certificate_issue_new_component_1 = __webpack_require__("./src/app/pages/shared/components/certificate-issue-new/certificate-issue-new.component.ts");
var service_details_view_component_1 = __webpack_require__("./src/app/pages/shared/components/service-details-view/service-details-view.component.ts");
var SharedModule = (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                nga_module_1.NgaModule
            ],
            declarations: [
                designs_table_component_1.DesignsTableComponent,
                instances_table_component_1.InstancesTableComponent,
                specifications_table_component_1.SpecificationsTableComponent,
                certificates_table_component_1.CertificatesTableComponent,
                organization_details_table_component_1.OrganizationDetailsTableComponent,
                certificate_issue_new_component_1.CertificateIssueNewComponent,
                service_details_view_component_1.ServiceDetailsViewComponent
            ],
            exports: [
                organization_details_table_component_1.OrganizationDetailsTableComponent,
                designs_table_component_1.DesignsTableComponent,
                instances_table_component_1.InstancesTableComponent,
                specifications_table_component_1.SpecificationsTableComponent,
                certificates_table_component_1.CertificatesTableComponent,
                certificate_issue_new_component_1.CertificateIssueNewComponent,
                service_details_view_component_1.ServiceDetailsViewComponent
            ],
            providers: [
                sr_view_model_service_1.SrViewModelService,
                certificate_helper_service_1.CertificateHelperService,
                organization_view_model_service_1.OrganizationViewModelService
            ]
        }), 
        __metadata('design:paramtypes', [])
    ], SharedModule);
    return SharedModule;
}());
exports.SharedModule = SharedModule;


/***/ },

/***/ "./src/app/shared/enums-helper.ts":
/***/ function(module, exports) {

"use strict";
"use strict";
var EnumsHelper = (function () {
    function EnumsHelper() {
    }
    EnumsHelper.getKeysAndValuesFromEnum = function (myEnum) {
        var enumKeysAndValues = [];
        var keysAndValues = [];
        for (var enumValue in myEnum) {
            var enumsKeysAndValuesLength = keysAndValues.length;
            if (enumsKeysAndValuesLength === 0) {
                keysAndValues.push([enumValue, myEnum[enumValue]]);
                enumKeysAndValues.push({ key: enumValue, value: myEnum[enumValue] });
            }
            else {
                if (keysAndValues[enumsKeysAndValuesLength - 1][1] !== enumValue) {
                    keysAndValues.push([enumValue, myEnum[enumValue]]);
                    enumKeysAndValues.push({ key: enumValue, value: myEnum[enumValue] });
                }
            }
        }
        return enumKeysAndValues;
    };
    return EnumsHelper;
}());
exports.EnumsHelper = EnumsHelper;


/***/ }

});
//# sourceMappingURL=0.map